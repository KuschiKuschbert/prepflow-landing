-- PrepFlow Create Missing Tables
-- Run this in your Supabase SQL Editor to create missing tables

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create ai_specials table
CREATE TABLE IF NOT EXISTS ai_specials (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  special_name VARCHAR(255) NOT NULL,
  description TEXT,
  suggested_price DECIMAL(10,2),
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create ai_specials_ingredients table
CREATE TABLE IF NOT EXISTS ai_specials_ingredients (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  ai_special_id UUID REFERENCES ai_specials(id) ON DELETE CASCADE,
  ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE,
  quantity DECIMAL(10,3) NOT NULL,
  unit VARCHAR(50) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Add missing columns to existing tables

-- Fix cleaning_areas table
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS area_name VARCHAR(255);
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS cleaning_frequency VARCHAR(50);
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix cleaning_tasks table
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS area_id UUID REFERENCES cleaning_areas(id) ON DELETE CASCADE;
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS task_name VARCHAR(255);
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS frequency VARCHAR(50);
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS estimated_duration_minutes INTEGER;
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix suppliers table (add missing columns to existing structure)
ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS supplier_name VARCHAR(255);
ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS contact_person VARCHAR(255);
ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS email VARCHAR(255);
ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS phone VARCHAR(50);
ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS address TEXT;

-- Fix compliance_types table
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS type_name VARCHAR(255);
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS frequency VARCHAR(50);
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix compliance_records table
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS compliance_type_id UUID REFERENCES compliance_types(id) ON DELETE CASCADE;
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS record_date DATE;
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS status VARCHAR(50);
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS notes TEXT;
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS recorded_by VARCHAR(255);
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix par_levels table
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE;
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS minimum_level DECIMAL(10,3);
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS maximum_level DECIMAL(10,3);
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS current_stock DECIMAL(10,3) DEFAULT 0;
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS unit VARCHAR(50);
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS last_updated TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE par_levels ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix order_lists table
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS order_date DATE DEFAULT CURRENT_DATE;
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS supplier_id UUID REFERENCES suppliers(id);
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'pending';
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS total_amount DECIMAL(10,2);
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix order_items table
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS order_list_id UUID REFERENCES order_lists(id) ON DELETE CASCADE;
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE;
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS quantity_ordered DECIMAL(10,3);
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS unit VARCHAR(50);
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS unit_price DECIMAL(10,4);
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS total_price DECIMAL(10,2);
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE order_items ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix kitchen_sections table
ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS section_name VARCHAR(255);
ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS description TEXT;
ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true;
ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix prep_lists table
ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS prep_date DATE DEFAULT CURRENT_DATE;
ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS section_id UUID REFERENCES kitchen_sections(id);
ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'pending';
ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix prep_list_items table
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS prep_list_id UUID REFERENCES prep_lists(id) ON DELETE CASCADE;
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE;
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS quantity_needed DECIMAL(10,3);
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS unit VARCHAR(50);
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS is_completed BOOLEAN DEFAULT false;
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix users table
ALTER TABLE users ADD COLUMN IF NOT EXISTS email VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS password_hash VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS first_name VARCHAR(100);
ALTER TABLE users ADD COLUMN IF NOT EXISTS last_name VARCHAR(100);
ALTER TABLE users ADD COLUMN IF NOT EXISTS business_name VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS subscription_status VARCHAR(50) DEFAULT 'trial';
ALTER TABLE users ADD COLUMN IF NOT EXISTS subscription_expires TIMESTAMP WITH TIME ZONE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS stripe_customer_id VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS email_verified BOOLEAN DEFAULT FALSE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS email_verification_token VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS email_verification_expires TIMESTAMP WITH TIME ZONE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS password_reset_token VARCHAR(255);
ALTER TABLE users ADD COLUMN IF NOT EXISTS password_reset_expires TIMESTAMP WITH TIME ZONE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS failed_login_attempts INTEGER DEFAULT 0;
ALTER TABLE users ADD COLUMN IF NOT EXISTS locked_until TIMESTAMP WITH TIME ZONE;
ALTER TABLE users ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
ALTER TABLE users ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();

-- Fix temperature_logs table (add missing columns to existing structure)
ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS equipment_id UUID REFERENCES temperature_equipment(id) ON DELETE CASCADE;
ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS recorded_by VARCHAR(255);
