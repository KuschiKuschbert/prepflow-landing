{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/check-table-structure/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createSupabaseAdmin } from '@/lib/supabase';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabaseAdmin = createSupabaseAdmin();\n    \n    const tables = ['ingredients', 'recipes', 'recipe_ingredients', 'menu_dishes', 'users'];\n    const results = [];\n    \n    for (const tableName of tables) {\n      try {\n        // Get table structure by querying information_schema\n        const { data, error } = await supabaseAdmin\n          .from('information_schema.columns')\n          .select('column_name, data_type, is_nullable, column_default')\n          .eq('table_name', tableName)\n          .eq('table_schema', 'public')\n          .order('ordinal_position');\n\n        if (error) {\n          results.push({ \n            table: tableName, \n            status: 'error', \n            error: error.message \n          });\n        } else {\n          results.push({ \n            table: tableName, \n            status: 'success', \n            columns: data \n          });\n        }\n      } catch (err) {\n        results.push({ \n          table: tableName, \n          status: 'error', \n          error: err instanceof Error ? err.message : 'Unknown error' \n        });\n      }\n    }\n\n    return NextResponse.json({ \n      success: true, \n      message: 'Table structure analysis completed',\n      results: results\n    });\n\n  } catch (err) {\n    console.error('Unexpected error:', err);\n    return NextResponse.json({ \n      error: 'Internal server error',\n      details: err instanceof Error ? err.message : 'Unknown error'\n    }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,gBAAgB,CAAA,GAAA,iHAAA,CAAA,sBAAmB,AAAD;QAExC,MAAM,SAAS;YAAC;YAAe;YAAW;YAAsB;YAAe;SAAQ;QACvF,MAAM,UAAU,EAAE;QAElB,KAAK,MAAM,aAAa,OAAQ;YAC9B,IAAI;gBACF,qDAAqD;gBACrD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,cAC3B,IAAI,CAAC,8BACL,MAAM,CAAC,uDACP,EAAE,CAAC,cAAc,WACjB,EAAE,CAAC,gBAAgB,UACnB,KAAK,CAAC;gBAET,IAAI,OAAO;oBACT,QAAQ,IAAI,CAAC;wBACX,OAAO;wBACP,QAAQ;wBACR,OAAO,MAAM,OAAO;oBACtB;gBACF,OAAO;oBACL,QAAQ,IAAI,CAAC;wBACX,OAAO;wBACP,QAAQ;wBACR,SAAS;oBACX;gBACF;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC;oBACX,OAAO;oBACP,QAAQ;oBACR,OAAO,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,SAAS;QACX;IAEF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}