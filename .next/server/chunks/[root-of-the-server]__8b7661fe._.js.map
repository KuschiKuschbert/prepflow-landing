{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/setup-database/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createSupabaseAdmin } from '@/lib/supabase';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabaseAdmin = createSupabaseAdmin();\n    \n    // Check if ingredients table exists by trying to query it\n    const { data: testData, error: testError } = await supabaseAdmin\n      .from('ingredients')\n      .select('id')\n      .limit(1);\n\n    if (testError) {\n      console.error('Table check error:', testError);\n      return NextResponse.json({ \n        error: 'Database tables do not exist',\n        message: 'Please create the database tables first using the create-tables API endpoint',\n        instructions: 'Visit /api/create-tables to get the SQL script, then run it in your Supabase dashboard',\n        errorDetails: testError\n      }, { status: 400 });\n    }\n\n    // Sample ingredients data (first 10 items for testing)\n    const ingredientsData = [\n      {\n        name: \"Burger Patties\",\n        brand: \"Angel Bay\",\n        pack_size: 45,\n        unit: \"PC\",\n        cost_per_unit: 2.690,\n        trim_peel_waste_percent: 1.00,\n        yield_percent: 99.00,\n        supplier: \"PFD\",\n        storage: \"FROZEN\",\n        product_code: \"\"\n      },\n      {\n        name: \"Aioli\",\n        brand: \"\",\n        pack_size: 2500,\n        unit: \"ML\",\n        cost_per_unit: 0.009,\n        trim_peel_waste_percent: 1.00,\n        yield_percent: 99.00,\n        supplier: \"BIDFOOD\",\n        storage: \"COLDROOM\",\n        product_code: \"\"\n      },\n      {\n        name: \"Anchovy Fillets\",\n        brand: \"\",\n        pack_size: 720,\n        unit: \"GM\",\n        cost_per_unit: 0.018,\n        trim_peel_waste_percent: 34.00,\n        yield_percent: 66.00,\n        supplier: \"PFD\",\n        storage: \"DRYSTORE\",\n        product_code: \"\"\n      },\n      {\n        name: \"Apple Juice\",\n        brand: \"\",\n        pack_size: 2000,\n        unit: \"ML\",\n        cost_per_unit: 0.002,\n        trim_peel_waste_percent: 8.00,\n        yield_percent: 92.00,\n        supplier: \"PFD\",\n        storage: \"DRYSTORE\",\n        product_code: \"\"\n      },\n      {\n        name: \"Apples\",\n        brand: \"\",\n        pack_size: 1000,\n        unit: \"GM\",\n        cost_per_unit: 0.004,\n        trim_peel_waste_percent: 5.00,\n        yield_percent: 95.00,\n        supplier: \"GROWERS\",\n        storage: \"COLDROOM\",\n        product_code: \"\"\n      },\n      {\n        name: \"Avocado\",\n        brand: \"\",\n        pack_size: 1,\n        unit: \"PC\",\n        cost_per_unit: 2.300,\n        trim_peel_waste_percent: 16.00,\n        yield_percent: 84.00,\n        supplier: \"GROWERS\",\n        storage: \"COLDROOM\",\n        product_code: \"\"\n      },\n      {\n        name: \"Balsamic Glaze\",\n        brand: \"\",\n        pack_size: 500,\n        unit: \"GM\",\n        cost_per_unit: 0.023,\n        trim_peel_waste_percent: 34.00,\n        yield_percent: 66.00,\n        supplier: \"PFD\",\n        storage: \"DRYSTORE\",\n        product_code: \"\"\n      },\n      {\n        name: \"Balsamic Vinegar\",\n        brand: \"\",\n        pack_size: 5000,\n        unit: \"ML\",\n        cost_per_unit: 0.004,\n        trim_peel_waste_percent: 25.00,\n        yield_percent: 75.00,\n        supplier: \"PFD\",\n        storage: \"DRYSTORE\",\n        product_code: \"\"\n      },\n      {\n        name: \"Banana\",\n        brand: \"\",\n        pack_size: 1000,\n        unit: \"GM\",\n        cost_per_unit: 0.003,\n        trim_peel_waste_percent: 19.00,\n        yield_percent: 81.00,\n        supplier: \"GROWERS\",\n        storage: \"FRUIT/VEG\",\n        product_code: \"\"\n      },\n      {\n        name: \"Barramundi Fillet Skin Off\",\n        brand: \"\",\n        pack_size: 5000,\n        unit: \"GM\",\n        cost_per_unit: 0.016,\n        trim_peel_waste_percent: 17.00,\n        yield_percent: 83.00,\n        supplier: \"PFD\",\n        storage: \"FISH FROZEN\",\n        product_code: \"\"\n      }\n    ];\n\n    // Insert ingredients\n    const { data, error } = await supabaseAdmin\n      .from('ingredients')\n      .insert(ingredientsData);\n\n    if (error) {\n      console.error('Error inserting ingredients:', error);\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    return NextResponse.json({ \n      success: true, \n      message: `Successfully inserted ${ingredientsData.length} ingredients!`,\n      data: data \n    });\n\n  } catch (err) {\n    console.error('Unexpected error:', err);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}