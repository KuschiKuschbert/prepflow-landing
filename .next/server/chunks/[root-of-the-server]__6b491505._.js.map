{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/sample-ingredients-updated.ts"],"sourcesContent":["// Comprehensive Australian kitchen ingredients with realistic prices - Updated for actual table structure\nexport const sampleIngredients = [\n  // MEAT & PROTEIN\n  { \n    ingredient_name: \"Beef Mince Premium\", \n    brand: \"Coles\", \n    pack_size: 500, \n    unit: \"GM\", \n    cost_per_unit: 0.012, \n    trim_peel_waste_percentage: 2.00, \n    yield_percentage: 98.00, \n    supplier: \"Coles\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.012,\n    cost_per_unit_incl_trim: 0.0122,\n    min_stock_level: 5.0,\n    current_stock: 10.0,\n  },\n  { \n    ingredient_name: \"Chicken Breast Skinless\", \n    brand: \"Lilydale\", \n    pack_size: 1000, \n    unit: \"GM\", \n    cost_per_unit: 0.008, \n    trim_peel_waste_percentage: 5.00, \n    yield_percentage: 95.00, \n    supplier: \"Woolworths\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.008,\n    cost_per_unit_incl_trim: 0.0084,\n    min_stock_level: 8.0,\n    current_stock: 15.0,\n  },\n  { \n    ingredient_name: \"Pork Belly\", \n    brand: \"Local Butcher\", \n    pack_size: 2000, \n    unit: \"GM\", \n    cost_per_unit: 0.015, \n    trim_peel_waste_percentage: 8.00, \n    yield_percentage: 92.00, \n    supplier: \"Local Butcher\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.015,\n    cost_per_unit_incl_trim: 0.0163,\n    min_stock_level: 3.0,\n    current_stock: 6.0,\n  },\n  { \n    ingredient_name: \"Lamb Shoulder\", \n    brand: \"Local Butcher\", \n    pack_size: 3000, \n    unit: \"GM\", \n    cost_per_unit: 0.018, \n    trim_peel_waste_percentage: 10.00, \n    yield_percentage: 90.00, \n    supplier: \"Local Butcher\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.018,\n    cost_per_unit_incl_trim: 0.0200,\n    min_stock_level: 2.0,\n    current_stock: 4.0,\n  },\n  { \n    ingredient_name: \"Salmon Fillet\", \n    brand: \"Tassal\", \n    pack_size: 1000, \n    unit: \"GM\", \n    cost_per_unit: 0.025, \n    trim_peel_waste_percentage: 3.00, \n    yield_percentage: 97.00, \n    supplier: \"Seafood Direct\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.025,\n    cost_per_unit_incl_trim: 0.0258,\n    min_stock_level: 4.0,\n    current_stock: 8.0,\n  },\n  { \n    ingredient_name: \"Prawns Raw\", \n    brand: \"Banana Prawns\", \n    pack_size: 1000, \n    unit: \"GM\", \n    cost_per_unit: 0.022, \n    trim_peel_waste_percentage: 15.00, \n    yield_percentage: 85.00, \n    supplier: \"Seafood Direct\", \n    storage_location: \"FROZEN\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.022,\n    cost_per_unit_incl_trim: 0.0259,\n    min_stock_level: 3.0,\n    current_stock: 6.0,\n  },\n  { \n    ingredient_name: \"Eggs Free Range\", \n    brand: \"Farm Fresh\", \n    pack_size: 30, \n    unit: \"PC\", \n    cost_per_unit: 0.45, \n    trim_peel_waste_percentage: 0.00, \n    yield_percentage: 100.00, \n    supplier: \"Local Farm\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.45,\n    cost_per_unit_incl_trim: 0.45,\n    min_stock_level: 2.0,\n    current_stock: 5.0,\n  },\n  \n  // VEGETABLES\n  { \n    ingredient_name: \"Onions Brown\", \n    brand: \"Local Grower\", \n    pack_size: 2000, \n    unit: \"GM\", \n    cost_per_unit: 0.002, \n    trim_peel_waste_percentage: 12.00, \n    yield_percentage: 88.00, \n    supplier: \"Local Grower\", \n    storage_location: \"DRYSTORE\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.002,\n    cost_per_unit_incl_trim: 0.0023,\n    min_stock_level: 10.0,\n    current_stock: 20.0,\n  },\n  { \n    ingredient_name: \"Garlic\", \n    brand: \"Local Grower\", \n    pack_size: 500, \n    unit: \"GM\", \n    cost_per_unit: 0.008, \n    trim_peel_waste_percentage: 20.00, \n    yield_percentage: 80.00, \n    supplier: \"Local Grower\", \n    storage_location: \"DRYSTORE\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.008,\n    cost_per_unit_incl_trim: 0.0100,\n    min_stock_level: 2.0,\n    current_stock: 5.0,\n  },\n  { \n    ingredient_name: \"Carrots\", \n    brand: \"Local Grower\", \n    pack_size: 2000, \n    unit: \"GM\", \n    cost_per_unit: 0.003, \n    trim_peel_waste_percentage: 8.00, \n    yield_percentage: 92.00, \n    supplier: \"Local Grower\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.003,\n    cost_per_unit_incl_trim: 0.0033,\n    min_stock_level: 8.0,\n    current_stock: 15.0,\n  },\n  { \n    ingredient_name: \"Celery\", \n    brand: \"Local Grower\", \n    pack_size: 1000, \n    unit: \"GM\", \n    cost_per_unit: 0.004, \n    trim_peel_waste_percentage: 10.00, \n    yield_percentage: 90.00, \n    supplier: \"Local Grower\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.004,\n    cost_per_unit_incl_trim: 0.0044,\n    min_stock_level: 5.0,\n    current_stock: 10.0,\n  },\n  { \n    ingredient_name: \"Tomatoes Roma\", \n    brand: \"Local Grower\", \n    pack_size: 2000, \n    unit: \"GM\", \n    cost_per_unit: 0.005, \n    trim_peel_waste_percentage: 5.00, \n    yield_percentage: 95.00, \n    supplier: \"Local Grower\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.005,\n    cost_per_unit_incl_trim: 0.0053,\n    min_stock_level: 6.0,\n    current_stock: 12.0,\n  },\n  { \n    ingredient_name: \"Potatoes Sebago\", \n    brand: \"Local Grower\", \n    pack_size: 5000, \n    unit: \"GM\", \n    cost_per_unit: 0.002, \n    trim_peel_waste_percentage: 15.00, \n    yield_percentage: 85.00, \n    supplier: \"Local Grower\", \n    storage_location: \"DRYSTORE\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.002,\n    cost_per_unit_incl_trim: 0.0024,\n    min_stock_level: 15.0,\n    current_stock: 30.0,\n  },\n  { \n    ingredient_name: \"Mushrooms Button\", \n    brand: \"Local Grower\", \n    pack_size: 500, \n    unit: \"GM\", \n    cost_per_unit: 0.012, \n    trim_peel_waste_percentage: 2.00, \n    yield_percentage: 98.00, \n    supplier: \"Local Grower\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.012,\n    cost_per_unit_incl_trim: 0.0122,\n    min_stock_level: 3.0,\n    current_stock: 6.0,\n  },\n  { \n    ingredient_name: \"Spinach Baby\", \n    brand: \"Local Grower\", \n    pack_size: 200, \n    unit: \"GM\", \n    cost_per_unit: 0.025, \n    trim_peel_waste_percentage: 5.00, \n    yield_percentage: 95.00, \n    supplier: \"Local Grower\", \n    storage_location: \"COLDROOM\", \n    product_code: \"\",\n    cost_per_unit_as_purchased: 0.025,\n    cost_per_unit_incl_trim: 0.0263,\n    min_stock_level: 2.0,\n    current_stock: 4.0,\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/setup-database/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createSupabaseAdmin } from '@/lib/supabase';\nimport { sampleIngredients } from '@/lib/sample-ingredients-updated';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabaseAdmin = createSupabaseAdmin();\n    \n    // Check if ingredients table exists by trying to query it\n    const { data: testData, error: testError } = await supabaseAdmin\n      .from('ingredients')\n      .select('id')\n      .limit(1);\n\n    if (testError) {\n      console.error('Table check error:', testError);\n      return NextResponse.json({ \n        error: 'Database tables do not exist',\n        message: 'Please create the database tables first using the create-tables API endpoint',\n        instructions: 'Visit /api/create-tables to get the SQL script, then run it in your Supabase dashboard',\n        errorDetails: testError\n      }, { status: 400 });\n    }\n\n    // Use comprehensive Australian kitchen ingredients\n    const ingredientsData = sampleIngredients;\n\n    // Insert ingredients\n    const { data, error } = await supabaseAdmin\n      .from('ingredients')\n      .insert(ingredientsData);\n\n    if (error) {\n      console.error('Error inserting ingredients:', error);\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    return NextResponse.json({ \n      success: true, \n      message: `Successfully inserted ${ingredientsData.length} ingredients!`,\n      data: data \n    });\n\n  } catch (err) {\n    console.error('Unexpected error:', err);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,gBAAgB,CAAA,GAAA,iHAAA,CAAA,sBAAmB,AAAD;QAExC,0DAA0D;QAC1D,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,cAChD,IAAI,CAAC,eACL,MAAM,CAAC,MACP,KAAK,CAAC;QAET,IAAI,WAAW;YACb,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,OAAO;gBACP,SAAS;gBACT,cAAc;gBACd,cAAc;YAChB,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,mDAAmD;QACnD,MAAM,kBAAkB,yIAAA,CAAA,oBAAiB;QAEzC,qBAAqB;QACrB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,cAC3B,IAAI,CAAC,eACL,MAAM,CAAC;QAEV,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,CAAC,sBAAsB,EAAE,gBAAgB,MAAM,CAAC,aAAa,CAAC;YACvE,MAAM;QACR;IAEF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}