{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/test-table-columns/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createSupabaseAdmin } from '@/lib/supabase';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const supabaseAdmin = createSupabaseAdmin();\n    \n    // Try different column name variations for ingredients table\n    const testData = [\n      { name: 'Test Ingredient', brand: 'Test Brand' },\n      { ingredient_name: 'Test Ingredient', brand: 'Test Brand' },\n      { ingredient_name: 'Test Ingredient' }\n    ];\n    \n    const results = [];\n    \n    for (const testRecord of testData) {\n      try {\n        const { data, error } = await supabaseAdmin\n          .from('ingredients')\n          .insert(testRecord)\n          .select();\n\n        if (error) {\n          results.push({\n            testData: testRecord,\n            status: 'error',\n            error: error.message,\n            code: error.code\n          });\n        } else {\n          results.push({\n            testData: testRecord,\n            status: 'success',\n            data: data\n          });\n          // If successful, clean up the test record\n          await supabaseAdmin\n            .from('ingredients')\n            .delete()\n            .eq('id', data[0].id);\n        }\n      } catch (err) {\n        results.push({\n          testData: testRecord,\n          status: 'error',\n          error: err instanceof Error ? err.message : 'Unknown error'\n        });\n      }\n    }\n\n    return NextResponse.json({ \n      success: true, \n      message: 'Column testing completed',\n      results: results\n    });\n\n  } catch (err) {\n    console.error('Unexpected error:', err);\n    return NextResponse.json({ \n      error: 'Internal server error',\n      details: err instanceof Error ? err.message : 'Unknown error'\n    }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,gBAAgB,CAAA,GAAA,iHAAA,CAAA,sBAAmB,AAAD;QAExC,6DAA6D;QAC7D,MAAM,WAAW;YACf;gBAAE,MAAM;gBAAmB,OAAO;YAAa;YAC/C;gBAAE,iBAAiB;gBAAmB,OAAO;YAAa;YAC1D;gBAAE,iBAAiB;YAAkB;SACtC;QAED,MAAM,UAAU,EAAE;QAElB,KAAK,MAAM,cAAc,SAAU;YACjC,IAAI;gBACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,cAC3B,IAAI,CAAC,eACL,MAAM,CAAC,YACP,MAAM;gBAET,IAAI,OAAO;oBACT,QAAQ,IAAI,CAAC;wBACX,UAAU;wBACV,QAAQ;wBACR,OAAO,MAAM,OAAO;wBACpB,MAAM,MAAM,IAAI;oBAClB;gBACF,OAAO;oBACL,QAAQ,IAAI,CAAC;wBACX,UAAU;wBACV,QAAQ;wBACR,MAAM;oBACR;oBACA,0CAA0C;oBAC1C,MAAM,cACH,IAAI,CAAC,eACL,MAAM,GACN,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,EAAE;gBACxB;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC;oBACX,UAAU;oBACV,QAAQ;oBACR,OAAO,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C;YACF;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,SAAS;QACX;IAEF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,OAAO;YACP,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}