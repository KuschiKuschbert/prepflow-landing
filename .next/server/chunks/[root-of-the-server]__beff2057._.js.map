{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/temperature-logs/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseAdmin } from '@/lib/supabase';\n\nexport async function GET(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  const date = searchParams.get('date');\n  const type = searchParams.get('type');\n  \n  try {\n    let query = supabaseAdmin\n      .from('temperature_logs')\n      .select('*')\n      .order('log_date', { ascending: false })\n      .order('log_time', { ascending: false });\n    \n    if (date) {\n      query = query.eq('log_date', date);\n    }\n    \n    if (type && type !== 'all') {\n      query = query.eq('temperature_type', type);\n    }\n    \n    const { data, error } = await query;\n    \n    if (error) {\n      console.error('Error fetching temperature logs:', error);\n      return NextResponse.json(\n        { success: false, error: 'Failed to fetch temperature logs' },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json({ success: true, data: data || [] });\n  } catch (error) {\n    console.error('Server error:', error);\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.temperature_celsius || !body.temperature_type) {\n      return NextResponse.json(\n        { success: false, error: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n    \n    // Validate temperature range (reasonable values)\n    if (body.temperature_celsius < -50 || body.temperature_celsius > 200) {\n      return NextResponse.json(\n        { success: false, error: 'Temperature out of reasonable range' },\n        { status: 400 }\n      );\n    }\n    \n    const { data, error } = await supabaseAdmin\n      .from('temperature_logs')\n      .insert([{\n        log_date: body.log_date || new Date().toISOString().split('T')[0],\n        log_time: body.log_time || new Date().toTimeString().split(' ')[0],\n        temperature_type: body.temperature_type,\n        temperature_celsius: body.temperature_celsius,\n        location: body.location || null,\n        notes: body.notes || null,\n        logged_by: body.logged_by || 'System',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }])\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error creating temperature log:', error);\n      return NextResponse.json(\n        { success: false, error: 'Failed to create temperature log' },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json({ success: true, data });\n  } catch (error) {\n    console.error('Server error:', error);\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,OAAO,aAAa,GAAG,CAAC;IAC9B,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI;QACF,IAAI,QAAQ,iHAAA,CAAA,gBAAa,CACtB,IAAI,CAAC,oBACL,MAAM,CAAC,KACP,KAAK,CAAC,YAAY;YAAE,WAAW;QAAM,GACrC,KAAK,CAAC,YAAY;YAAE,WAAW;QAAM;QAExC,IAAI,MAAM;YACR,QAAQ,MAAM,EAAE,CAAC,YAAY;QAC/B;QAEA,IAAI,QAAQ,SAAS,OAAO;YAC1B,QAAQ,MAAM,EAAE,CAAC,oBAAoB;QACvC;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM;QAE9B,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,oCAAoC;YAClD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAmC,GAC5D;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM,QAAQ,EAAE;QAAC;IAC7D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,2BAA2B;QAC3B,IAAI,CAAC,KAAK,mBAAmB,IAAI,CAAC,KAAK,gBAAgB,EAAE;YACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAA0B,GACnD;gBAAE,QAAQ;YAAI;QAElB;QAEA,iDAAiD;QACjD,IAAI,KAAK,mBAAmB,GAAG,CAAC,MAAM,KAAK,mBAAmB,GAAG,KAAK;YACpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAsC,GAC/D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,iHAAA,CAAA,gBAAa,CACxC,IAAI,CAAC,oBACL,MAAM,CAAC;YAAC;gBACP,UAAU,KAAK,QAAQ,IAAI,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gBACjE,UAAU,KAAK,QAAQ,IAAI,IAAI,OAAO,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gBAClE,kBAAkB,KAAK,gBAAgB;gBACvC,qBAAqB,KAAK,mBAAmB;gBAC7C,UAAU,KAAK,QAAQ,IAAI;gBAC3B,OAAO,KAAK,KAAK,IAAI;gBACrB,WAAW,KAAK,SAAS,IAAI;gBAC7B,YAAY,IAAI,OAAO,WAAW;gBAClC,YAAY,IAAI,OAAO,WAAW;YACpC;SAAE,EACD,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,mCAAmC;YACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAmC,GAC5D;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}