{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,yMAAY,EAAC,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,IAAA,yMAAY,EAAC,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/api/temperature-equipment/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { supabaseAdmin } from '@/lib/supabase';\n\nexport async function GET() {\n  try {\n    if (!supabaseAdmin) {\n      return NextResponse.json(\n        { success: false, error: 'Database connection not available' },\n        { status: 500 }\n      );\n    }\n\n    const { data, error } = await supabaseAdmin\n      .from('temperature_equipment')\n      .select('*')\n      .order('name', { ascending: true });\n    \n    if (error) {\n      console.error('Error fetching temperature equipment:', error);\n      return NextResponse.json(\n        { success: false, error: 'Failed to fetch temperature equipment' },\n        { status: 500 }\n      );\n    }\n\n    // Apply Queensland food safety standards automatically\n    const queenslandCompliantData = data?.map(equipment => {\n      const name = equipment.name.toLowerCase();\n      \n      // Apply Queensland thresholds based on equipment type\n      if (name.includes('freezer') || name.includes('frozen')) {\n        return {\n          ...equipment,\n          min_temp_celsius: -24,  // Optimal minimum freezer temperature\n          max_temp_celsius: -18   // Queensland freezer standard - must be at or below -18째C\n        };\n      } else if (name.includes('hot') || name.includes('warming') || name.includes('steam')) {\n        return {\n          ...equipment,\n          min_temp_celsius: 60,  // Queensland hot holding standard\n          max_temp_celsius: null // No upper limit for hot holding\n        };\n      } else {\n        // Default to cold storage (fridges, walk-ins, etc.)\n        // Set 0째C to 5째C range for optimal food safety\n        return {\n          ...equipment,\n          min_temp_celsius: 0,   // Minimum temperature for cold storage\n          max_temp_celsius: 5    // Queensland cold storage standard - must be at or below 5째C\n        };\n      }\n    });\n    \n    return NextResponse.json({ success: true, data: queenslandCompliantData || [] });\n  } catch (error) {\n    console.error('Server error:', error);\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    if (!supabaseAdmin) {\n      return NextResponse.json(\n        { success: false, error: 'Database connection not available' },\n        { status: 500 }\n      );\n    }\n\n    const body = await request.json();\n    \n    const { data, error } = await supabaseAdmin\n      .from('temperature_equipment')\n      .insert([{\n        name: body.name,\n        equipment_type: body.equipment_type,\n        location: body.location || null,\n        min_temp_celsius: body.min_temp_celsius || null,\n        max_temp_celsius: body.max_temp_celsius || null,\n        is_active: body.is_active !== false,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }])\n      .select()\n      .single();\n    \n    if (error) {\n      console.error('Error creating temperature equipment:', error);\n      return NextResponse.json(\n        { success: false, error: 'Failed to create temperature equipment' },\n        { status: 500 }\n      );\n    }\n    \n    return NextResponse.json({ success: true, data });\n  } catch (error) {\n    console.error('Server error:', error);\n    return NextResponse.json(\n      { success: false, error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,IAAI,CAAC,kIAAa,EAAE;YAClB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAoC,GAC7D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kIAAa,CACxC,IAAI,CAAC,yBACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;YAAE,WAAW;QAAK;QAEnC,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yCAAyC;YACvD,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAwC,GACjE;gBAAE,QAAQ;YAAI;QAElB;QAEA,uDAAuD;QACvD,MAAM,0BAA0B,MAAM,IAAI,CAAA;YACxC,MAAM,OAAO,UAAU,IAAI,CAAC,WAAW;YAEvC,sDAAsD;YACtD,IAAI,KAAK,QAAQ,CAAC,cAAc,KAAK,QAAQ,CAAC,WAAW;gBACvD,OAAO;oBACL,GAAG,SAAS;oBACZ,kBAAkB,CAAC;oBACnB,kBAAkB,CAAC,GAAK,0DAA0D;gBACpF;YACF,OAAO,IAAI,KAAK,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,cAAc,KAAK,QAAQ,CAAC,UAAU;gBACrF,OAAO;oBACL,GAAG,SAAS;oBACZ,kBAAkB;oBAClB,kBAAkB,KAAK,iCAAiC;gBAC1D;YACF,OAAO;gBACL,oDAAoD;gBACpD,+CAA+C;gBAC/C,OAAO;oBACL,GAAG,SAAS;oBACZ,kBAAkB;oBAClB,kBAAkB,EAAK,6DAA6D;gBACtF;YACF;QACF;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM,2BAA2B,EAAE;QAAC;IAChF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,IAAI,CAAC,kIAAa,EAAE;YAClB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAoC,GAC7D;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kIAAa,CACxC,IAAI,CAAC,yBACL,MAAM,CAAC;YAAC;gBACP,MAAM,KAAK,IAAI;gBACf,gBAAgB,KAAK,cAAc;gBACnC,UAAU,KAAK,QAAQ,IAAI;gBAC3B,kBAAkB,KAAK,gBAAgB,IAAI;gBAC3C,kBAAkB,KAAK,gBAAgB,IAAI;gBAC3C,WAAW,KAAK,SAAS,KAAK;gBAC9B,YAAY,IAAI,OAAO,WAAW;gBAClC,YAAY,IAAI,OAAO,WAAW;YACpC;SAAE,EACD,MAAM,GACN,MAAM;QAET,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,yCAAyC;YACvD,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAyC,GAClE;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAwB,GACjD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}