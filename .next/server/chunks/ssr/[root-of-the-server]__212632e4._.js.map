{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/page.tsx"],"sourcesContent":["'use client';\n\nimport { supabase } from '@/lib/supabase';\nimport { useEffect, useState, useMemo } from 'react';\nimport { convertIngredientCost, getAllUnits, isVolumeUnit, isWeightUnit } from '@/lib/unit-conversion';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string; // Database uses 'ingredient_name'\n  brand?: string;\n  pack_size?: string;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number; // Database uses 'trim_peel_waste_percentage'\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string; // Database uses 'storage_location'\n  min_stock_level?: number;\n  current_stock?: number;\n  is_active?: boolean;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface Supplier {\n  id: string;\n  name: string;\n  created_at: string;\n}\n\nexport default function IngredientsPage() {\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\n  const [filteredIngredients, setFilteredIngredients] = useState<Ingredient[]>([]);\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingIngredient, setEditingIngredient] = useState<Ingredient | null>(null);\n  const [showCSVImport, setShowCSVImport] = useState(false);\n  const [csvData, setCsvData] = useState<string>('');\n  const [parsedIngredients, setParsedIngredients] = useState<Partial<Ingredient>[]>([]);\n  const [importing, setImporting] = useState(false);\n  const [selectedIngredients, setSelectedIngredients] = useState<Set<string>>(new Set());\n  const [newSupplier, setNewSupplier] = useState<string>('');\n  const [newUnit, setNewUnit] = useState<string>('');\n  const [displayUnit, setDisplayUnit] = useState<string>('g'); // Default display unit\n\n  // Dynamic units list - built from existing ingredients\n  const availableUnits = useMemo(() => {\n    const unitsFromIngredients = ingredients\n      .map(ingredient => ingredient.unit)\n      .filter((unit): unit is string => unit !== undefined && unit !== null && unit !== '')\n      .map(unit => unit.toUpperCase())\n      .filter((unit, index, array) => array.indexOf(unit) === index) // Remove duplicates\n      .sort();\n    \n    // Add some common units if they don't exist\n    const commonUnits = ['GM', 'KG', 'ML', 'L', 'PC', 'BOX', 'PACK', 'BAG', 'BOTTLE', 'CAN'];\n    const allUnits = [...new Set([...commonUnits, ...unitsFromIngredients])].sort();\n    \n    return allUnits;\n  }, [ingredients]);\n  \n  // Search and filter states\n  const [searchTerm, setSearchTerm] = useState('');\n  const [supplierFilter, setSupplierFilter] = useState('');\n  const [storageFilter, setStorageFilter] = useState('');\n  const [sortBy, setSortBy] = useState<'name' | 'cost_asc' | 'cost_desc' | 'supplier'>('name');\n  const [newIngredient, setNewIngredient] = useState<Partial<Ingredient>>({\n    ingredient_name: '',\n    brand: '',\n    pack_size: '1',\n    unit: 'GM',\n    cost_per_unit: 0,\n    cost_per_unit_as_purchased: 0,\n    cost_per_unit_incl_trim: 0,\n    trim_peel_waste_percentage: 0,\n    yield_percentage: 100,\n    supplier: '',\n    product_code: '',\n    storage_location: '',\n    is_active: true,\n  });\n\n  useEffect(() => {\n    fetchIngredients();\n    fetchSuppliers();\n  }, []);\n\n  // Fetch suppliers from database\n  const fetchSuppliers = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .select('*')\n        .order('name');\n\n      if (error) {\n        console.error('Error fetching suppliers:', error);\n      } else {\n        setSuppliers(data || []);\n      }\n    } catch (err) {\n      console.error('Error fetching suppliers:', err);\n    }\n  };\n\n  // AI-powered wastage calculation based on ingredient name\n  const calculateWastagePercentage = (ingredientName: string): number => {\n    const name = ingredientName.toLowerCase();\n    \n    // High wastage ingredients (30-50%)\n    if (name.includes('whole') || name.includes('bone') || name.includes('shell') || \n        name.includes('peel') || name.includes('skin') || name.includes('rind') ||\n        name.includes('head') || name.includes('stalk') || name.includes('stem')) {\n      return Math.floor(Math.random() * 21) + 30; // 30-50%\n    }\n    \n    // Medium wastage ingredients (10-25%)\n    if (name.includes('fresh') || name.includes('raw') || name.includes('uncooked') ||\n        name.includes('leafy') || name.includes('herb') || name.includes('lettuce') ||\n        name.includes('spinach') || name.includes('kale') || name.includes('cabbage')) {\n      return Math.floor(Math.random() * 16) + 10; // 10-25%\n    }\n    \n    // Low wastage ingredients (0-10%)\n    if (name.includes('frozen') || name.includes('canned') || name.includes('dried') ||\n        name.includes('powder') || name.includes('oil') || name.includes('sauce') ||\n        name.includes('paste') || name.includes('concentrate')) {\n      return Math.floor(Math.random() * 11); // 0-10%\n    }\n    \n    // Default moderate wastage (5-15%)\n    return Math.floor(Math.random() * 11) + 5; // 5-15%\n  };\n\n  // Calculate cost per unit from packaging cost\n  const calculateCostPerUnit = (packagingCost: number, packSize: number): number => {\n    return packSize > 0 ? packagingCost / packSize : 0;\n  };\n\n  // Add new supplier to database\n  const addNewSupplier = async (supplierName: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .insert([{ name: supplierName }])\n        .select()\n        .single();\n\n      if (error) {\n        setError('Failed to add supplier');\n      } else {\n        setSuppliers([...suppliers, data]);\n        setNewIngredient({ ...newIngredient, supplier: data.name });\n        setNewSupplier('');\n      }\n    } catch (err) {\n      setError('Failed to add supplier');\n    }\n  };\n\n  // Add new unit to available units\n  const addNewUnit = (unitName: string) => {\n    if (unitName && !availableUnits.includes(unitName.toUpperCase())) {\n      // Set the new unit in the form\n      setNewIngredient({ ...newIngredient, unit: unitName.toUpperCase() });\n      setNewUnit('');\n    }\n  };\n\n  // Handle unit selection change\n  const handleUnitChange = (unit: string) => {\n    if (unit === 'custom') {\n      setNewIngredient({ ...newIngredient, unit: 'custom' });\n    } else {\n      setNewIngredient({ ...newIngredient, unit: unit });\n    }\n  };\n\n  // Handle wastage checkbox change\n  const handleWastageChange = (hasWastage: boolean) => {\n    const updatedIngredient = { ...newIngredient };\n    \n    if (hasWastage && newIngredient.ingredient_name) {\n      // Auto-calculate wastage percentage using AI\n      const wastagePercentage = calculateWastagePercentage(newIngredient.ingredient_name);\n      updatedIngredient.trim_peel_waste_percentage = wastagePercentage;\n    } else {\n      updatedIngredient.trim_peel_waste_percentage = 0;\n    }\n    \n    setNewIngredient(updatedIngredient);\n  };\n\n  // Handle pack size change\n  const handlePackSizeChange = (size: string) => {\n    setNewIngredient({ ...newIngredient, pack_size: size });\n  };\n\n  // Calculate cost per unit from total pack cost and pack size\n  const calculateCostPerUnitFromPack = (packCost: number, packSize: string): number => {\n    const size = parseFloat(packSize) || 1;\n    return packCost / size;\n  };\n\n  // Helper function to capitalize first letter of each word\n  const capitalizeWords = (text: string | null | undefined): string => {\n    if (!text) return '';\n    return text\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n\n  // Filter and sort ingredients\n  useEffect(() => {\n    let filtered = ingredients.filter(ingredient => {\n      const matchesSearch = ingredient.ingredient_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           (ingredient.brand && ingredient.brand.toLowerCase().includes(searchTerm.toLowerCase()));\n      const matchesSupplier = !supplierFilter || ingredient.supplier === supplierFilter;\n      const matchesStorage = !storageFilter || ingredient.storage_location === storageFilter;\n      return matchesSearch && matchesSupplier && matchesStorage;\n    });\n\n    // Sort ingredients\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.ingredient_name.localeCompare(b.ingredient_name);\n        case 'cost_asc':\n          return (a.cost_per_unit || 0) - (b.cost_per_unit || 0);\n        case 'cost_desc':\n          return (b.cost_per_unit || 0) - (a.cost_per_unit || 0);\n        case 'supplier':\n          return (a.supplier || '').localeCompare(b.supplier || '');\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredIngredients(filtered);\n  }, [ingredients, searchTerm, supplierFilter, storageFilter, sortBy]);\n\n  const fetchIngredients = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('ingredients')\n        .select('*')\n        .order('ingredient_name');\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setIngredients(data || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch ingredients');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddIngredient = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      // Capitalize text fields before saving\n      const capitalizedIngredient = {\n        ...newIngredient,\n        ingredient_name: capitalizeWords(newIngredient.ingredient_name),\n        brand: capitalizeWords(newIngredient.brand),\n        supplier: capitalizeWords(newIngredient.supplier),\n        storage_location: capitalizeWords(newIngredient.storage_location),\n      };\n\n      const { error } = await supabase\n        .from('ingredients')\n        .insert([capitalizedIngredient]);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setShowAddForm(false);\n        setNewIngredient({\n          ingredient_name: '',\n          brand: '',\n          pack_size: '1',\n          unit: 'GM',\n          cost_per_unit: 0,\n          cost_per_unit_as_purchased: 0,\n          cost_per_unit_incl_trim: 0,\n          trim_peel_waste_percentage: 0,\n          yield_percentage: 100,\n          supplier: '',\n          product_code: '',\n          storage_location: '',\n        });\n        fetchIngredients();\n      }\n    } catch (err) {\n      setError('Failed to add ingredient');\n    }\n  };\n\n  const handleUpdateIngredient = async (id: string, updates: Partial<Ingredient>) => {\n    try {\n      const { error } = await supabase\n        .from('ingredients')\n        .update(updates)\n        .eq('id', id);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        fetchIngredients();\n        setEditingIngredient(null);\n      }\n    } catch (err) {\n      setError('Failed to update ingredient');\n    }\n  };\n\n  const handleDeleteIngredient = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this ingredient?')) return;\n    \n    try {\n      const { error } = await supabase\n        .from('ingredients')\n        .delete()\n        .eq('id', id);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        fetchIngredients();\n      }\n    } catch (err) {\n      setError('Failed to delete ingredient');\n    }\n  };\n\n  const handleEditIngredient = (id: string) => {\n    const ingredient = ingredients.find(i => i.id === id);\n    if (ingredient) {\n      setEditingIngredient(ingredient);\n    }\n  };\n\n  const handleCSVUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const csvText = e.target?.result as string;\n      setCsvData(csvText);\n      parseCSVWithAI(csvText);\n    };\n    reader.readAsText(file);\n  };\n\n  const parseCSVWithAI = (csvText: string) => {\n    try {\n      const lines = csvText.split('\\n').filter(line => line.trim());\n      if (lines.length < 2) {\n        setError('CSV must have at least a header row and one data row');\n        return;\n      }\n\n      const headers = lines[0].split(',').map(h => h.trim().toLowerCase());\n      const parsedData: Partial<Ingredient>[] = [];\n\n      for (let i = 1; i < lines.length; i++) {\n        const values = lines[i].split(',').map(v => v.trim());\n        const ingredient: Partial<Ingredient> = {};\n\n        headers.forEach((header, index) => {\n          const value = values[index] || '';\n          \n          // AI-powered column mapping with capitalization\n          if (header.includes('name') || header.includes('ingredient')) {\n            ingredient.ingredient_name = capitalizeWords(value);\n          } else if (header.includes('brand')) {\n            ingredient.brand = capitalizeWords(value);\n          } else if (header.includes('cost') || header.includes('price')) {\n            ingredient.cost_per_unit = parseFloat(value) || 0;\n          } else if (header.includes('unit')) {\n            ingredient.unit = value.toUpperCase();\n          } else if (header.includes('supplier')) {\n            ingredient.supplier = capitalizeWords(value);\n          } else if (header.includes('code') || header.includes('sku')) {\n            ingredient.product_code = value;\n          } else if (header.includes('location') || header.includes('storage')) {\n            ingredient.storage_location = capitalizeWords(value);\n          } else if (header.includes('pack') || header.includes('size')) {\n            ingredient.pack_size = value || '1';\n          }\n        });\n        \n        // Set defaults for required fields\n        if (!ingredient.ingredient_name) continue; // Skip rows without ingredient name\n        if (!ingredient.cost_per_unit) ingredient.cost_per_unit = 0;\n        if (!ingredient.cost_per_unit_as_purchased) ingredient.cost_per_unit_as_purchased = ingredient.cost_per_unit || 0;\n        if (!ingredient.cost_per_unit_incl_trim) ingredient.cost_per_unit_incl_trim = ingredient.cost_per_unit || 0;\n        if (!ingredient.trim_peel_waste_percentage) ingredient.trim_peel_waste_percentage = 0;\n        if (!ingredient.yield_percentage) ingredient.yield_percentage = 100;\n        if (!ingredient.unit) ingredient.unit = 'GM';\n        if (!ingredient.pack_size) ingredient.pack_size = '1';\n        \n        parsedData.push(ingredient);\n      }\n      \n      setParsedIngredients(parsedData);\n      setError(null);\n    } catch (err) {\n      setError('Failed to parse CSV file');\n    }\n  };\n\n  const importSelectedIngredients = async () => {\n    try {\n      setImporting(true);\n      const ingredientsToImport = parsedIngredients.filter((_, index) => \n        selectedIngredients.has(index.toString())\n      ).map(ingredient => ({\n        ...ingredient,\n        ingredient_name: capitalizeWords(ingredient.ingredient_name),\n        brand: capitalizeWords(ingredient.brand),\n        supplier: capitalizeWords(ingredient.supplier),\n        storage_location: capitalizeWords(ingredient.storage_location),\n      }));\n\n      const { error } = await supabase\n        .from('ingredients')\n        .insert(ingredientsToImport);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setShowCSVImport(false);\n        setParsedIngredients([]);\n        setSelectedIngredients(new Set());\n        fetchIngredients();\n      }\n    } catch (err) {\n      setError('Failed to import ingredients');\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  const exportToCSV = () => {\n    const headers = [\n      'Ingredient Name', 'Brand', 'Pack Size', 'Unit', 'Cost per Unit',\n      'Cost per Unit (As Purchased)', 'Cost per Unit (Incl. Trim)',\n      'Trim/Peel Waste %', 'Yield %', 'Supplier', 'Product Code', 'Storage Location'\n    ];\n\n    const csvContent = [\n      headers.join(','),\n      ...filteredIngredients.map(ingredient => [\n        ingredient.ingredient_name,\n        ingredient.brand || '',\n        ingredient.pack_size || '',\n        ingredient.unit || '',\n        ingredient.cost_per_unit || 0,\n        ingredient.cost_per_unit_as_purchased || 0,\n        ingredient.cost_per_unit_incl_trim || 0,\n        ingredient.trim_peel_waste_percentage || 0,\n        ingredient.yield_percentage || 100,\n        ingredient.supplier || '',\n        ingredient.product_code || '',\n        ingredient.storage_location || ''\n      ].join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'ingredients.csv';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n        <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-700 rounded w-1/4 mb-6\"></div>\n          <div className=\"space-y-4\">\n            {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-gray-700 rounded\"></div>\n            ))}\n              </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-6\">\n          <h1 className=\"text-3xl font-bold text-white mb-2\">🥘 Ingredients Management</h1>\n          <p className=\"text-gray-400\">Manage your kitchen ingredients and inventory</p>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-900/20 border border-red-500 text-red-400 px-4 py-3 rounded-lg mb-6\">\n            {error}\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-wrap gap-3 mb-6\">\n          <button\n            onClick={() => setShowAddForm(!showAddForm)}\n            className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl\"\n          >\n            {showAddForm ? 'Cancel' : '+ Add Ingredient'}\n          </button>\n          <button\n            onClick={() => setShowCSVImport(true)}\n            className=\"bg-gradient-to-r from-[#3B82F6] to-[#29E7CD] text-white px-4 py-2 rounded-lg hover:from-[#3B82F6]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl\"\n          >\n            📁 Import CSV\n          </button>\n          <button\n            onClick={exportToCSV}\n            className=\"bg-gradient-to-r from-[#D925C7] to-[#3B82F6] text-white px-4 py-2 rounded-lg hover:from-[#D925C7]/80 hover:to-[#3B82F6]/80 transition-all duration-200 shadow-lg hover:shadow-xl\"\n          >\n            📤 Export CSV\n          </button>\n      </div>\n\n        {/* Enhanced Add Ingredient Form */}\n      {showAddForm && (\n          <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-semibold text-white\">🥘 Add New Ingredient</h2>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 bg-[#29E7CD] rounded-full animate-pulse\"></div>\n              <span className=\"text-xs text-gray-400\">AI-Powered</span>\n        </div>\n      </div>\n\n          <form onSubmit={handleAddIngredient} className=\"space-y-6\">\n            {/* Basic Information */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Ingredient Name *\n            </label>\n            <input\n              type=\"text\"\n                  required\n                  value={newIngredient.ingredient_name}\n                  onChange={(e) => setNewIngredient({ ...newIngredient, ingredient_name: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., Fresh Tomatoes\"\n            />\n          </div>\n\n          <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Brand (Optional)\n            </label>\n                <input\n                  type=\"text\"\n                  value={newIngredient.brand || ''}\n                  onChange={(e) => setNewIngredient({ ...newIngredient, brand: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., Coles, Woolworths\"\n                />\n              </div>\n          </div>\n\n            {/* Packaging Information */}\n            <div className=\"bg-[#2a2a2a]/30 p-4 rounded-2xl border border-[#2a2a2a]/50\">\n              <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                📦 Packaging Information\n              </h3>\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n          <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Pack Size *\n            </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={newIngredient.pack_size || ''}\n                    onChange={(e) => handlePackSizeChange(e.target.value)}\n                    className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                    placeholder=\"e.g., 96\"\n                  />\n          </div>\n\n          <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Pack Unit *\n            </label>\n                  <div className=\"space-y-2\">\n            <select\n                      value={newIngredient.unit || ''}\n                      onChange={(e) => setNewIngredient({ ...newIngredient, unit: e.target.value })}\n                      className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                    >\n                      <option value=\"\">Select from existing units</option>\n                      {availableUnits.map(unit => (\n                        <option key={unit} value={unit}>{unit}</option>\n                      ))}\n                      <option value=\"custom\">+ Add new unit</option>\n            </select>\n                    \n                    {newIngredient.unit === 'custom' && (\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"text\"\n                          value={newUnit}\n                          onChange={(e) => setNewUnit(e.target.value.toUpperCase())}\n                          className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                          placeholder=\"Enter new unit (e.g., SLICES)\"\n                          autoFocus\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={() => addNewUnit(newUnit)}\n                          disabled={!newUnit.trim()}\n                          className=\"px-4 py-3 bg-[#29E7CD]/10 text-[#29E7CD] rounded-2xl hover:bg-[#29E7CD]/20 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Add\n                        </button>\n        </div>\n      )}\n\n                    {availableUnits.length > 0 && (\n                      <p className=\"text-xs text-gray-400\">\n                        💡 Available units from your ingredients: {availableUnits.slice(0, 5).join(', ')}\n                        {availableUnits.length > 5 && ` +${availableUnits.length - 5} more`}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                \n            <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Cost per Unit *\n              </label>\n                  <div className=\"relative\">\n                    <span className=\"absolute left-3 top-3 text-gray-400\">$</span>\n              <input\n                      type=\"number\"\n                      step=\"0.01\"\n                required\n                      value={newIngredient.cost_per_unit || ''}\n                      onChange={(e) => setNewIngredient({ ...newIngredient, cost_per_unit: parseFloat(e.target.value) || 0 })}\n                      className=\"w-full pl-8 pr-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                      placeholder=\"0.15\"\n              />\n            </div>\n                </div>\n              </div>\n              \n              {/* Helper text */}\n              <div className=\"mt-4 p-3 bg-[#29E7CD]/10 border border-[#29E7CD]/20 rounded-xl\">\n                <p className=\"text-sm text-[#29E7CD]\">\n                  💡 Enter the cost per individual unit (e.g., $0.15 per burger patty from a pack of 96)\n                </p>\n              </div>\n            </div>\n\n            {/* Supplier Information */}\n            <div className=\"bg-[#2a2a2a]/30 p-4 rounded-2xl border border-[#2a2a2a]/50\">\n              <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                🏪 Supplier Information\n              </h3>\n              <div className=\"flex gap-2\">\n                <select\n                  value={newIngredient.supplier || ''}\n                  onChange={(e) => setNewIngredient({ ...newIngredient, supplier: e.target.value })}\n                  className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                >\n                  <option value=\"\">Select Supplier</option>\n                  {suppliers.map(supplier => (\n                    <option key={supplier.id} value={supplier.name}>{supplier.name}</option>\n                  ))}\n                </select>\n                <button\n                  type=\"button\"\n                  onClick={() => addNewSupplier(newSupplier)}\n                  className=\"px-4 py-3 bg-[#3B82F6]/10 text-[#3B82F6] rounded-2xl hover:bg-[#3B82F6]/20 transition-colors\"\n                >\n                  Add New\n                </button>\n              </div>\n              <input\n                type=\"text\"\n                value={newSupplier}\n                onChange={(e) => setNewSupplier(e.target.value)}\n                className=\"w-full mt-2 px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#3B82F6] transition-all text-sm\"\n                placeholder=\"New supplier name\"\n              />\n            </div>\n\n            {/* Wastage Information */}\n            <div className=\"bg-[#2a2a2a]/30 p-4 rounded-2xl border border-[#2a2a2a]/50\">\n              <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                🗑️ Wastage & Yield Information\n              </h3>\n              \n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Trim/Waste Percentage\n              </label>\n                  <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={newIngredient.trim_peel_waste_percentage || 0}\n                      onChange={(e) => setNewIngredient({ ...newIngredient, trim_peel_waste_percentage: parseFloat(e.target.value) || 0 })}\n                      className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n            </div>\n                  {newIngredient.ingredient_name && (\n                    <p className=\"text-xs text-gray-400 mt-1\">\n                      💡 AI suggests: {calculateWastagePercentage(newIngredient.ingredient_name)}% based on \"{newIngredient.ingredient_name}\"\n                    </p>\n                  )}\n            </div>\n                \n            <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Yield Percentage\n              </label>\n                  <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={newIngredient.yield_percentage || 100}\n                      onChange={(e) => setNewIngredient({ ...newIngredient, yield_percentage: parseFloat(e.target.value) || 100 })}\n                      className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n            </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Additional Information */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Product Code (Optional)\n              </label>\n                <input\n                  type=\"text\"\n                  value={newIngredient.product_code || ''}\n                  onChange={(e) => setNewIngredient({ ...newIngredient, product_code: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., SKU123456\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Storage Location (Optional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={newIngredient.storage_location || ''}\n                  onChange={(e) => setNewIngredient({ ...newIngredient, storage_location: e.target.value })}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., Cold Room A, Dry Storage\"\n                />\n              </div>\n            </div>\n\n            {/* Form Actions */}\n            <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                <button\n                type=\"submit\"\n                className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n              >\n                ✅ Add Ingredient\n                </button>\n                <button\n                  type=\"button\"\n                onClick={() => setShowAddForm(false)}\n                className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-6 py-3 rounded-2xl hover:bg-[#2a2a2a]/80 transition-all duration-200 font-medium\"\n              >\n                Cancel\n                </button>\n              </div>\n          </form>\n        </div>\n      )}\n\n        {/* CSV Import Modal */}\n        {showCSVImport && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-lg p-6 max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-xl font-semibold text-white\">📁 Import Ingredients from CSV</h2>\n                <button\n                  onClick={() => setShowCSVImport(false)}\n                  className=\"text-gray-400 hover:text-white\"\n                >\n                  ✕\n                </button>\n              </div>\n              \n              <div className=\"mb-4\">\n                <input\n                  type=\"file\"\n                  accept=\".csv\"\n                  onChange={handleCSVUpload}\n                  className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n                />\n              </div>\n\n              {parsedIngredients.length > 0 && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h3 className=\"text-lg font-medium text-white\">\n                      Preview ({parsedIngredients.length} ingredients found)\n                    </h3>\n                    <div className=\"space-x-2\">\n                      <button\n                        onClick={() => setSelectedIngredients(new Set(parsedIngredients.map((_, i) => i.toString())))}\n                        className=\"text-sm text-[#29E7CD] hover:text-[#29E7CD]/80\"\n                      >\n                        Select All\n                      </button>\n                      <button\n                        onClick={() => setSelectedIngredients(new Set())}\n                        className=\"text-sm text-gray-400 hover:text-white\"\n                      >\n                        Clear All\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"max-h-60 overflow-y-auto border border-[#2a2a2a] rounded-md\">\n                    {parsedIngredients.map((ingredient, index) => (\n                      <div key={index} className=\"p-3 border-b border-[#2a2a2a] last:border-b-0\">\n                        <div className=\"flex items-center space-x-3\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedIngredients.has(index.toString())}\n                  onChange={(e) => {\n                              const newSelected = new Set(selectedIngredients);\n                              if (e.target.checked) {\n                                newSelected.add(index.toString());\n                              } else {\n                                newSelected.delete(index.toString());\n                              }\n                              setSelectedIngredients(newSelected);\n                            }}\n                            className=\"rounded\"\n                          />\n                          <div className=\"flex-1\">\n                            <div className=\"text-white font-medium\">{capitalizeWords(ingredient.ingredient_name)}</div>\n                            <div className=\"text-sm text-gray-400\">\n                              {ingredient.brand && `Brand: ${ingredient.brand} • `}\n                              {ingredient.cost_per_unit && `Cost: $${ingredient.cost_per_unit} • `}\n                              {ingredient.unit && `Unit: ${ingredient.unit}`}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <div className=\"mt-4 flex justify-end space-x-3\">\n                <button\n                      onClick={() => setShowCSVImport(false)}\n                      className=\"px-4 py-2 text-gray-400 hover:text-white\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      onClick={importSelectedIngredients}\n                      disabled={importing || selectedIngredients.size === 0}\n                      className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      {importing ? 'Importing...' : `Import Selected (${selectedIngredients.size})`}\n                </button>\n              </div>\n            </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Search and Filter Controls */}\n        <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                🔍 Search\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Search ingredients...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                🏪 Supplier\n              </label>\n              <select\n                value={supplierFilter}\n                onChange={(e) => setSupplierFilter(e.target.value)}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n              >\n                <option value=\"\">All Suppliers</option>\n                {Array.from(new Set(ingredients.map(i => i.supplier).filter(Boolean))).map(supplier => (\n                  <option key={supplier} value={supplier}>{supplier}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                📍 Storage\n              </label>\n              <select\n                value={storageFilter}\n                onChange={(e) => setStorageFilter(e.target.value)}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n              >\n                <option value=\"\">All Locations</option>\n                {Array.from(new Set(ingredients.map(i => i.storage_location).filter(Boolean))).map(location => (\n                  <option key={location} value={location}>{location}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                📊 Sort By\n              </label>\n              <select\n                value={sortBy}\n                onChange={(e) => setSortBy(e.target.value as any)}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n              >\n                <option value=\"name\">Name</option>\n                <option value=\"cost_asc\">Cost (Low to High)</option>\n                <option value=\"cost_desc\">Cost (High to Low)</option>\n                <option value=\"supplier\">Supplier</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Ingredients List - Material Design 3 */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n          {/* Header with Material 3 styling */}\n          <div className=\"px-6 py-5 border-b border-[#2a2a2a] bg-gradient-to-r from-[#1f1f1f] to-[#2a2a2a]/20\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-xl font-semibold text-white mb-1\">\n                  🥘 Ingredients\n          </h2>\n                <p className=\"text-sm text-gray-400\">\n                  {filteredIngredients.length} of {ingredients.length} ingredients\n                </p>\n        </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-2 h-2 bg-[#29E7CD] rounded-full animate-pulse\"></div>\n                <span className=\"text-xs text-gray-400\">Live Data</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Mobile Card Layout - Material 3 Cards */}\n          <div className=\"md:hidden\">\n            {filteredIngredients.map((ingredient, index) => (\n              <div \n                key={ingredient.id} \n                className=\"group relative p-5 border-b border-[#2a2a2a]/50 last:border-b-0 hover:bg-[#2a2a2a]/20 transition-all duration-200\"\n                style={{\n                  animationDelay: `${index * 50}ms`,\n                  animation: 'fadeInUp 0.3s ease-out forwards'\n                }}\n              >\n                {/* Card Header */}\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-white text-lg mb-1 group-hover:text-[#29E7CD] transition-colors\">\n                      {capitalizeWords(ingredient.ingredient_name)}\n                    </h3>\n                    {ingredient.brand && (\n                      <p className=\"text-sm text-gray-400 font-medium\">{capitalizeWords(ingredient.brand)}</p>\n                    )}\n                  </div>\n                  <div className=\"flex space-x-1\">\n              <button\n                      onClick={() => handleEditIngredient(ingredient.id)}\n                      className=\"p-2 rounded-full bg-[#29E7CD]/10 hover:bg-[#29E7CD]/20 text-[#29E7CD] hover:text-white transition-all duration-200 shadow-sm hover:shadow-md\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => handleDeleteIngredient(ingredient.id)}\n                      className=\"p-2 rounded-full bg-red-500/10 hover:bg-red-500/20 text-red-400 hover:text-white transition-all duration-200 shadow-sm hover:shadow-md\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n              </button>\n            </div>\n        </div>\n\n                {/* Card Content - Material 3 Grid */}\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div className=\"bg-[#2a2a2a]/30 rounded-2xl p-3 border border-[#2a2a2a]/50\">\n                    <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Cost</div>\n                    <div className=\"text-lg font-semibold text-white\">\n                      ${ingredient.cost_per_unit?.toFixed(2) || '0.00'}\n        </div>\n                    <div className=\"text-xs text-gray-400\">per {ingredient.unit || 'unit'}</div>\n                  </div>\n                  \n                  <div className=\"bg-[#2a2a2a]/30 rounded-2xl p-3 border border-[#2a2a2a]/50\">\n                    <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Yield</div>\n                    <div className=\"text-lg font-semibold text-[#29E7CD]\">\n                      {ingredient.yield_percentage || 100}%\n                    </div>\n                    <div className=\"text-xs text-gray-400\">\n                      {ingredient.trim_peel_waste_percentage || 0}% waste\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-[#2a2a2a]/30 rounded-2xl p-3 border border-[#2a2a2a]/50\">\n                    <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Pack Size</div>\n                    <div className=\"text-lg font-semibold text-white\">\n                      {ingredient.pack_size || 'N/A'}\n                    </div>\n                    <div className=\"text-xs text-gray-400\">{ingredient.unit || 'units'}</div>\n                  </div>\n                  \n                  <div className=\"bg-[#2a2a2a]/30 rounded-2xl p-3 border border-[#2a2a2a]/50\">\n                    <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Supplier</div>\n                    <div className=\"text-sm font-medium text-white truncate\">\n                      {capitalizeWords(ingredient.supplier) || 'N/A'}\n                    </div>\n                    <div className=\"text-xs text-gray-400 truncate\">\n                      {capitalizeWords(ingredient.storage_location) || 'No location'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Desktop Table Layout - Material 3 Data Table */}\n          <div className=\"hidden md:block\">\n        <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                {/* Material 3 Table Header */}\n                <thead className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n                  <tr>\n                    <th className=\"px-6 py-4 text-left\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                          Ingredient\n                        </span>\n                        <div className=\"w-1 h-1 bg-[#29E7CD] rounded-full\"></div>\n                      </div>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Pack Size\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Unit\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Cost\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Waste %\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Yield %\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-left\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Supplier\n                      </span>\n                </th>\n                    <th className=\"px-6 py-4 text-center\">\n                      <span className=\"text-sm font-semibold text-gray-300 uppercase tracking-wide\">\n                        Actions\n                      </span>\n                </th>\n              </tr>\n            </thead>\n                \n                {/* Material 3 Table Body */}\n                <tbody className=\"divide-y divide-[#2a2a2a]/30\">\n                  {filteredIngredients.map((ingredient, index) => (\n                    <tr \n                      key={ingredient.id} \n                      className=\"group hover:bg-[#2a2a2a]/20 transition-all duration-200\"\n                      style={{\n                        animationDelay: `${index * 30}ms`,\n                        animation: 'fadeInUp 0.3s ease-out forwards'\n                      }}\n                    >\n                      {/* Ingredient Name Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-[#29E7CD]/20 to-[#D925C7]/20 flex items-center justify-center\">\n                            <span className=\"text-lg\">🥘</span>\n                          </div>\n                          <div>\n                            <div className=\"text-sm font-semibold text-white group-hover:text-[#29E7CD] transition-colors\">\n                    {capitalizeWords(ingredient.ingredient_name)}\n                            </div>\n                            <div className=\"text-xs text-gray-400\">\n                              {capitalizeWords(ingredient.brand) || 'No brand'}\n                            </div>\n                          </div>\n                        </div>\n                  </td>\n                      \n                      {/* Pack Size Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm text-white font-medium\">\n                          {ingredient.pack_size || 'N/A'}\n                        </div>\n                  </td>\n                      \n                      {/* Unit Column */}\n                      <td className=\"px-6 py-4\">\n                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[#29E7CD]/10 text-[#29E7CD] border border-[#29E7CD]/20\">\n                          {ingredient.unit || 'N/A'}\n                        </span>\n                  </td>\n                      \n                      {/* Cost Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm font-semibold text-white\">\n                          ${ingredient.cost_per_unit?.toFixed(2) || '0.00'}\n                        </div>\n                  </td>\n                      \n                      {/* Waste % Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"text-sm text-white font-medium\">\n                            {ingredient.trim_peel_waste_percentage || 0}%\n                          </div>\n                          <div className=\"w-8 h-2 bg-gray-700 rounded-full overflow-hidden\">\n                            <div \n                              className=\"h-full bg-gradient-to-r from-red-500 to-orange-500 transition-all duration-300\"\n                              style={{ width: `${Math.min((ingredient.trim_peel_waste_percentage || 0) * 2, 100)}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                  </td>\n                      \n                      {/* Yield % Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"text-sm text-[#29E7CD] font-semibold\">\n                            {ingredient.yield_percentage || 100}%\n                          </div>\n                          <div className=\"w-8 h-2 bg-gray-700 rounded-full overflow-hidden\">\n                            <div \n                              className=\"h-full bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] transition-all duration-300\"\n                              style={{ width: `${Math.min((ingredient.yield_percentage || 100) * 0.8, 100)}%` }}\n                            ></div>\n                          </div>\n                        </div>\n                  </td>\n                      \n                      {/* Supplier Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm text-white\">\n                          {capitalizeWords(ingredient.supplier) || 'N/A'}\n                        </div>\n                        {ingredient.storage_location && (\n                          <div className=\"text-xs text-gray-400\">\n                            📍 {capitalizeWords(ingredient.storage_location)}\n                          </div>\n                        )}\n                  </td>\n                      \n                      {/* Actions Column */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center justify-center space-x-2\">\n                          <button\n                            onClick={() => handleEditIngredient(ingredient.id)}\n                            className=\"p-2 rounded-full bg-[#29E7CD]/10 hover:bg-[#29E7CD]/20 text-[#29E7CD] hover:text-white transition-all duration-200 shadow-sm hover:shadow-md group\"\n                            title=\"Edit ingredient\"\n                          >\n                            <svg className=\"w-4 h-4 group-hover:scale-110 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => handleDeleteIngredient(ingredient.id)}\n                            className=\"p-2 rounded-full bg-red-500/10 hover:bg-red-500/20 text-red-400 hover:text-white transition-all duration-200 shadow-sm hover:shadow-md group\"\n                            title=\"Delete ingredient\"\n                          >\n                            <svg className=\"w-4 h-4 group-hover:scale-110 transition-transform\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                          </button>\n                        </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n            </div>\n          </div>\n\n          {/* Empty State - Material 3 */}\n          {filteredIngredients.length === 0 && (\n            <div className=\"text-center py-16 px-6\">\n              <div className=\"w-20 h-20 mx-auto mb-4 rounded-full bg-gradient-to-br from-[#29E7CD]/20 to-[#D925C7]/20 flex items-center justify-center\">\n                <span className=\"text-3xl\">🥘</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">No ingredients found</h3>\n              <p className=\"text-gray-400 mb-6 max-w-md mx-auto\">\n                {searchTerm || supplierFilter || storageFilter \n                  ? 'Try adjusting your search filters to find what you\\'re looking for' \n                  : 'Add your first ingredient to start building your kitchen inventory'\n                }\n              </p>\n              {!searchTerm && !supplierFilter && !storageFilter && (\n                <button\n                  onClick={() => setShowAddForm(true)}\n                  className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n                >\n                  Add Your First Ingredient\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Edit Ingredient Modal */}\n      {editingIngredient && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            {/* Header */}\n            <div className=\"p-6 border-b border-[#2a2a2a]\">\n              <div className=\"flex justify-between items-center\">\n                <h2 className=\"text-2xl font-bold text-white\">Edit Ingredient</h2>\n                <button\n                  onClick={() => setEditingIngredient(null)}\n                  className=\"p-2 rounded-full bg-[#2a2a2a] hover:bg-[#3a3a3a] text-gray-400 hover:text-white transition-colors\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Form */}\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              handleUpdateIngredient(editingIngredient.id, editingIngredient);\n            }} className=\"p-6 space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Ingredient Name */}\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Ingredient Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.ingredient_name}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, ingredient_name: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    required\n                  />\n                </div>\n\n                {/* Brand */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Brand\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.brand || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, brand: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Pack Size */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Pack Size\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.pack_size || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, pack_size: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Unit */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Unit *\n                  </label>\n                  <select\n                    value={editingIngredient.unit || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, unit: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    required\n                  >\n                    <option value=\"\">Select Unit</option>\n                    {availableUnits.map(unit => (\n                      <option key={unit} value={unit}>{unit}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Cost Per Unit */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Cost Per Unit ($) *\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    value={editingIngredient.cost_per_unit}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, cost_per_unit: parseFloat(e.target.value) || 0})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    required\n                  />\n                </div>\n\n                {/* Trim/Waste Percentage */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Trim/Waste Percentage (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={editingIngredient.trim_peel_waste_percentage || 0}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, trim_peel_waste_percentage: parseFloat(e.target.value) || 0})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Yield Percentage */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Yield Percentage (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={editingIngredient.yield_percentage || 100}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, yield_percentage: parseFloat(e.target.value) || 100})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Supplier */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Supplier\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.supplier || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, supplier: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Storage Location */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Storage Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.storage_location || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, storage_location: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Product Code */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Product Code\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={editingIngredient.product_code || ''}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, product_code: e.target.value})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Min Stock Level */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Min Stock Level\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    value={editingIngredient.min_stock_level || 0}\n                    onChange={(e) => setEditingIngredient({...editingIngredient, min_stock_level: parseFloat(e.target.value) || 0})}\n                    className=\"w-full px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  />\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex gap-3 pt-6 border-t border-[#2a2a2a]\">\n                <button\n                  type=\"button\"\n                  onClick={() => setEditingIngredient(null)}\n                  className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-6 py-3 rounded-xl hover:bg-[#3a3a3a] transition-colors font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n                >\n                  Update Ingredient\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAiCe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAC9E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB,EAAE;IACpF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAChF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,MAAM,uBAAuB;IAEpF,uDAAuD;IACvD,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC7B,MAAM,uBAAuB,YAC1B,GAAG,CAAC,CAAA,aAAc,WAAW,IAAI,EACjC,MAAM,CAAC,CAAC,OAAyB,SAAS,aAAa,SAAS,QAAQ,SAAS,IACjF,GAAG,CAAC,CAAA,OAAQ,KAAK,WAAW,IAC5B,MAAM,CAAC,CAAC,MAAM,OAAO,QAAU,MAAM,OAAO,CAAC,UAAU,OAAO,oBAAoB;SAClF,IAAI;QAEP,4CAA4C;QAC5C,MAAM,cAAc;YAAC;YAAM;YAAM;YAAM;YAAK;YAAM;YAAO;YAAQ;YAAO;YAAU;SAAM;QACxF,MAAM,WAAW;eAAI,IAAI,IAAI;mBAAI;mBAAgB;aAAqB;SAAE,CAAC,IAAI;QAE7E,OAAO;IACT,GAAG;QAAC;KAAY;IAEhB,2BAA2B;IAC3B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkD;IACrF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;QACtE,iBAAiB;QACjB,OAAO;QACP,WAAW;QACX,MAAM;QACN,eAAe;QACf,4BAA4B;QAC5B,yBAAyB;QACzB,4BAA4B;QAC5B,kBAAkB;QAClB,UAAU;QACV,cAAc;QACd,kBAAkB;QAClB,WAAW;IACb;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;IACF,GAAG,EAAE;IAEL,gCAAgC;IAChC,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC,KACP,KAAK,CAAC;YAET,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,OAAO;gBACL,aAAa,QAAQ,EAAE;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,0DAA0D;IAC1D,MAAM,6BAA6B,CAAC;QAClC,MAAM,OAAO,eAAe,WAAW;QAEvC,oCAAoC;QACpC,IAAI,KAAK,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,YACjE,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,WAChE,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,SAAS;YAC5E,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,SAAS;QACvD;QAEA,sCAAsC;QACtC,IAAI,KAAK,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,eAChE,KAAK,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,cACjE,KAAK,QAAQ,CAAC,cAAc,KAAK,QAAQ,CAAC,WAAW,KAAK,QAAQ,CAAC,YAAY;YACjF,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,SAAS;QACvD;QAEA,kCAAkC;QAClC,IAAI,KAAK,QAAQ,CAAC,aAAa,KAAK,QAAQ,CAAC,aAAa,KAAK,QAAQ,CAAC,YACpE,KAAK,QAAQ,CAAC,aAAa,KAAK,QAAQ,CAAC,UAAU,KAAK,QAAQ,CAAC,YACjE,KAAK,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,gBAAgB;YAC1D,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,QAAQ;QACjD;QAEA,mCAAmC;QACnC,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,GAAG,QAAQ;IACrD;IAEA,8CAA8C;IAC9C,MAAM,uBAAuB,CAAC,eAAuB;QACnD,OAAO,WAAW,IAAI,gBAAgB,WAAW;IACnD;IAEA,+BAA+B;IAC/B,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC;gBAAC;oBAAE,MAAM;gBAAa;aAAE,EAC/B,MAAM,GACN,MAAM;YAET,IAAI,OAAO;gBACT,SAAS;YACX,OAAO;gBACL,aAAa;uBAAI;oBAAW;iBAAK;gBACjC,iBAAiB;oBAAE,GAAG,aAAa;oBAAE,UAAU,KAAK,IAAI;gBAAC;gBACzD,eAAe;YACjB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,kCAAkC;IAClC,MAAM,aAAa,CAAC;QAClB,IAAI,YAAY,CAAC,eAAe,QAAQ,CAAC,SAAS,WAAW,KAAK;YAChE,+BAA+B;YAC/B,iBAAiB;gBAAE,GAAG,aAAa;gBAAE,MAAM,SAAS,WAAW;YAAG;YAClE,WAAW;QACb;IACF;IAEA,+BAA+B;IAC/B,MAAM,mBAAmB,CAAC;QACxB,IAAI,SAAS,UAAU;YACrB,iBAAiB;gBAAE,GAAG,aAAa;gBAAE,MAAM;YAAS;QACtD,OAAO;YACL,iBAAiB;gBAAE,GAAG,aAAa;gBAAE,MAAM;YAAK;QAClD;IACF;IAEA,iCAAiC;IACjC,MAAM,sBAAsB,CAAC;QAC3B,MAAM,oBAAoB;YAAE,GAAG,aAAa;QAAC;QAE7C,IAAI,cAAc,cAAc,eAAe,EAAE;YAC/C,6CAA6C;YAC7C,MAAM,oBAAoB,2BAA2B,cAAc,eAAe;YAClF,kBAAkB,0BAA0B,GAAG;QACjD,OAAO;YACL,kBAAkB,0BAA0B,GAAG;QACjD;QAEA,iBAAiB;IACnB;IAEA,0BAA0B;IAC1B,MAAM,uBAAuB,CAAC;QAC5B,iBAAiB;YAAE,GAAG,aAAa;YAAE,WAAW;QAAK;IACvD;IAEA,6DAA6D;IAC7D,MAAM,+BAA+B,CAAC,UAAkB;QACtD,MAAM,OAAO,WAAW,aAAa;QACrC,OAAO,WAAW;IACpB;IAEA,0DAA0D;IAC1D,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,MAAM,OAAO;QAClB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;IACV;IAEA,8BAA8B;IAC9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,WAAW,YAAY,MAAM,CAAC,CAAA;YAChC,MAAM,gBAAgB,WAAW,eAAe,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACxE,WAAW,KAAK,IAAI,WAAW,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;YACxG,MAAM,kBAAkB,CAAC,kBAAkB,WAAW,QAAQ,KAAK;YACnE,MAAM,iBAAiB,CAAC,iBAAiB,WAAW,gBAAgB,KAAK;YACzE,OAAO,iBAAiB,mBAAmB;QAC7C;QAEA,mBAAmB;QACnB,SAAS,IAAI,CAAC,CAAC,GAAG;YAChB,OAAQ;gBACN,KAAK;oBACH,OAAO,EAAE,eAAe,CAAC,aAAa,CAAC,EAAE,eAAe;gBAC1D,KAAK;oBACH,OAAO,CAAC,EAAE,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,IAAI,CAAC;gBACvD,KAAK;oBACH,OAAO,CAAC,EAAE,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,IAAI,CAAC;gBACvD,KAAK;oBACH,OAAO,CAAC,EAAE,QAAQ,IAAI,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,IAAI;gBACxD;oBACE,OAAO;YACX;QACF;QAEA,uBAAuB;IACzB,GAAG;QAAC;QAAa;QAAY;QAAgB;QAAe;KAAO;IAEnE,MAAM,mBAAmB;QACvB,IAAI;YACF,WAAW;YACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC,KACP,KAAK,CAAC;YAET,IAAI,OAAO;gBACT,SAAS,MAAM,OAAO;YACxB,OAAO;gBACL,eAAe,QAAQ,EAAE;YAC3B;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,sBAAsB,OAAO;QACjC,EAAE,cAAc;QAChB,IAAI;YACF,uCAAuC;YACvC,MAAM,wBAAwB;gBAC5B,GAAG,aAAa;gBAChB,iBAAiB,gBAAgB,cAAc,eAAe;gBAC9D,OAAO,gBAAgB,cAAc,KAAK;gBAC1C,UAAU,gBAAgB,cAAc,QAAQ;gBAChD,kBAAkB,gBAAgB,cAAc,gBAAgB;YAClE;YAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,CAAC;gBAAC;aAAsB;YAEjC,IAAI,OAAO;gBACT,SAAS,MAAM,OAAO;YACxB,OAAO;gBACL,eAAe;gBACf,iBAAiB;oBACf,iBAAiB;oBACjB,OAAO;oBACP,WAAW;oBACX,MAAM;oBACN,eAAe;oBACf,4BAA4B;oBAC5B,yBAAyB;oBACzB,4BAA4B;oBAC5B,kBAAkB;oBAClB,UAAU;oBACV,cAAc;oBACd,kBAAkB;gBACpB;gBACA;YACF;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,MAAM,yBAAyB,OAAO,IAAY;QAChD,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,CAAC,SACP,EAAE,CAAC,MAAM;YAEZ,IAAI,OAAO;gBACT,SAAS,MAAM,OAAO;YACxB,OAAO;gBACL;gBACA,qBAAqB;YACvB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,MAAM,yBAAyB,OAAO;QACpC,IAAI,CAAC,QAAQ,qDAAqD;QAElE,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,GACN,EAAE,CAAC,MAAM;YAEZ,IAAI,OAAO;gBACT,SAAS,MAAM,OAAO;YACxB,OAAO;gBACL;YACF;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,MAAM,uBAAuB,CAAC;QAC5B,MAAM,aAAa,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAClD,IAAI,YAAY;YACd,qBAAqB;QACvB;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,CAAC,MAAM;QAEX,MAAM,SAAS,IAAI;QACnB,OAAO,MAAM,GAAG,CAAC;YACf,MAAM,UAAU,EAAE,MAAM,EAAE;YAC1B,WAAW;YACX,eAAe;QACjB;QACA,OAAO,UAAU,CAAC;IACpB;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI;YACF,MAAM,QAAQ,QAAQ,KAAK,CAAC,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,IAAI;YAC1D,IAAI,MAAM,MAAM,GAAG,GAAG;gBACpB,SAAS;gBACT;YACF;YAEA,MAAM,UAAU,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,GAAG,WAAW;YACjE,MAAM,aAAoC,EAAE;YAE5C,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;gBACrC,MAAM,SAAS,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI;gBAClD,MAAM,aAAkC,CAAC;gBAEzC,QAAQ,OAAO,CAAC,CAAC,QAAQ;oBACvB,MAAM,QAAQ,MAAM,CAAC,MAAM,IAAI;oBAE/B,gDAAgD;oBAChD,IAAI,OAAO,QAAQ,CAAC,WAAW,OAAO,QAAQ,CAAC,eAAe;wBAC5D,WAAW,eAAe,GAAG,gBAAgB;oBAC/C,OAAO,IAAI,OAAO,QAAQ,CAAC,UAAU;wBACnC,WAAW,KAAK,GAAG,gBAAgB;oBACrC,OAAO,IAAI,OAAO,QAAQ,CAAC,WAAW,OAAO,QAAQ,CAAC,UAAU;wBAC9D,WAAW,aAAa,GAAG,WAAW,UAAU;oBAClD,OAAO,IAAI,OAAO,QAAQ,CAAC,SAAS;wBAClC,WAAW,IAAI,GAAG,MAAM,WAAW;oBACrC,OAAO,IAAI,OAAO,QAAQ,CAAC,aAAa;wBACtC,WAAW,QAAQ,GAAG,gBAAgB;oBACxC,OAAO,IAAI,OAAO,QAAQ,CAAC,WAAW,OAAO,QAAQ,CAAC,QAAQ;wBAC5D,WAAW,YAAY,GAAG;oBAC5B,OAAO,IAAI,OAAO,QAAQ,CAAC,eAAe,OAAO,QAAQ,CAAC,YAAY;wBACpE,WAAW,gBAAgB,GAAG,gBAAgB;oBAChD,OAAO,IAAI,OAAO,QAAQ,CAAC,WAAW,OAAO,QAAQ,CAAC,SAAS;wBAC7D,WAAW,SAAS,GAAG,SAAS;oBAClC;gBACF;gBAEA,mCAAmC;gBACnC,IAAI,CAAC,WAAW,eAAe,EAAE,UAAU,oCAAoC;gBAC/E,IAAI,CAAC,WAAW,aAAa,EAAE,WAAW,aAAa,GAAG;gBAC1D,IAAI,CAAC,WAAW,0BAA0B,EAAE,WAAW,0BAA0B,GAAG,WAAW,aAAa,IAAI;gBAChH,IAAI,CAAC,WAAW,uBAAuB,EAAE,WAAW,uBAAuB,GAAG,WAAW,aAAa,IAAI;gBAC1G,IAAI,CAAC,WAAW,0BAA0B,EAAE,WAAW,0BAA0B,GAAG;gBACpF,IAAI,CAAC,WAAW,gBAAgB,EAAE,WAAW,gBAAgB,GAAG;gBAChE,IAAI,CAAC,WAAW,IAAI,EAAE,WAAW,IAAI,GAAG;gBACxC,IAAI,CAAC,WAAW,SAAS,EAAE,WAAW,SAAS,GAAG;gBAElD,WAAW,IAAI,CAAC;YAClB;YAEA,qBAAqB;YACrB,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,MAAM,4BAA4B;QAChC,IAAI;YACF,aAAa;YACb,MAAM,sBAAsB,kBAAkB,MAAM,CAAC,CAAC,GAAG,QACvD,oBAAoB,GAAG,CAAC,MAAM,QAAQ,KACtC,GAAG,CAAC,CAAA,aAAc,CAAC;oBACnB,GAAG,UAAU;oBACb,iBAAiB,gBAAgB,WAAW,eAAe;oBAC3D,OAAO,gBAAgB,WAAW,KAAK;oBACvC,UAAU,gBAAgB,WAAW,QAAQ;oBAC7C,kBAAkB,gBAAgB,WAAW,gBAAgB;gBAC/D,CAAC;YAED,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+GAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,CAAC;YAEV,IAAI,OAAO;gBACT,SAAS,MAAM,OAAO;YACxB,OAAO;gBACL,iBAAiB;gBACjB,qBAAqB,EAAE;gBACvB,uBAAuB,IAAI;gBAC3B;YACF;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,cAAc;QAClB,MAAM,UAAU;YACd;YAAmB;YAAS;YAAa;YAAQ;YACjD;YAAgC;YAChC;YAAqB;YAAW;YAAY;YAAgB;SAC7D;QAED,MAAM,aAAa;YACjB,QAAQ,IAAI,CAAC;eACV,oBAAoB,GAAG,CAAC,CAAA,aAAc;oBACvC,WAAW,eAAe;oBAC1B,WAAW,KAAK,IAAI;oBACpB,WAAW,SAAS,IAAI;oBACxB,WAAW,IAAI,IAAI;oBACnB,WAAW,aAAa,IAAI;oBAC5B,WAAW,0BAA0B,IAAI;oBACzC,WAAW,uBAAuB,IAAI;oBACtC,WAAW,0BAA0B,IAAI;oBACzC,WAAW,gBAAgB,IAAI;oBAC/B,WAAW,QAAQ,IAAI;oBACvB,WAAW,YAAY,IAAI;oBAC3B,WAAW,gBAAgB,IAAI;iBAChC,CAAC,IAAI,CAAC;SACR,CAAC,IAAI,CAAC;QAEP,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAAW;QACvD,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC;QACvC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,IAAI,GAAG;QACZ,KAAK,QAAQ,GAAG;QAChB,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACf,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;;;;;;sCACjB,8OAAC;4BAAI,WAAU;sCACZ;mCAAI,MAAM;6BAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,8OAAC;oCAAY,WAAU;mCAAb;;;;;;;;;;;;;;;;;;;;;;;;;;IAOxB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAqC;;;;;;0CACnD,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;oBAG9B,uBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAKL,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS,IAAM,eAAe,CAAC;gCAC/B,WAAU;0CAET,cAAc,WAAW;;;;;;0CAE5B,8OAAC;gCACC,SAAS,IAAM,iBAAiB;gCAChC,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;oBAMJ,6BACG,8OAAC;wBAAI,WAAU;;0CACf,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAoC;;;;;;kDAClD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;;;;;0DACf,8OAAC;gDAAK,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;0CAI5C,8OAAC;gCAAK,UAAU;gCAAqB,WAAU;;kDAE7C,8OAAC;wCAAI,WAAU;;0DACjB,8OAAC;;kEACK,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGpE,8OAAC;wDACC,MAAK;wDACD,QAAQ;wDACR,OAAO,cAAc,eAAe;wDACpC,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,iBAAiB,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACtF,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIpB,8OAAC;;kEACK,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,MAAK;wDACL,OAAO,cAAc,KAAK,IAAI;wDAC9B,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC5E,WAAU;wDACV,aAAY;;;;;;;;;;;;;;;;;;kDAMlB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA0D;;;;;;0DAGxE,8OAAC;gDAAI,WAAU;;kEACnB,8OAAC;;0EACO,8OAAC;gEAAM,WAAU;0EAA+C;;;;;;0EAGhE,8OAAC;gEACC,MAAK;gEACL,QAAQ;gEACR,OAAO,cAAc,SAAS,IAAI;gEAClC,UAAU,CAAC,IAAM,qBAAqB,EAAE,MAAM,CAAC,KAAK;gEACpD,WAAU;gEACV,aAAY;;;;;;;;;;;;kEAItB,8OAAC;;0EACO,8OAAC;gEAAM,WAAU;0EAA+C;;;;;;0EAGhE,8OAAC;gEAAI,WAAU;;kFACrB,8OAAC;wEACS,OAAO,cAAc,IAAI,IAAI;wEAC7B,UAAU,CAAC,IAAM,iBAAiB;gFAAE,GAAG,aAAa;gFAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4EAAC;wEAC3E,WAAU;;0FAEV,8OAAC;gFAAO,OAAM;0FAAG;;;;;;4EAChB,eAAe,GAAG,CAAC,CAAA,qBAClB,8OAAC;oFAAkB,OAAO;8FAAO;mFAApB;;;;;0FAEf,8OAAC;gFAAO,OAAM;0FAAS;;;;;;;;;;;;oEAGxB,cAAc,IAAI,KAAK,0BACtB,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;gFACC,MAAK;gFACL,OAAO;gFACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW;gFACtD,WAAU;gFACV,aAAY;gFACZ,SAAS;;;;;;0FAEX,8OAAC;gFACC,MAAK;gFACL,SAAS,IAAM,WAAW;gFAC1B,UAAU,CAAC,QAAQ,IAAI;gFACvB,WAAU;0FACX;;;;;;;;;;;;oEAMJ,eAAe,MAAM,GAAG,mBACvB,8OAAC;wEAAE,WAAU;;4EAAwB;4EACQ,eAAe,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;4EAC1E,eAAe,MAAM,GAAG,KAAK,CAAC,EAAE,EAAE,eAAe,MAAM,GAAG,EAAE,KAAK,CAAC;;;;;;;;;;;;;;;;;;;kEAM/E,8OAAC;;0EACK,8OAAC;gEAAM,WAAU;0EAA+C;;;;;;0EAGhE,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAK,WAAU;kFAAsC;;;;;;kFAC5D,8OAAC;wEACO,MAAK;wEACL,MAAK;wEACX,QAAQ;wEACF,OAAO,cAAc,aAAa,IAAI;wEACtC,UAAU,CAAC,IAAM,iBAAiB;gFAAE,GAAG,aAAa;gFAAE,eAAe,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4EAAE;wEACrG,WAAU;wEACV,aAAY;;;;;;;;;;;;;;;;;;;;;;;;0DAOpB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAE,WAAU;8DAAyB;;;;;;;;;;;;;;;;;kDAO1C,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA0D;;;;;;0DAGxE,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,OAAO,cAAc,QAAQ,IAAI;wDACjC,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,UAAU,EAAE,MAAM,CAAC,KAAK;4DAAC;wDAC/E,WAAU;;0EAEV,8OAAC;gEAAO,OAAM;0EAAG;;;;;;4DAChB,UAAU,GAAG,CAAC,CAAA,yBACb,8OAAC;oEAAyB,OAAO,SAAS,IAAI;8EAAG,SAAS,IAAI;mEAAjD,SAAS,EAAE;;;;;;;;;;;kEAG5B,8OAAC;wDACC,MAAK;wDACL,SAAS,IAAM,eAAe;wDAC9B,WAAU;kEACX;;;;;;;;;;;;0DAIH,8OAAC;gDACC,MAAK;gDACL,OAAO;gDACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gDAC9C,WAAU;gDACV,aAAY;;;;;;;;;;;;kDAKhB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAA0D;;;;;;0DAIxE,8OAAC;gDAAI,WAAU;;kEACjB,8OAAC;;0EACK,8OAAC;gEAAM,WAAU;0EAA+C;;;;;;0EAGhE,8OAAC;gEAAI,WAAU;;kFACnB,8OAAC;wEACC,MAAK;wEACL,MAAK;wEACC,KAAI;wEACJ,KAAI;wEACJ,OAAO,cAAc,0BAA0B,IAAI;wEACnD,UAAU,CAAC,IAAM,iBAAiB;gFAAE,GAAG,aAAa;gFAAE,4BAA4B,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4EAAE;wEAClH,WAAU;;;;;;kFAEZ,8OAAC;wEAAK,WAAU;kFAAgB;;;;;;;;;;;;4DAEjC,cAAc,eAAe,kBAC5B,8OAAC;gEAAE,WAAU;;oEAA6B;oEACvB,2BAA2B,cAAc,eAAe;oEAAE;oEAAa,cAAc,eAAe;oEAAC;;;;;;;;;;;;;kEAKhI,8OAAC;;0EACK,8OAAC;gEAAM,WAAU;0EAA+C;;;;;;0EAGhE,8OAAC;gEAAI,WAAU;;kFACnB,8OAAC;wEACC,MAAK;wEACL,MAAK;wEACC,KAAI;wEACJ,KAAI;wEACJ,OAAO,cAAc,gBAAgB,IAAI;wEACzC,UAAU,CAAC,IAAM,iBAAiB;gFAAE,GAAG,aAAa;gFAAE,kBAAkB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;4EAAI;wEAC1G,WAAU;;;;;;kFAEZ,8OAAC;wEAAK,WAAU;kFAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kDAOxC,8OAAC;wCAAI,WAAU;;0DACf,8OAAC;;kEACG,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,MAAK;wDACL,OAAO,cAAc,YAAY,IAAI;wDACrC,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,cAAc,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACnF,WAAU;wDACV,aAAY;;;;;;;;;;;;0DAIhB,8OAAC;;kEACC,8OAAC;wDAAM,WAAU;kEAA+C;;;;;;kEAGhE,8OAAC;wDACC,MAAK;wDACL,OAAO,cAAc,gBAAgB,IAAI;wDACzC,UAAU,CAAC,IAAM,iBAAiB;gEAAE,GAAG,aAAa;gEAAE,kBAAkB,EAAE,MAAM,CAAC,KAAK;4DAAC;wDACvF,WAAU;wDACV,aAAY;;;;;;;;;;;;;;;;;;kDAMlB,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDACD,MAAK;gDACL,WAAU;0DACX;;;;;;0DAGC,8OAAC;gDACC,MAAK;gDACP,SAAS,IAAM,eAAe;gDAC9B,WAAU;0DACX;;;;;;;;;;;;;;;;;;;;;;;;oBASN,+BACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDACjD,8OAAC;4CACC,SAAS,IAAM,iBAAiB;4CAChC,WAAU;sDACX;;;;;;;;;;;;8CAKH,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACC,MAAK;wCACL,QAAO;wCACP,UAAU;wCACV,WAAU;;;;;;;;;;;gCAIb,kBAAkB,MAAM,GAAG,mBAC1B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;;wDAAiC;wDACnC,kBAAkB,MAAM;wDAAC;;;;;;;8DAErC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DACC,SAAS,IAAM,uBAAuB,IAAI,IAAI,kBAAkB,GAAG,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ;4DACxF,WAAU;sEACX;;;;;;sEAGD,8OAAC;4DACC,SAAS,IAAM,uBAAuB,IAAI;4DAC1C,WAAU;sEACX;;;;;;;;;;;;;;;;;;sDAML,8OAAC;4CAAI,WAAU;sDACZ,kBAAkB,GAAG,CAAC,CAAC,YAAY,sBAClC,8OAAC;oDAAgB,WAAU;8DACzB,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEACC,MAAK;gEACL,SAAS,oBAAoB,GAAG,CAAC,MAAM,QAAQ;gEACzD,UAAU,CAAC;oEACC,MAAM,cAAc,IAAI,IAAI;oEAC5B,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE;wEACpB,YAAY,GAAG,CAAC,MAAM,QAAQ;oEAChC,OAAO;wEACL,YAAY,MAAM,CAAC,MAAM,QAAQ;oEACnC;oEACA,uBAAuB;gEACzB;gEACA,WAAU;;;;;;0EAEZ,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;kFAA0B,gBAAgB,WAAW,eAAe;;;;;;kFACnF,8OAAC;wEAAI,WAAU;;4EACZ,WAAW,KAAK,IAAI,CAAC,OAAO,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC;4EACnD,WAAW,aAAa,IAAI,CAAC,OAAO,EAAE,WAAW,aAAa,CAAC,GAAG,CAAC;4EACnE,WAAW,IAAI,IAAI,CAAC,MAAM,EAAE,WAAW,IAAI,EAAE;;;;;;;;;;;;;;;;;;;mDArB5C;;;;;;;;;;sDA6Bd,8OAAC;4CAAI,WAAU;;8DACjB,8OAAC;oDACK,SAAS,IAAM,iBAAiB;oDAChC,WAAU;8DACX;;;;;;8DAGD,8OAAC;oDACC,SAAS;oDACT,UAAU,aAAa,oBAAoB,IAAI,KAAK;oDACpD,WAAU;8DAET,YAAY,iBAAiB,CAAC,iBAAiB,EAAE,oBAAoB,IAAI,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAU3F,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAGhE,8OAAC;4CACC,MAAK;4CACL,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAGhE,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;4CACjD,WAAU;;8DAEV,8OAAC;oDAAO,OAAM;8DAAG;;;;;;gDAChB,MAAM,IAAI,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC,CAAA,yBACzE,8OAAC;wDAAsB,OAAO;kEAAW;uDAA5B;;;;;;;;;;;;;;;;;8CAInB,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAGhE,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4CAChD,WAAU;;8DAEV,8OAAC;oDAAO,OAAM;8DAAG;;;;;;gDAChB,MAAM,IAAI,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,WAAW,GAAG,CAAC,CAAA,yBACjF,8OAAC;wDAAsB,OAAO;kEAAW;uDAA5B;;;;;;;;;;;;;;;;;8CAInB,8OAAC;;sDACC,8OAAC;4CAAM,WAAU;sDAA+C;;;;;;sDAGhE,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;4CACzC,WAAU;;8DAEV,8OAAC;oDAAO,OAAM;8DAAO;;;;;;8DACrB,8OAAC;oDAAO,OAAM;8DAAW;;;;;;8DACzB,8OAAC;oDAAO,OAAM;8DAAY;;;;;;8DAC1B,8OAAC;oDAAO,OAAM;8DAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOjC,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAG,WAAU;8DAAwC;;;;;;8DAGtD,8OAAC;oDAAE,WAAU;;wDACV,oBAAoB,MAAM;wDAAC;wDAAK,YAAY,MAAM;wDAAC;;;;;;;;;;;;;sDAGxD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;;;;;8DACf,8OAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;;;;;;;;;;;;0CAM9C,8OAAC;gCAAI,WAAU;0CACZ,oBAAoB,GAAG,CAAC,CAAC,YAAY,sBACpC,8OAAC;wCAEC,WAAU;wCACV,OAAO;4CACL,gBAAgB,GAAG,QAAQ,GAAG,EAAE,CAAC;4CACjC,WAAW;wCACb;;0DAGA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAG,WAAU;0EACX,gBAAgB,WAAW,eAAe;;;;;;4DAE5C,WAAW,KAAK,kBACf,8OAAC;gEAAE,WAAU;0EAAqC,gBAAgB,WAAW,KAAK;;;;;;;;;;;;kEAGtF,8OAAC;wDAAI,WAAU;;0EACnB,8OAAC;gEACO,SAAS,IAAM,qBAAqB,WAAW,EAAE;gEACjD,WAAU;0EAEV,cAAA,8OAAC;oEAAI,WAAU;oEAAU,MAAK;oEAAO,QAAO;oEAAe,SAAQ;8EACjE,cAAA,8OAAC;wEAAK,eAAc;wEAAQ,gBAAe;wEAAQ,aAAa;wEAAG,GAAE;;;;;;;;;;;;;;;;0EAGzE,8OAAC;gEACC,SAAS,IAAM,uBAAuB,WAAW,EAAE;gEACnD,WAAU;0EAEV,cAAA,8OAAC;oEAAI,WAAU;oEAAU,MAAK;oEAAO,QAAO;oEAAe,SAAQ;8EACjE,cAAA,8OAAC;wEAAK,eAAc;wEAAQ,gBAAe;wEAAQ,aAAa;wEAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DAO7E,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EAAqD;;;;;;0EACpE,8OAAC;gEAAI,WAAU;;oEAAmC;oEAC9C,WAAW,aAAa,EAAE,QAAQ,MAAM;;;;;;;0EAE5C,8OAAC;gEAAI,WAAU;;oEAAwB;oEAAK,WAAW,IAAI,IAAI;;;;;;;;;;;;;kEAGjE,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EAAqD;;;;;;0EACpE,8OAAC;gEAAI,WAAU;;oEACZ,WAAW,gBAAgB,IAAI;oEAAI;;;;;;;0EAEtC,8OAAC;gEAAI,WAAU;;oEACZ,WAAW,0BAA0B,IAAI;oEAAE;;;;;;;;;;;;;kEAIhD,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EAAqD;;;;;;0EACpE,8OAAC;gEAAI,WAAU;0EACZ,WAAW,SAAS,IAAI;;;;;;0EAE3B,8OAAC;gEAAI,WAAU;0EAAyB,WAAW,IAAI,IAAI;;;;;;;;;;;;kEAG7D,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;0EAAqD;;;;;;0EACpE,8OAAC;gEAAI,WAAU;0EACZ,gBAAgB,WAAW,QAAQ,KAAK;;;;;;0EAE3C,8OAAC;gEAAI,WAAU;0EACZ,gBAAgB,WAAW,gBAAgB,KAAK;;;;;;;;;;;;;;;;;;;uCAvElD,WAAW,EAAE;;;;;;;;;;0CAgFxB,8OAAC;gCAAI,WAAU;0CACjB,cAAA,8OAAC;oCAAI,WAAU;8CACT,cAAA,8OAAC;wCAAM,WAAU;;0DAEf,8OAAC;gDAAM,WAAU;0DACf,cAAA,8OAAC;;sEACC,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAK,WAAU;kFAA8D;;;;;;kFAG9E,8OAAC;wEAAI,WAAU;;;;;;;;;;;;;;;;;sEAGnB,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;sEAIhF,8OAAC;4DAAG,WAAU;sEACZ,cAAA,8OAAC;gEAAK,WAAU;0EAA8D;;;;;;;;;;;;;;;;;;;;;;0DAQpF,8OAAC;gDAAM,WAAU;0DACd,oBAAoB,GAAG,CAAC,CAAC,YAAY,sBACpC,8OAAC;wDAEC,WAAU;wDACV,OAAO;4DACL,gBAAgB,GAAG,QAAQ,GAAG,EAAE,CAAC;4DACjC,WAAW;wDACb;;0EAGA,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;sFACb,cAAA,8OAAC;gFAAK,WAAU;0FAAU;;;;;;;;;;;sFAE5B,8OAAC;;8FACC,8OAAC;oFAAI,WAAU;8FACtB,gBAAgB,WAAW,eAAe;;;;;;8FAEnC,8OAAC;oFAAI,WAAU;8FACZ,gBAAgB,WAAW,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;;0EAO9C,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;8EACZ,WAAW,SAAS,IAAI;;;;;;;;;;;0EAK7B,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAK,WAAU;8EACb,WAAW,IAAI,IAAI;;;;;;;;;;;0EAKxB,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;;wEAAmC;wEAC9C,WAAW,aAAa,EAAE,QAAQ,MAAM;;;;;;;;;;;;0EAK9C,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;;gFACZ,WAAW,0BAA0B,IAAI;gFAAE;;;;;;;sFAE9C,8OAAC;4EAAI,WAAU;sFACb,cAAA,8OAAC;gFACC,WAAU;gFACV,OAAO;oFAAE,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,WAAW,0BAA0B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;gFAAC;;;;;;;;;;;;;;;;;;;;;;0EAO9F,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EAAI,WAAU;;gFACZ,WAAW,gBAAgB,IAAI;gFAAI;;;;;;;sFAEtC,8OAAC;4EAAI,WAAU;sFACb,cAAA,8OAAC;gFACC,WAAU;gFACV,OAAO;oFAAE,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,WAAW,gBAAgB,IAAI,GAAG,IAAI,KAAK,KAAK,CAAC,CAAC;gFAAC;;;;;;;;;;;;;;;;;;;;;;0EAOxF,8OAAC;gEAAG,WAAU;;kFACZ,8OAAC;wEAAI,WAAU;kFACZ,gBAAgB,WAAW,QAAQ,KAAK;;;;;;oEAE1C,WAAW,gBAAgB,kBAC1B,8OAAC;wEAAI,WAAU;;4EAAwB;4EACjC,gBAAgB,WAAW,gBAAgB;;;;;;;;;;;;;0EAMrD,8OAAC;gEAAG,WAAU;0EACZ,cAAA,8OAAC;oEAAI,WAAU;;sFACb,8OAAC;4EACC,SAAS,IAAM,qBAAqB,WAAW,EAAE;4EACjD,WAAU;4EACV,OAAM;sFAEN,cAAA,8OAAC;gFAAI,WAAU;gFAAqD,MAAK;gFAAO,QAAO;gFAAe,SAAQ;0FAC5G,cAAA,8OAAC;oFAAK,eAAc;oFAAQ,gBAAe;oFAAQ,aAAa;oFAAG,GAAE;;;;;;;;;;;;;;;;sFAGzE,8OAAC;4EACC,SAAS,IAAM,uBAAuB,WAAW,EAAE;4EACnD,WAAU;4EACV,OAAM;sFAEN,cAAA,8OAAC;gFAAI,WAAU;gFAAqD,MAAK;gFAAO,QAAO;gFAAe,SAAQ;0FAC5G,cAAA,8OAAC;oFAAK,eAAc;oFAAQ,gBAAe;oFAAQ,aAAa;oFAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDAzGxE,WAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;4BAsH7B,oBAAoB,MAAM,KAAK,mBAC9B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAK,WAAU;sDAAW;;;;;;;;;;;kDAE7B,8OAAC;wCAAG,WAAU;kDAAwC;;;;;;kDACtD,8OAAC;wCAAE,WAAU;kDACV,cAAc,kBAAkB,gBAC7B,uEACA;;;;;;oCAGL,CAAC,cAAc,CAAC,kBAAkB,CAAC,+BAClC,8OAAC;wCACC,SAAS,IAAM,eAAe;wCAC9B,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;YAUV,mCACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAgC;;;;;;kDAC9C,8OAAC;wCACC,SAAS,IAAM,qBAAqB;wCACpC,WAAU;kDAEV,cAAA,8OAAC;4CAAI,WAAU;4CAAU,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDACjE,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAO7E,8OAAC;4BAAK,UAAU,CAAC;gCACf,EAAE,cAAc;gCAChB,uBAAuB,kBAAkB,EAAE,EAAE;4BAC/C;4BAAG,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,eAAe;oDACxC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,iBAAiB,EAAE,MAAM,CAAC,KAAK;wDAAA;oDAC5F,WAAU;oDACV,QAAQ;;;;;;;;;;;;sDAKZ,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,KAAK,IAAI;oDAClC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAA;oDAClF,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,SAAS,IAAI;oDACtC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,WAAW,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACtF,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,OAAO,kBAAkB,IAAI,IAAI;oDACjC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACjF,WAAU;oDACV,QAAQ;;sEAER,8OAAC;4DAAO,OAAM;sEAAG;;;;;;wDAChB,eAAe,GAAG,CAAC,CAAA,qBAClB,8OAAC;gEAAkB,OAAO;0EAAO;+DAApB;;;;;;;;;;;;;;;;;sDAMnB,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,MAAK;oDACL,KAAI;oDACJ,OAAO,kBAAkB,aAAa;oDACtC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,eAAe,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wDAAC;oDAC3G,WAAU;oDACV,QAAQ;;;;;;;;;;;;sDAKZ,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,MAAK;oDACL,KAAI;oDACJ,KAAI;oDACJ,OAAO,kBAAkB,0BAA0B,IAAI;oDACvD,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,4BAA4B,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wDAAC;oDACxH,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,MAAK;oDACL,KAAI;oDACJ,KAAI;oDACJ,OAAO,kBAAkB,gBAAgB,IAAI;oDAC7C,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,kBAAkB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wDAAG;oDAChH,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,QAAQ,IAAI;oDACrC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,UAAU,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACrF,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,gBAAgB,IAAI;oDAC7C,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,kBAAkB,EAAE,MAAM,CAAC,KAAK;wDAAA;oDAC7F,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,OAAO,kBAAkB,YAAY,IAAI;oDACzC,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,cAAc,EAAE,MAAM,CAAC,KAAK;wDAAA;oDACzF,WAAU;;;;;;;;;;;;sDAKd,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAGhE,8OAAC;oDACC,MAAK;oDACL,KAAI;oDACJ,OAAO,kBAAkB,eAAe,IAAI;oDAC5C,UAAU,CAAC,IAAM,qBAAqB;4DAAC,GAAG,iBAAiB;4DAAE,iBAAiB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wDAAC;oDAC7G,WAAU;;;;;;;;;;;;;;;;;;8CAMhB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,MAAK;4CACL,SAAS,IAAM,qBAAqB;4CACpC,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB","debugId":null}}]
}