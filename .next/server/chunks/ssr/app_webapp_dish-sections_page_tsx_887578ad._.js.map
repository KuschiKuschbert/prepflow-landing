{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/dish-sections/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\n\ninterface KitchenSection {\n  id: string;\n  name: string;\n  description?: string;\n  color: string;\n  created_at: string;\n  updated_at: string;\n  menu_dishes: MenuDish[];\n}\n\ninterface MenuDish {\n  id: string;\n  name: string;\n  description?: string;\n  selling_price: number;\n  category: string;\n  kitchen_section_id?: string;\n}\n\nexport default function DishSectionsPage() {\n  const { t } = useTranslation();\n  const [kitchenSections, setKitchenSections] = useState<KitchenSection[]>([]);\n  const [menuDishes, setMenuDishes] = useState<MenuDish[]>([]);\n  const [loading, setLoading] = useState(false); // Start with false to prevent skeleton flash\n  const [error, setError] = useState<string | null>(null);\n  const [showForm, setShowForm] = useState(false);\n  const [editingSection, setEditingSection] = useState<KitchenSection | null>(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    color: '#29E7CD'\n  });\n\n  // Mock user ID for now\n  const userId = 'user-123';\n\n  useEffect(() => {\n    fetchKitchenSections();\n    fetchMenuDishes();\n  }, []);\n\n  const fetchKitchenSections = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/kitchen-sections?userId=${userId}`);\n      const result = await response.json();\n      \n      if (result.success) {\n        setKitchenSections(result.data);\n      } else {\n        setError(result.message || 'Failed to fetch kitchen sections');\n      }\n    } catch (err) {\n      setError('Failed to fetch kitchen sections');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMenuDishes = async () => {\n    try {\n      const response = await fetch(`/api/menu-dishes?userId=${userId}`);\n      const result = await response.json();\n      \n      if (result.success) {\n        setMenuDishes(result.data);\n      }\n    } catch (err) {\n      console.error('Failed to fetch menu dishes:', err);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      const url = editingSection ? '/api/kitchen-sections' : '/api/kitchen-sections';\n      const method = editingSection ? 'PUT' : 'POST';\n      \n      const body = editingSection \n        ? {\n            id: editingSection.id,\n            name: formData.name,\n            description: formData.description,\n            color: formData.color\n          }\n        : {\n            userId,\n            name: formData.name,\n            description: formData.description,\n            color: formData.color\n          };\n\n      const response = await fetch(url, {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        await fetchKitchenSections();\n        resetForm();\n        setError(null);\n      } else {\n        setError(result.message || 'Failed to save kitchen section');\n      }\n    } catch (err) {\n      setError('Failed to save kitchen section');\n    }\n  };\n\n  const handleEdit = (section: KitchenSection) => {\n    setEditingSection(section);\n    setFormData({\n      name: section.name,\n      description: section.description || '',\n      color: section.color\n    });\n    setShowForm(true);\n  };\n\n  const handleDelete = async (id: string) => {\n    if (!confirm('Are you sure you want to delete this kitchen section? All dishes will be unassigned.')) return;\n    \n    try {\n      const response = await fetch(`/api/kitchen-sections?id=${id}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        await fetchKitchenSections();\n        await fetchMenuDishes();\n      } else {\n        setError(result.message || 'Failed to delete kitchen section');\n      }\n    } catch (err) {\n      setError('Failed to delete kitchen section');\n    }\n  };\n\n  const handleAssignDish = async (dishId: string, sectionId: string | null) => {\n    try {\n      const response = await fetch('/api/assign-dish-section', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ dishId, sectionId })\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        await fetchMenuDishes();\n        await fetchKitchenSections();\n      } else {\n        setError(result.message || 'Failed to assign dish to section');\n      }\n    } catch (err) {\n      setError('Failed to assign dish to section');\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      color: '#29E7CD'\n    });\n    setShowForm(false);\n    setEditingSection(null);\n  };\n\n  const getUnassignedDishes = () => {\n    return menuDishes.filter(dish => !dish.kitchen_section_id);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] text-white\">\n        <div className=\"container mx-auto px-4 py-8\">\n          <LoadingSkeleton variant=\"stats\" height=\"64px\" />\n          <div className=\"space-y-4 mt-6\">\n            <LoadingSkeleton variant=\"card\" count={5} height=\"80px\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] text-white\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-white mb-2\">üçΩÔ∏è {t('dishSections.title', 'Dish Sections')}</h1>\n            <p className=\"text-gray-400\">{t('dishSections.subtitle', 'Organize dishes by kitchen sections for prep lists')}</p>\n          </div>\n          <button\n            onClick={() => setShowForm(true)}\n            className=\"px-6 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-2xl hover:shadow-xl transition-all duration-200 font-semibold\"\n          >\n            + {t('dishSections.addSection', 'Add Section')}\n          </button>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-400/10 border border-red-400/20 rounded-2xl\">\n            <p className=\"text-red-400\">{error}</p>\n          </div>\n        )}\n\n        {/* Kitchen Sections */}\n        <div className=\"space-y-6\">\n          {kitchenSections.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"w-20 h-20 bg-gradient-to-br from-[#29E7CD]/20 to-[#D925C7]/20 rounded-2xl flex items-center justify-center mx-auto mb-4\">\n                <span className=\"text-3xl\">üçΩÔ∏è</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-white mb-2\">{t('dishSections.noSections', 'No Kitchen Sections')}</h3>\n              <p className=\"text-gray-400 mb-6\">{t('dishSections.noSectionsDesc', 'Create kitchen sections to organize your dishes for prep lists')}</p>\n              <button\n                onClick={() => setShowForm(true)}\n                className=\"px-6 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-2xl hover:shadow-xl transition-all duration-200 font-semibold\"\n              >\n                {t('dishSections.createFirstSection', 'Create Your First Section')}\n              </button>\n            </div>\n          ) : (\n            kitchenSections.map((section) => (\n              <div\n                key={section.id}\n                className=\"bg-[#1f1f1f] border border-[#2a2a2a] rounded-2xl p-6 hover:shadow-xl hover:border-[#29E7CD]/50 transition-all duration-200\"\n              >\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div \n                      className=\"w-12 h-12 rounded-xl flex items-center justify-center\"\n                      style={{ backgroundColor: `${section.color}20` }}\n                    >\n                      <span className=\"text-lg\">üçΩÔ∏è</span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-white text-lg\">{section.name}</h3>\n                      {section.description && (\n                        <p className=\"text-sm text-gray-400\">{section.description}</p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => handleEdit(section)}\n                      className=\"p-2 text-[#29E7CD] hover:bg-[#29E7CD]/10 rounded-xl transition-colors\"\n                       title=\"Edit\"\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => handleDelete(section.id)}\n                      className=\"p-2 text-red-400 hover:bg-red-400/10 rounded-xl transition-colors\"\n                       title=\"Delete\"\n                    >\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n\n                {/* Dishes in this section */}\n                <div className=\"bg-[#2a2a2a]/30 rounded-xl p-4\">\n                  <h4 className=\"text-sm font-semibold text-white mb-3\">\n                    {t('dishSections.dishesInSection', 'Dishes in this section')} ({section.menu_dishes.length})\n                  </h4>\n                  {section.menu_dishes.length === 0 ? (\n                    <p className=\"text-sm text-gray-400\">{t('dishSections.noDishesInSection', 'No dishes assigned to this section')}</p>\n                  ) : (\n                    <div className=\"space-y-2\">\n                      {section.menu_dishes.map((dish) => (\n                        <div key={dish.id} className=\"flex items-center justify-between bg-[#1f1f1f] rounded-lg p-3\">\n                          <div>\n                            <p className=\"text-white font-semibold text-sm\">{dish.name}</p>\n                            <p className=\"text-gray-400 text-xs\">{dish.category}</p>\n                          </div>\n                          <button\n                            onClick={() => handleAssignDish(dish.id, null)}\n                            className=\"p-1 text-red-400 hover:bg-red-400/10 rounded transition-colors\"\n                             title=\"Unassign\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n\n        {/* Unassigned Dishes */}\n        {getUnassignedDishes().length > 0 && (\n          <div className=\"mt-8\">\n            <h2 className=\"text-xl font-semibold text-white mb-4\">\n              {t('dishSections.unassignedDishes', 'Unassigned Dishes')} ({getUnassignedDishes().length})\n            </h2>\n            <div className=\"bg-[#1f1f1f] border border-[#2a2a2a] rounded-2xl p-6\">\n              <div className=\"space-y-3\">\n                {getUnassignedDishes().map((dish) => (\n                  <div key={dish.id} className=\"flex items-center justify-between bg-[#2a2a2a]/30 rounded-lg p-4\">\n                    <div>\n                      <p className=\"text-white font-semibold\">{dish.name}</p>\n                      <p className=\"text-gray-400 text-sm\">{dish.category}</p>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <select\n                        value=\"\"\n                        onChange={(e) => handleAssignDish(dish.id, e.target.value || null)}\n                        className=\"px-3 py-2 bg-[#1f1f1f] border border-[#2a2a2a] rounded-lg text-white text-sm focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      >\n                        <option value=\"\">{t('dishSections.assignToSection', 'Assign to section')}</option>\n                        {kitchenSections.map((section) => (\n                          <option key={section.id} value={section.id}>\n                            {section.name}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Add/Edit Form Modal */}\n        {showForm && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] border border-[#2a2a2a] rounded-3xl p-6 w-full max-w-md\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-white\">\n                  {editingSection ? t('dishSections.editSection', 'Edit Section') : t('dishSections.addSection', 'Add Section')}\n                </h2>\n                <button\n                  onClick={resetForm}\n                  className=\"p-2 text-gray-400 hover:text-white transition-colors\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t('dishSections.sectionName', 'Section Name')}\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    placeholder=\"e.g., Hot Kitchen, Cold Kitchen, Pastry\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t('dishSections.description', 'Description')}\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    rows={3}\n                     placeholder=\"Optional description of this section\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    {t('dishSections.color', 'Color')}\n                  </label>\n                  <div className=\"flex items-center space-x-3\">\n                    <input\n                      type=\"color\"\n                      value={formData.color}\n                      onChange={(e) => setFormData({ ...formData, color: e.target.value })}\n                      className=\"w-12 h-12 rounded-xl border border-[#2a2a2a] cursor-pointer\"\n                    />\n                    <input\n                      type=\"text\"\n                      value={formData.color}\n                      onChange={(e) => setFormData({ ...formData, color: e.target.value })}\n                      className=\"flex-1 px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      placeholder=\"#29E7CD\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={resetForm}\n                    className=\"flex-1 px-4 py-3 bg-[#2a2a2a] text-gray-300 rounded-xl hover:bg-[#2a2a2a]/80 transition-colors\"\n                  >\n                    {t('dishSections.cancel', 'Cancel')}\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"flex-1 px-4 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-xl hover:shadow-xl transition-all duration-200 font-semibold\"\n                  >\n                    {editingSection ? t('dishSections.update', 'Update') : t('dishSections.create', 'Create')}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}