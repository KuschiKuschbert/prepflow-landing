{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,uMAAY,EAAC,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,IAAA,uMAAY,EAAC,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/text-utils.ts"],"sourcesContent":["// Text formatting utilities for ingredient management\n\nexport function formatIngredientName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatBrandName(brand: string): string {\n  if (!brand) return '';\n  \n  return brand\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatSupplierName(supplier: string): string {\n  if (!supplier) return '';\n  \n  return supplier\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatStorageLocation(location: string): string {\n  if (!location) return '';\n  \n  return location\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatTextInput(text: string): string {\n  if (!text) return '';\n  \n  return text\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatRecipeName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatDishName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;;;;;;;;;;;;AAE/C,SAAS,qBAAqB,IAAY;IAC/C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,KAAa;IAC3C,IAAI,CAAC,OAAO,OAAO;IAEnB,OAAO,MACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,mBAAmB,QAAgB;IACjD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,sBAAsB,QAAgB;IACpD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,IAAY;IAC1C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,iBAAiB,IAAY;IAC3C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,eAAe,IAAY;IACzC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/hooks/useSmartLoading.ts"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n/**\n * Smart loading hook that prevents skeleton flash during rapid navigation\n * Only shows loading state if the component stays mounted for a minimum duration\n */\nexport function useSmartLoading(initialLoading = false, minLoadingDelay = 100) {\n  const [loading, setLoading] = useState(initialLoading);\n  const [isMounted, setIsMounted] = useState(true);\n  const loadingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const mountedTimeRef = useRef<number>(Date.now());\n\n  useEffect(() => {\n    setIsMounted(true);\n    mountedTimeRef.current = Date.now();\n    \n    return () => {\n      setIsMounted(false);\n      if (loadingTimeoutRef.current) {\n        clearTimeout(loadingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const setSmartLoading = (newLoading: boolean) => {\n    if (!isMounted) return;\n    \n    if (newLoading) {\n      // Only show loading if component has been mounted for minimum time\n      const timeSinceMount = Date.now() - mountedTimeRef.current;\n      if (timeSinceMount >= minLoadingDelay) {\n        setLoading(true);\n      } else {\n        // Delay showing loading state\n        loadingTimeoutRef.current = setTimeout(() => {\n          if (isMounted) {\n            setLoading(true);\n          }\n        }, minLoadingDelay - timeSinceMount);\n      }\n    } else {\n      // Clear any pending loading timeout\n      if (loadingTimeoutRef.current) {\n        clearTimeout(loadingTimeoutRef.current);\n        loadingTimeoutRef.current = null;\n      }\n      setLoading(false);\n    }\n  };\n\n  return [loading, setSmartLoading] as const;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAMO,SAAS,gBAAgB,iBAAiB,KAAK,EAAE,kBAAkB,GAAG;IAC3E,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,oBAAoB,IAAA,+MAAM,EAAwB;IACxD,MAAM,iBAAiB,IAAA,+MAAM,EAAS,KAAK,GAAG;IAE9C,IAAA,kNAAS,EAAC;QACR,aAAa;QACb,eAAe,OAAO,GAAG,KAAK,GAAG;QAEjC,OAAO;YACL,aAAa;YACb,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,aAAa,kBAAkB,OAAO;YACxC;QACF;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,WAAW;QAEhB,IAAI,YAAY;YACd,mEAAmE;YACnE,MAAM,iBAAiB,KAAK,GAAG,KAAK,eAAe,OAAO;YAC1D,IAAI,kBAAkB,iBAAiB;gBACrC,WAAW;YACb,OAAO;gBACL,8BAA8B;gBAC9B,kBAAkB,OAAO,GAAG,WAAW;oBACrC,IAAI,WAAW;wBACb,WAAW;oBACb;gBACF,GAAG,kBAAkB;YACvB;QACF,OAAO;YACL,oCAAoC;YACpC,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,aAAa,kBAAkB,OAAO;gBACtC,kBAAkB,OAAO,GAAG;YAC9B;YACA,WAAW;QACb;IACF;IAEA,OAAO;QAAC;QAAS;KAAgB;AACnC","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/LoadingSkeleton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'table' | 'chart' | 'list' | 'form' | 'stats' | 'text' | 'button';\n  className?: string;\n  count?: number;\n  height?: string;\n  width?: string;\n}\n\nexport function LoadingSkeleton({ \n  variant = 'card', \n  className = '', \n  count = 1, \n  height,\n  width \n}: LoadingSkeletonProps) {\n  const baseClasses = 'animate-pulse bg-[#2a2a2a] rounded-xl';\n  \n  const variants = {\n    card: 'h-32',\n    table: 'h-64',\n    chart: 'h-80',\n    list: 'h-16',\n    form: 'h-96',\n    stats: 'h-24',\n    text: 'h-4',\n    button: 'h-10 w-24'\n  };\n\n  const skeletonClasses = `${baseClasses} ${variants[variant]} ${className}`;\n  const style = {\n    ...(height && { height }),\n    ...(width && { width })\n  };\n\n  if (count === 1) {\n    return <div className={skeletonClasses} style={style}></div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className={skeletonClasses} style={style}></div>\n      ))}\n    </div>\n  );\n}\n\n// Specialized skeleton components for common patterns\nexport function PageSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header skeleton */}\n        <div className=\"animate-pulse mb-8\">\n          <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n        </div>\n\n        {/* Action buttons skeleton */}\n        <div className=\"flex gap-3 mb-8\">\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-32 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-40 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-28 animate-pulse\"></div>\n        </div>\n\n        {/* Main content skeleton */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-[#2a2a2a] rounded-xl\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableSkeleton({ rows = 5, columns = 4 }: { rows?: number; columns?: number }) {\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-6 py-4 border-b border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex gap-4\">\n            {Array.from({ length: columns }).map((_, i) => (\n              <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-24\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Rows */}\n      <div className=\"divide-y divide-[#2a2a2a]\">\n        {Array.from({ length: rows }).map((_, i) => (\n          <div key={i} className=\"px-6 py-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"flex gap-4\">\n                {Array.from({ length: columns }).map((_, j) => (\n                  <div key={j} className=\"h-4 bg-[#2a2a2a] rounded w-20\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ChartSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n        <div className=\"h-80 bg-[#2a2a2a] rounded-xl\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CardGridSkeleton({ count = 6 }: { count?: number }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-3\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function StatsGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-3\"></div>\n          <div className=\"h-8 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function FormSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i}>\n              <div className=\"h-4 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n              <div className=\"h-10 bg-[#2a2a2a] rounded-xl\"></div>\n            </div>\n          ))}\n          <div className=\"h-10 bg-[#2a2a2a] rounded-xl w-24\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Landing page specific skeletons\nexport function HeroSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] flex items-center justify-center\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-16 bg-[#2a2a2a] rounded-3xl w-2/3 mb-8 mx-auto\"></div>\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/2 mb-12 mx-auto\"></div>\n          <div className=\"flex justify-center gap-4 mb-16\">\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-48\"></div>\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-40\"></div>\n          </div>\n          <div className=\"h-96 bg-[#2a2a2a] rounded-3xl\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function PricingSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-[#2a2a2a] rounded-xl w-1/3 mb-6\"></div>\n        <div className=\"h-12 bg-[#2a2a2a] rounded-xl w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-8\"></div>\n        <div className=\"space-y-4 mb-8\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-full\"></div>\n          ))}\n        </div>\n        <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-full\"></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/unit-conversion.ts"],"sourcesContent":["// Unit conversion utilities for ingredient management\n\nexport interface ConversionResult {\n  conversionFactor: number;\n  isValid: boolean;\n  error?: string;\n}\n\n// Common unit conversions\nconst CONVERSION_FACTORS: Record<string, Record<string, number>> = {\n  // Weight conversions (base unit: grams)\n  'g': { 'g': 1, 'kg': 0.001, 'oz': 0.035274, 'lb': 0.002205 },\n  'kg': { 'g': 1000, 'kg': 1, 'oz': 35.274, 'lb': 2.205 },\n  'oz': { 'g': 28.3495, 'kg': 0.0283495, 'oz': 1, 'lb': 0.0625 },\n  'lb': { 'g': 453.592, 'kg': 0.453592, 'oz': 16, 'lb': 1 },\n  \n  // Volume conversions (base unit: milliliters)\n  'ml': { 'ml': 1, 'l': 0.001, 'tsp': 0.202884, 'tbsp': 0.067628, 'cup': 0.004227 },\n  'l': { 'ml': 1000, 'l': 1, 'tsp': 202.884, 'tbsp': 67.628, 'cup': 4.227 },\n  'tsp': { 'ml': 4.92892, 'l': 0.00492892, 'tsp': 1, 'tbsp': 0.333333, 'cup': 0.0208333 },\n  'tbsp': { 'ml': 14.7868, 'l': 0.0147868, 'tsp': 3, 'tbsp': 1, 'cup': 0.0625 },\n  'cup': { 'ml': 236.588, 'l': 0.236588, 'tsp': 48, 'tbsp': 16, 'cup': 1 },\n  \n  // Piece conversions (base unit: pieces)\n  'pc': { 'pc': 1, 'box': 0.01, 'pack': 0.1, 'bag': 0.05, 'bottle': 0.1, 'can': 0.1 },\n  'box': { 'pc': 100, 'box': 1, 'pack': 10, 'bag': 5, 'bottle': 10, 'can': 10 },\n  'pack': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'bag': { 'pc': 20, 'box': 0.2, 'pack': 2, 'bag': 1, 'bottle': 2, 'can': 2 },\n  'bottle': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'can': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 }\n};\n\nexport function convertUnit(amount: number, fromUnit: string, toUnit: string): ConversionResult {\n  if (!fromUnit || !toUnit) {\n    return { conversionFactor: 1, isValid: false, error: 'Unit not specified' };\n  }\n\n  // Normalize units - handle common variations\n  const normalizeUnit = (unit: string): string => {\n    const normalized = unit.toLowerCase().trim();\n    // Handle common unit variations\n    if (normalized === 'gm') return 'g';\n    if (normalized === 'ml') return 'ml';\n    if (normalized === 'pc') return 'pc';\n    return normalized;\n  };\n\n  const from = normalizeUnit(fromUnit);\n  const to = normalizeUnit(toUnit);\n\n  if (from === to) {\n    return { conversionFactor: 1, isValid: true };\n  }\n\n  const fromFactors = CONVERSION_FACTORS[from];\n  if (!fromFactors) {\n    return { conversionFactor: 1, isValid: false, error: `Unknown unit: ${fromUnit}` };\n  }\n\n  const conversionFactor = fromFactors[to];\n  if (conversionFactor === undefined) {\n    return { conversionFactor: 1, isValid: false, error: `Cannot convert from ${fromUnit} to ${toUnit}` };\n  }\n\n  return { conversionFactor, isValid: true };\n}\n\nexport function convertIngredientCost(\n  cost: number, \n  fromUnit: string, \n  toUnit: string, \n  ingredientName: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit);\n  if (!conversion.isValid) {\n    // Only log unique conversion errors to reduce console spam\n    const errorKey = `${fromUnit}-${toUnit}`;\n    if (!conversionErrors.has(errorKey)) {\n      console.warn(`Conversion failed for ${ingredientName}: ${conversion.error}`);\n      conversionErrors.add(errorKey);\n    }\n    return cost;\n  }\n  return cost * conversion.conversionFactor;\n}\n\n// Track conversion errors to prevent spam\nconst conversionErrors = new Set<string>();\n\nexport function isVolumeUnit(unit: string): boolean {\n  const volumeUnits = ['ml', 'l', 'tsp', 'tbsp', 'cup'];\n  return volumeUnits.includes(unit.toLowerCase());\n}\n\nexport function isWeightUnit(unit: string): boolean {\n  const weightUnits = ['g', 'kg', 'oz', 'lb'];\n  return weightUnits.includes(unit.toLowerCase());\n}\n\nexport function getAllUnits(): string[] {\n  return Object.keys(CONVERSION_FACTORS);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientTable.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { convertIngredientCost } from '@/lib/unit-conversion';\nimport { LoadingSkeleton } from '@/components/ui/LoadingSkeleton';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface IngredientTableProps {\n  ingredients: Ingredient[];\n  displayUnit: string;\n  onEdit: (ingredient: Ingredient) => void;\n  onDelete: (id: string) => Promise<void>;\n  selectedIngredients: Set<string>;\n  onSelectIngredient: (id: string, selected: boolean) => void;\n  onSelectAll: (selected: boolean) => void;\n  loading?: boolean;\n}\n\nexport default function IngredientTable({\n  ingredients,\n  displayUnit,\n  onEdit,\n  onDelete,\n  selectedIngredients,\n  onSelectIngredient,\n  onSelectAll,\n  loading = false\n}: IngredientTableProps) {\n  const { t } = useTranslation();\n  const [deletingId, setDeletingId] = useState<string | null>(null);\n\n  const handleDelete = async (id: string) => {\n    if (window.confirm('Are you sure you want to delete this ingredient?')) {\n      setDeletingId(id);\n      try {\n        await onDelete(id);\n      } finally {\n        setDeletingId(null);\n      }\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-AU', {\n      style: 'currency',\n      currency: 'AUD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 4\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-AU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-[#1f1f1f] rounded-3xl p-6 border border-[#2a2a2a]\">\n        <LoadingSkeleton variant=\"table\" rows={5} columns={6} />\n      </div>\n    );\n  }\n\n  if (ingredients.length === 0) {\n    return (\n      <div className=\"bg-[#1f1f1f] rounded-3xl p-6 border border-[#2a2a2a] text-center\">\n        <div className=\"text-gray-400 mb-4\">\n          <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zm0 4a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1V8zm8 0a1 1 0 011-1h4a1 1 0 011 1v6a1 1 0 01-1 1h-4a1 1 0 01-1-1V8z\" clipRule=\"evenodd\" />\n          </svg>\n          <h3 className=\"text-xl font-semibold text-white mb-2\">No Ingredients Found</h3>\n          <p className=\"text-gray-400\">Start by adding your first ingredient to get started.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl border border-[#2a2a2a] overflow-hidden\">\n      <div className=\"px-6 py-4 bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-xl font-semibold text-white\">\n            Ingredients ({ingredients.length})\n          </h2>\n          <div className=\"flex items-center gap-4\">\n            <label className=\"flex items-center gap-2 text-sm text-gray-300\">\n              <input\n                type=\"checkbox\"\n                checked={selectedIngredients.size === ingredients.length && ingredients.length > 0}\n                onChange={(e) => onSelectAll(e.target.checked)}\n                className=\"w-4 h-4 text-[#29E7CD] bg-[#2a2a2a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n              />\n              Select All\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedIngredients.size === ingredients.length && ingredients.length > 0}\n                  onChange={(e) => onSelectAll(e.target.checked)}\n                  className=\"w-4 h-4 text-[#29E7CD] bg-[#2a2a2a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Name\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Brand\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Pack Size\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Cost/Unit\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Supplier\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Stock\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-[#2a2a2a]\">\n            {ingredients.map((ingredient) => {\n              const convertedCost = convertIngredientCost(\n                ingredient.cost_per_unit,\n                ingredient.unit || 'GM',\n                displayUnit,\n                ingredient.ingredient_name || 'Unknown'\n              );\n              \n              const isLowStock = ingredient.min_stock_level && ingredient.current_stock && \n                ingredient.current_stock <= ingredient.min_stock_level;\n\n              return (\n                <tr \n                  key={ingredient.id} \n                  className=\"hover:bg-[#2a2a2a]/20 transition-colors duration-200\"\n                >\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedIngredients.has(ingredient.id)}\n                      onChange={(e) => onSelectIngredient(ingredient.id, e.target.checked)}\n                      className=\"w-4 h-4 text-[#29E7CD] bg-[#2a2a2a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                    />\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-white\">\n                      {ingredient.ingredient_name}\n                    </div>\n                    {ingredient.product_code && (\n                      <div className=\"text-sm text-gray-400\">\n                        {ingredient.product_code}\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    {ingredient.brand || '-'}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    {ingredient.pack_size} {ingredient.pack_size_unit}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    {formatCurrency(convertedCost)}/{displayUnit}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                    {ingredient.supplier || '-'}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={`text-sm ${isLowStock ? 'text-red-400' : 'text-gray-300'}`}>\n                        {ingredient.current_stock || 0} {ingredient.unit}\n                      </span>\n                      {isLowStock && (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-900/20 text-red-400\">\n                          Low Stock\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        onClick={() => onEdit(ingredient)}\n                        className=\"text-[#29E7CD] hover:text-[#29E7CD]/80 transition-colors\"\n                        aria-label={`Edit ${ingredient.ingredient_name}`}\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                        </svg>\n                      </button>\n                      <button\n                        onClick={() => handleDelete(ingredient.id)}\n                        disabled={deletingId === ingredient.id}\n                        className=\"text-red-400 hover:text-red-300 transition-colors disabled:opacity-50\"\n                        aria-label={`Delete ${ingredient.ingredient_name}`}\n                      >\n                        {deletingId === ingredient.id ? (\n                          <div className=\"w-4 h-4 border-2 border-red-400 border-t-transparent rounded-full animate-spin\"></div>\n                        ) : (\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                          </svg>\n                        )}\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1467, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientFilters.tsx"],"sourcesContent":["'use client';\n\nimport { useTranslation } from '@/lib/useTranslation';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface IngredientFiltersProps {\n  ingredients: Ingredient[];\n  searchTerm: string;\n  supplierFilter: string;\n  storageFilter: string;\n  sortBy: 'name' | 'cost_asc' | 'cost_desc' | 'supplier';\n  displayUnit: string;\n  onSearchChange: (term: string) => void;\n  onSupplierFilterChange: (supplier: string) => void;\n  onStorageFilterChange: (storage: string) => void;\n  onSortChange: (sort: 'name' | 'cost_asc' | 'cost_desc' | 'supplier') => void;\n  onDisplayUnitChange: (unit: string) => void;\n}\n\nexport default function IngredientFilters({\n  ingredients,\n  searchTerm,\n  supplierFilter,\n  storageFilter,\n  sortBy,\n  displayUnit,\n  onSearchChange,\n  onSupplierFilterChange,\n  onStorageFilterChange,\n  onSortChange,\n  onDisplayUnitChange\n}: IngredientFiltersProps) {\n  const { t } = useTranslation();\n\n  // Get unique suppliers and storage locations for filter options\n  const uniqueSuppliers = Array.from(new Set(ingredients.map(i => i.supplier).filter(Boolean))).sort();\n  const uniqueStorageLocations = Array.from(new Set(ingredients.map(i => i.storage_location).filter(Boolean))).sort();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Unit Selector */}\n      <div className=\"bg-[#1f1f1f] p-4 rounded-lg border border-[#2a2a2a]\">\n        <div className=\"flex items-center gap-3\">\n          <label className=\"text-sm font-medium text-gray-300\">Display costs in:</label>\n          <select\n            value={displayUnit}\n            onChange={(e) => onDisplayUnitChange(e.target.value)}\n            className=\"px-3 py-2 bg-[#0a0a0a] border border-[#2a2a2a] rounded-lg text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n          >\n            <optgroup label=\"Weight\">\n              <option value=\"g\">Grams (g)</option>\n              <option value=\"kg\">Kilograms (kg)</option>\n              <option value=\"oz\">Ounces (oz)</option>\n              <option value=\"lb\">Pounds (lb)</option>\n            </optgroup>\n            <optgroup label=\"Volume\">\n              <option value=\"ml\">Milliliters (ml)</option>\n              <option value=\"l\">Liters (L)</option>\n              <option value=\"tsp\">Teaspoons (tsp)</option>\n              <option value=\"tbsp\">Tablespoons (tbsp)</option>\n              <option value=\"cup\">Cups</option>\n            </optgroup>\n          </select>\n        </div>\n      </div>\n\n      {/* Search and Filter Controls */}\n      <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow border border-[#2a2a2a]\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          {/* Search */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              🔍 Search\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"Search ingredients...\"\n              value={searchTerm}\n              onChange={(e) => onSearchChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD] placeholder-gray-500\"\n            />\n          </div>\n\n          {/* Supplier Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              🏪 Supplier\n            </label>\n            <select\n              value={supplierFilter}\n              onChange={(e) => onSupplierFilterChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            >\n              <option value=\"\">All Suppliers</option>\n              {uniqueSuppliers.map(supplier => (\n                <option key={supplier} value={supplier}>{supplier}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Storage Filter */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              📍 Storage\n            </label>\n            <select\n              value={storageFilter}\n              onChange={(e) => onStorageFilterChange(e.target.value)}\n              className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            >\n              <option value=\"\">All Locations</option>\n              {uniqueStorageLocations.map(location => (\n                <option key={location} value={location}>{location}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Sort By */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              📊 Sort By\n            </label>\n            <select\n              value={sortBy}\n              onChange={(e) => onSortChange(e.target.value as 'name' | 'cost_asc' | 'cost_desc' | 'supplier')}\n              className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            >\n              <option value=\"name\">Name</option>\n              <option value=\"cost_asc\">Cost (Low to High)</option>\n              <option value=\"cost_desc\">Cost (High to Low)</option>\n              <option value=\"supplier\">Supplier</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Filter Summary */}\n        {(searchTerm || supplierFilter || storageFilter) && (\n          <div className=\"mt-4 pt-4 border-t border-[#2a2a2a]\">\n            <div className=\"flex flex-wrap gap-2\">\n              <span className=\"text-sm text-gray-400\">Active filters:</span>\n              {searchTerm && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-[#29E7CD]/10 text-[#29E7CD] border border-[#29E7CD]/20\">\n                  Search: \"{searchTerm}\"\n                </span>\n              )}\n              {supplierFilter && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-[#3B82F6]/10 text-[#3B82F6] border border-[#3B82F6]/20\">\n                  Supplier: {supplierFilter}\n                </span>\n              )}\n              {storageFilter && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-[#D925C7]/10 text-[#D925C7] border border-[#D925C7]/20\">\n                  Storage: {storageFilter}\n                </span>\n              )}\n              <button\n                onClick={() => {\n                  onSearchChange('');\n                  onSupplierFilterChange('');\n                  onStorageFilterChange('');\n                }}\n                className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-600/10 text-gray-400 hover:text-white border border-gray-600/20 hover:border-gray-500/40 transition-colors\"\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAwCe,SAAS,kBAAkB,EACxC,WAAW,EACX,UAAU,EACV,cAAc,EACd,aAAa,EACb,MAAM,EACN,WAAW,EACX,cAAc,EACd,sBAAsB,EACtB,qBAAqB,EACrB,YAAY,EACZ,mBAAmB,EACI;IACvB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,uIAAc;IAE5B,gEAAgE;IAChE,MAAM,kBAAkB,MAAM,IAAI,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,WAAW,IAAI;IAClG,MAAM,yBAAyB,MAAM,IAAI,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,gBAAgB,EAAE,MAAM,CAAC,WAAW,IAAI;IAEjH,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAAoC;;;;;;sCACrD,8OAAC;4BACC,OAAO;4BACP,UAAU,CAAC,IAAM,oBAAoB,EAAE,MAAM,CAAC,KAAK;4BACnD,WAAU;;8CAEV,8OAAC;oCAAS,OAAM;;sDACd,8OAAC;4CAAO,OAAM;sDAAI;;;;;;sDAClB,8OAAC;4CAAO,OAAM;sDAAK;;;;;;sDACnB,8OAAC;4CAAO,OAAM;sDAAK;;;;;;sDACnB,8OAAC;4CAAO,OAAM;sDAAK;;;;;;;;;;;;8CAErB,8OAAC;oCAAS,OAAM;;sDACd,8OAAC;4CAAO,OAAM;sDAAK;;;;;;sDACnB,8OAAC;4CAAO,OAAM;sDAAI;;;;;;sDAClB,8OAAC;4CAAO,OAAM;sDAAM;;;;;;sDACpB,8OAAC;4CAAO,OAAM;sDAAO;;;;;;sDACrB,8OAAC;4CAAO,OAAM;sDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO5B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,aAAY;wCACZ,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;;;;;;;;;;;;0CAKd,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,uBAAuB,EAAE,MAAM,CAAC,KAAK;wCACtD,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAG;;;;;;4CAChB,gBAAgB,GAAG,CAAC,CAAA,yBACnB,8OAAC;oDAAsB,OAAO;8DAAW;mDAA5B;;;;;;;;;;;;;;;;;0CAMnB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,sBAAsB,EAAE,MAAM,CAAC,KAAK;wCACrD,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAG;;;;;;4CAChB,uBAAuB,GAAG,CAAC,CAAA,yBAC1B,8OAAC;oDAAsB,OAAO;8DAAW;mDAA5B;;;;;;;;;;;;;;;;;0CAMnB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC5C,WAAU;;0DAEV,8OAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,8OAAC;gDAAO,OAAM;0DAAW;;;;;;0DACzB,8OAAC;gDAAO,OAAM;0DAAY;;;;;;0DAC1B,8OAAC;gDAAO,OAAM;0DAAW;;;;;;;;;;;;;;;;;;;;;;;;oBAM9B,CAAC,cAAc,kBAAkB,aAAa,mBAC7C,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;gCACvC,4BACC,8OAAC;oCAAK,WAAU;;wCAAgI;wCACpI;wCAAW;;;;;;;gCAGxB,gCACC,8OAAC;oCAAK,WAAU;;wCAAgI;wCACnI;;;;;;;gCAGd,+BACC,8OAAC;oCAAK,WAAU;;wCAAgI;wCACpI;;;;;;;8CAGd,8OAAC;oCACC,SAAS;wCACP,eAAe;wCACf,uBAAuB;wCACvB,sBAAsB;oCACxB;oCACA,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientActions.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface IngredientActionsProps {\n  selectedIngredients: Set<string>;\n  filteredIngredients: Ingredient[];\n  onAddIngredient: () => void;\n  onImportCSV: () => void;\n  onExportCSV: () => void;\n  onBulkDelete: (ids: string[]) => Promise<void>;\n  onBulkUpdate: (ids: string[], updates: Partial<Ingredient>) => Promise<void>;\n  loading?: boolean;\n}\n\nexport default function IngredientActions({\n  selectedIngredients,\n  filteredIngredients,\n  onAddIngredient,\n  onImportCSV,\n  onExportCSV,\n  onBulkDelete,\n  onBulkUpdate,\n  loading = false\n}: IngredientActionsProps) {\n  const { t } = useTranslation();\n  const [bulkActionLoading, setBulkActionLoading] = useState(false);\n  const [showBulkMenu, setShowBulkMenu] = useState(false);\n\n  const selectedCount = selectedIngredients.size;\n  const selectedIngredientsData = filteredIngredients.filter(ingredient => \n    selectedIngredients.has(ingredient.id)\n  );\n\n  const handleBulkDelete = async () => {\n    if (selectedCount === 0) return;\n    \n    const confirmMessage = `Are you sure you want to delete ${selectedCount} ingredient${selectedCount > 1 ? 's' : ''}?`;\n    if (!window.confirm(confirmMessage)) return;\n\n    setBulkActionLoading(true);\n    try {\n      await onBulkDelete(Array.from(selectedIngredients));\n    } finally {\n      setBulkActionLoading(false);\n      setShowBulkMenu(false);\n    }\n  };\n\n  const handleBulkUpdateSupplier = async () => {\n    if (selectedCount === 0) return;\n    \n    const newSupplier = window.prompt(`Enter new supplier for ${selectedCount} ingredient${selectedCount > 1 ? 's' : ''}:`);\n    if (!newSupplier?.trim()) return;\n\n    setBulkActionLoading(true);\n    try {\n      await onBulkUpdate(Array.from(selectedIngredients), { supplier: newSupplier.trim() });\n    } finally {\n      setBulkActionLoading(false);\n      setShowBulkMenu(false);\n    }\n  };\n\n  const handleBulkUpdateStorage = async () => {\n    if (selectedCount === 0) return;\n    \n    const newStorage = window.prompt(`Enter new storage location for ${selectedCount} ingredient${selectedCount > 1 ? 's' : ''}:`);\n    if (!newStorage?.trim()) return;\n\n    setBulkActionLoading(true);\n    try {\n      await onBulkUpdate(Array.from(selectedIngredients), { storage_location: newStorage.trim() });\n    } finally {\n      setBulkActionLoading(false);\n      setShowBulkMenu(false);\n    }\n  };\n\n  const handleBulkUpdateWastage = async () => {\n    if (selectedCount === 0) return;\n    \n    const wastageInput = window.prompt(`Enter wastage percentage (0-100) for ${selectedCount} ingredient${selectedCount > 1 ? 's' : ''}:`);\n    if (!wastageInput) return;\n    \n    const wastage = parseFloat(wastageInput);\n    if (isNaN(wastage) || wastage < 0 || wastage > 100) {\n      alert('Please enter a valid percentage between 0 and 100');\n      return;\n    }\n\n    setBulkActionLoading(true);\n    try {\n      await onBulkUpdate(Array.from(selectedIngredients), { \n        trim_peel_waste_percentage: wastage,\n        yield_percentage: 100 - wastage\n      });\n    } finally {\n      setBulkActionLoading(false);\n      setShowBulkMenu(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-wrap gap-3 mb-6\">\n      {/* Primary Actions */}\n      <button\n        onClick={onAddIngredient}\n        className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n      >\n        + Add Ingredient\n      </button>\n      \n      <button\n        onClick={onImportCSV}\n        className=\"bg-gradient-to-r from-[#3B82F6] to-[#29E7CD] text-white px-4 py-2 rounded-lg hover:from-[#3B82F6]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n      >\n        📁 Import CSV\n      </button>\n      \n      <button\n        onClick={onExportCSV}\n        className=\"bg-gradient-to-r from-[#D925C7] to-[#3B82F6] text-white px-4 py-2 rounded-lg hover:from-[#D925C7]/80 hover:to-[#3B82F6]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n      >\n        📤 Export CSV\n      </button>\n\n      {/* Bulk Actions */}\n      {selectedCount > 0 && (\n        <div className=\"relative\">\n          <button\n            onClick={() => setShowBulkMenu(!showBulkMenu)}\n            className=\"bg-gradient-to-r from-orange-500 to-red-500 text-white px-4 py-2 rounded-lg hover:from-orange-500/80 hover:to-red-500/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            ⚡ Bulk Actions ({selectedCount})\n          </button>\n\n          {showBulkMenu && (\n            <div className=\"absolute top-full left-0 mt-2 w-64 bg-[#1f1f1f] border border-[#2a2a2a] rounded-lg shadow-xl z-10\">\n              <div className=\"p-2\">\n                <div className=\"text-xs text-gray-400 px-3 py-2 border-b border-[#2a2a2a]\">\n                  {selectedCount} ingredient{selectedCount > 1 ? 's' : ''} selected\n                </div>\n                \n                <div className=\"space-y-1 mt-2\">\n                  <button\n                    onClick={handleBulkDelete}\n                    disabled={bulkActionLoading}\n                    className=\"w-full text-left px-3 py-2 text-red-400 hover:bg-red-500/10 rounded transition-colors disabled:opacity-50\"\n                  >\n                    🗑️ Delete Selected\n                  </button>\n                  \n                  <button\n                    onClick={handleBulkUpdateSupplier}\n                    disabled={bulkActionLoading}\n                    className=\"w-full text-left px-3 py-2 text-gray-300 hover:bg-[#2a2a2a] rounded transition-colors disabled:opacity-50\"\n                  >\n                    🏪 Update Supplier\n                  </button>\n                  \n                  <button\n                    onClick={handleBulkUpdateStorage}\n                    disabled={bulkActionLoading}\n                    className=\"w-full text-left px-3 py-2 text-gray-300 hover:bg-[#2a2a2a] rounded transition-colors disabled:opacity-50\"\n                  >\n                    📍 Update Storage Location\n                  </button>\n                  \n                  <button\n                    onClick={handleBulkUpdateWastage}\n                    disabled={bulkActionLoading}\n                    className=\"w-full text-left px-3 py-2 text-gray-300 hover:bg-[#2a2a2a] rounded transition-colors disabled:opacity-50\"\n                  >\n                    🎯 Update Wastage %\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Loading Indicator */}\n      {(loading || bulkActionLoading) && (\n        <div className=\"flex items-center gap-2 text-gray-400\">\n          <div className=\"w-4 h-4 border-2 border-[#29E7CD] border-t-transparent rounded-full animate-spin\"></div>\n          <span className=\"text-sm\">\n            {bulkActionLoading ? 'Processing...' : 'Loading...'}\n          </span>\n        </div>\n      )}\n\n      {/* Selected Items Summary */}\n      {selectedCount > 0 && (\n        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\n          <span>Selected:</span>\n          <span className=\"text-[#29E7CD] font-medium\">{selectedCount}</span>\n          <span>of</span>\n          <span className=\"text-white font-medium\">{filteredIngredients.length}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2162, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { formatIngredientName, formatBrandName, formatSupplierName, formatStorageLocation, formatTextInput } from '@/lib/text-utils';\nimport { convertUnit } from '@/lib/unit-conversion';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface Supplier {\n  id: string;\n  name: string;\n  created_at: string;\n}\n\ninterface IngredientFormProps {\n  ingredient?: Ingredient | null;\n  suppliers: Supplier[];\n  availableUnits: string[];\n  onSave: (ingredient: Partial<Ingredient>) => Promise<void>;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport default function IngredientForm({ \n  ingredient, \n  suppliers, \n  availableUnits, \n  onSave, \n  onCancel, \n  loading = false \n}: IngredientFormProps) {\n  const { t } = useTranslation();\n  \n  const [formData, setFormData] = useState<Partial<Ingredient>>({\n    ingredient_name: '',\n    brand: '',\n    pack_size: '',\n    pack_size_unit: 'GM',\n    pack_price: 0,\n    unit: 'GM',\n    cost_per_unit: 0,\n    cost_per_unit_as_purchased: 0,\n    cost_per_unit_incl_trim: 0,\n    trim_peel_waste_percentage: 0,\n    yield_percentage: 100,\n    supplier: '',\n    product_code: '',\n    storage_location: '',\n    min_stock_level: 0,\n    current_stock: 0,\n    ...ingredient\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Calculate cost per unit from pack price and pack size\n  const calculateCostPerUnit = (packPrice: number, packSize: number, packSizeUnit: string, targetUnit: string): number => {\n    if (packPrice === 0 || packSize === 0) return 0;\n    \n    const conversion = convertUnit(1, packSizeUnit, targetUnit);\n    const packSizeInTargetUnit = packSize * conversion.conversionFactor;\n    \n    return packPrice / packSizeInTargetUnit;\n  };\n\n  // Auto-calculate cost per unit when pack price or pack size changes\n  const updateCostPerUnit = () => {\n    if (formData.pack_price && formData.pack_size && formData.pack_size_unit && formData.unit) {\n      const calculatedCost = calculateCostPerUnit(\n        formData.pack_price,\n        parseFloat(formData.pack_size),\n        formData.pack_size_unit,\n        formData.unit\n      );\n      setFormData(prev => ({\n        ...prev,\n        cost_per_unit: calculatedCost,\n        cost_per_unit_as_purchased: calculatedCost,\n        cost_per_unit_incl_trim: calculatedCost\n      }));\n    }\n  };\n\n  const handleInputChange = (field: keyof Ingredient, value: string | number) => {\n    const formattedValue = typeof value === 'string' ? formatTextInput(value) : value;\n    \n    setFormData(prev => ({\n      ...prev,\n      [field]: formattedValue\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n\n    // Auto-calculate cost per unit for relevant fields\n    if (['pack_price', 'pack_size', 'pack_size_unit', 'unit'].includes(field)) {\n      setTimeout(updateCostPerUnit, 100);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.ingredient_name?.trim()) {\n      newErrors.ingredient_name = 'Ingredient name is required';\n    }\n\n    if (!formData.pack_price || formData.pack_price <= 0) {\n      newErrors.pack_price = 'Pack price must be greater than 0';\n    }\n\n    if (!formData.pack_size || parseFloat(formData.pack_size) <= 0) {\n      newErrors.pack_size = 'Pack size must be greater than 0';\n    }\n\n    if (!formData.unit) {\n      newErrors.unit = 'Unit is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving ingredient:', error);\n    }\n  };\n\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl p-6 border border-[#2a2a2a]\">\n      <h2 className=\"text-2xl font-bold text-white mb-6\">\n        {ingredient ? 'Edit Ingredient' : 'Add New Ingredient'}\n      </h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Basic Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Ingredient Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.ingredient_name || ''}\n              onChange={(e) => handleInputChange('ingredient_name', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Tomatoes\"\n              required\n            />\n            {errors.ingredient_name && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.ingredient_name}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Brand\n            </label>\n            <input\n              type=\"text\"\n              value={formData.brand || ''}\n              onChange={(e) => handleInputChange('brand', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coles\"\n            />\n          </div>\n        </div>\n\n        {/* Pack Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Size *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.pack_size || ''}\n              onChange={(e) => handleInputChange('pack_size', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 5\"\n              required\n            />\n            {errors.pack_size && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.pack_size}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Size Unit\n            </label>\n            <select\n              value={formData.pack_size_unit || 'GM'}\n              onChange={(e) => handleInputChange('pack_size_unit', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            >\n              {availableUnits.map(unit => (\n                <option key={unit} value={unit}>{unit}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Price *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.pack_price || ''}\n              onChange={(e) => handleInputChange('pack_price', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 12.50\"\n              required\n            />\n            {errors.pack_price && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.pack_price}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Cost Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Cost Per Unit *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.cost_per_unit || ''}\n              onChange={(e) => handleInputChange('cost_per_unit', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"Auto-calculated\"\n              required\n            />\n            {errors.cost_per_unit && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.cost_per_unit}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Unit *\n            </label>\n            <select\n              value={formData.unit || 'GM'}\n              onChange={(e) => handleInputChange('unit', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              required\n            >\n              {availableUnits.map(unit => (\n                <option key={unit} value={unit}>{unit}</option>\n              ))}\n            </select>\n            {errors.unit && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.unit}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Additional Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Supplier\n            </label>\n            <input\n              type=\"text\"\n              value={formData.supplier || ''}\n              onChange={(e) => handleInputChange('supplier', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coles\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Storage Location\n            </label>\n            <input\n              type=\"text\"\n              value={formData.storage_location || ''}\n              onChange={(e) => handleInputChange('storage_location', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coolroom\"\n            />\n          </div>\n        </div>\n\n        {/* Waste and Yield */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Trim/Peel Waste (%)\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              value={formData.trim_peel_waste_percentage || 0}\n              onChange={(e) => handleInputChange('trim_peel_waste_percentage', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 10\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Yield (%)\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              value={formData.yield_percentage || 100}\n              onChange={(e) => handleInputChange('yield_percentage', parseFloat(e.target.value) || 100)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 90\"\n            />\n          </div>\n        </div>\n\n        {/* Stock Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Min Stock Level\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={formData.min_stock_level || 0}\n              onChange={(e) => handleInputChange('min_stock_level', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 5\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Current Stock\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={formData.current_stock || 0}\n              onChange={(e) => handleInputChange('current_stock', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 10\"\n            />\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex gap-4 pt-6\">\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-6 py-3 rounded-2xl font-semibold hover:shadow-lg hover:shadow-[#29E7CD]/25 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {loading ? 'Saving...' : (ingredient ? 'Update Ingredient' : 'Add Ingredient')}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"flex-1 bg-[#2a2a2a] text-white px-6 py-3 rounded-2xl font-semibold hover:bg-[#3a3a3a] transition-all duration-300\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AA4Ce,SAAS,eAAe,EACrC,UAAU,EACV,SAAS,EACT,cAAc,EACd,MAAM,EACN,QAAQ,EACR,UAAU,KAAK,EACK;IACpB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,uIAAc;IAE5B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAsB;QAC5D,iBAAiB;QACjB,OAAO;QACP,WAAW;QACX,gBAAgB;QAChB,YAAY;QACZ,MAAM;QACN,eAAe;QACf,4BAA4B;QAC5B,yBAAyB;QACzB,4BAA4B;QAC5B,kBAAkB;QAClB,UAAU;QACV,cAAc;QACd,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,GAAG,UAAU;IACf;IAEA,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAyB,CAAC;IAE9D,wDAAwD;IACxD,MAAM,uBAAuB,CAAC,WAAmB,UAAkB,cAAsB;QACvF,IAAI,cAAc,KAAK,aAAa,GAAG,OAAO;QAE9C,MAAM,aAAa,IAAA,wIAAW,EAAC,GAAG,cAAc;QAChD,MAAM,uBAAuB,WAAW,WAAW,gBAAgB;QAEnE,OAAO,YAAY;IACrB;IAEA,oEAAoE;IACpE,MAAM,oBAAoB;QACxB,IAAI,SAAS,UAAU,IAAI,SAAS,SAAS,IAAI,SAAS,cAAc,IAAI,SAAS,IAAI,EAAE;YACzF,MAAM,iBAAiB,qBACrB,SAAS,UAAU,EACnB,WAAW,SAAS,SAAS,GAC7B,SAAS,cAAc,EACvB,SAAS,IAAI;YAEf,YAAY,CAAA,OAAQ,CAAC;oBACnB,GAAG,IAAI;oBACP,eAAe;oBACf,4BAA4B;oBAC5B,yBAAyB;gBAC3B,CAAC;QACH;IACF;IAEA,MAAM,oBAAoB,CAAC,OAAyB;QAClD,MAAM,iBAAiB,OAAO,UAAU,WAAW,IAAA,uIAAe,EAAC,SAAS;QAE5E,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,MAAM,EAAE;YACX,CAAC;QAED,sCAAsC;QACtC,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,UAAU,CAAA,OAAQ,CAAC;oBAAE,GAAG,IAAI;oBAAE,CAAC,MAAM,EAAE;gBAAG,CAAC;QAC7C;QAEA,mDAAmD;QACnD,IAAI;YAAC;YAAc;YAAa;YAAkB;SAAO,CAAC,QAAQ,CAAC,QAAQ;YACzE,WAAW,mBAAmB;QAChC;IACF;IAEA,MAAM,eAAe;QACnB,MAAM,YAAoC,CAAC;QAE3C,IAAI,CAAC,SAAS,eAAe,EAAE,QAAQ;YACrC,UAAU,eAAe,GAAG;QAC9B;QAEA,IAAI,CAAC,SAAS,UAAU,IAAI,SAAS,UAAU,IAAI,GAAG;YACpD,UAAU,UAAU,GAAG;QACzB;QAEA,IAAI,CAAC,SAAS,SAAS,IAAI,WAAW,SAAS,SAAS,KAAK,GAAG;YAC9D,UAAU,SAAS,GAAG;QACxB;QAEA,IAAI,CAAC,SAAS,IAAI,EAAE;YAClB,UAAU,IAAI,GAAG;QACnB;QAEA,UAAU;QACV,OAAO,OAAO,IAAI,CAAC,WAAW,MAAM,KAAK;IAC3C;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,CAAC,gBAAgB;QAErB,IAAI;YACF,MAAM,OAAO;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BACX,aAAa,oBAAoB;;;;;;0BAGpC,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCAEtC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,eAAe,IAAI;wCACnC,UAAU,CAAC,IAAM,kBAAkB,mBAAmB,EAAE,MAAM,CAAC,KAAK;wCACpE,WAAU;wCACV,aAAY;wCACZ,QAAQ;;;;;;oCAET,OAAO,eAAe,kBACrB,8OAAC;wCAAE,WAAU;kDAA6B,OAAO,eAAe;;;;;;;;;;;;0CAIpE,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,KAAK,IAAI;wCACzB,UAAU,CAAC,IAAM,kBAAkB,SAAS,EAAE,MAAM,CAAC,KAAK;wCAC1D,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAMlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAO,SAAS,SAAS,IAAI;wCAC7B,UAAU,CAAC,IAAM,kBAAkB,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC9D,WAAU;wCACV,aAAY;wCACZ,QAAQ;;;;;;oCAET,OAAO,SAAS,kBACf,8OAAC;wCAAE,WAAU;kDAA6B,OAAO,SAAS;;;;;;;;;;;;0CAI9D,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO,SAAS,cAAc,IAAI;wCAClC,UAAU,CAAC,IAAM,kBAAkB,kBAAkB,EAAE,MAAM,CAAC,KAAK;wCACnE,WAAU;kDAET,eAAe,GAAG,CAAC,CAAA,qBAClB,8OAAC;gDAAkB,OAAO;0DAAO;+CAApB;;;;;;;;;;;;;;;;0CAKnB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAO,SAAS,UAAU,IAAI;wCAC9B,UAAU,CAAC,IAAM,kBAAkB,cAAc,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCAC/E,WAAU;wCACV,aAAY;wCACZ,QAAQ;;;;;;oCAET,OAAO,UAAU,kBAChB,8OAAC;wCAAE,WAAU;kDAA6B,OAAO,UAAU;;;;;;;;;;;;;;;;;;kCAMjE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,OAAO,SAAS,aAAa,IAAI;wCACjC,UAAU,CAAC,IAAM,kBAAkB,iBAAiB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCAClF,WAAU;wCACV,aAAY;wCACZ,QAAQ;;;;;;oCAET,OAAO,aAAa,kBACnB,8OAAC;wCAAE,WAAU;kDAA6B,OAAO,aAAa;;;;;;;;;;;;0CAIlE,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,OAAO,SAAS,IAAI,IAAI;wCACxB,UAAU,CAAC,IAAM,kBAAkB,QAAQ,EAAE,MAAM,CAAC,KAAK;wCACzD,WAAU;wCACV,QAAQ;kDAEP,eAAe,GAAG,CAAC,CAAA,qBAClB,8OAAC;gDAAkB,OAAO;0DAAO;+CAApB;;;;;;;;;;oCAGhB,OAAO,IAAI,kBACV,8OAAC;wCAAE,WAAU;kDAA6B,OAAO,IAAI;;;;;;;;;;;;;;;;;;kCAM3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,QAAQ,IAAI;wCAC5B,UAAU,CAAC,IAAM,kBAAkB,YAAY,EAAE,MAAM,CAAC,KAAK;wCAC7D,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAIhB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,OAAO,SAAS,gBAAgB,IAAI;wCACpC,UAAU,CAAC,IAAM,kBAAkB,oBAAoB,EAAE,MAAM,CAAC,KAAK;wCACrE,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAMlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,KAAI;wCACJ,KAAI;wCACJ,OAAO,SAAS,0BAA0B,IAAI;wCAC9C,UAAU,CAAC,IAAM,kBAAkB,8BAA8B,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCAC/F,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAIhB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,KAAI;wCACJ,KAAI;wCACJ,OAAO,SAAS,gBAAgB,IAAI;wCACpC,UAAU,CAAC,IAAM,kBAAkB,oBAAoB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCACrF,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAMlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,KAAI;wCACJ,OAAO,SAAS,eAAe,IAAI;wCACnC,UAAU,CAAC,IAAM,kBAAkB,mBAAmB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCACpF,WAAU;wCACV,aAAY;;;;;;;;;;;;0CAIhB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA+C;;;;;;kDAGhE,8OAAC;wCACC,MAAK;wCACL,MAAK;wCACL,KAAI;wCACJ,OAAO,SAAS,aAAa,IAAI;wCACjC,UAAU,CAAC,IAAM,kBAAkB,iBAAiB,WAAW,EAAE,MAAM,CAAC,KAAK,KAAK;wCAClF,WAAU;wCACV,aAAY;;;;;;;;;;;;;;;;;;kCAMlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,UAAU;gCACV,WAAU;0CAET,UAAU,cAAe,aAAa,sBAAsB;;;;;;0CAE/D,8OAAC;gCACC,MAAK;gCACL,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 2803, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/CSVImportModal.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { formatIngredientName, formatBrandName, formatSupplierName, formatStorageLocation } from '@/lib/text-utils';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface CSVImportModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onImport: (ingredients: Partial<Ingredient>[]) => Promise<void>;\n  loading?: boolean;\n}\n\nexport default function CSVImportModal({\n  isOpen,\n  onClose,\n  onImport,\n  loading = false\n}: CSVImportModalProps) {\n  const { t } = useTranslation();\n  \n  const [csvData, setCsvData] = useState<string>('');\n  const [parsedIngredients, setParsedIngredients] = useState<Partial<Ingredient>[]>([]);\n  const [selectedIngredients, setSelectedIngredients] = useState<Set<string>>(new Set());\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const csvText = e.target?.result as string;\n      setCsvData(csvText);\n      parseCSVWithAI(csvText);\n    };\n    reader.readAsText(file);\n  };\n\n  const parseCSVWithAI = (csvText: string) => {\n    try {\n      const lines = csvText.split('\\n').filter(line => line.trim());\n      if (lines.length < 2) {\n        setError('CSV must have at least a header row and one data row');\n        return;\n      }\n\n      const headers = lines[0].split(',').map(h => h.trim().toLowerCase());\n      const parsedData: Partial<Ingredient>[] = [];\n\n      for (let i = 1; i < lines.length; i++) {\n        const values = lines[i].split(',').map(v => v.trim());\n        const ingredient: Partial<Ingredient> = {};\n\n        headers.forEach((header, index) => {\n          const value = values[index] || '';\n          \n          // AI-powered column mapping with capitalization\n          if (header.includes('name') || header.includes('ingredient')) {\n            ingredient.ingredient_name = formatIngredientName(value);\n          } else if (header.includes('brand')) {\n            ingredient.brand = formatBrandName(value);\n          } else if (header.includes('cost') || header.includes('price')) {\n            ingredient.cost_per_unit = parseFloat(value) || 0;\n          } else if (header.includes('unit')) {\n            ingredient.unit = value.toUpperCase();\n          } else if (header.includes('supplier')) {\n            ingredient.supplier = formatSupplierName(value);\n          } else if (header.includes('code') || header.includes('sku')) {\n            ingredient.product_code = value;\n          } else if (header.includes('location') || header.includes('storage')) {\n            ingredient.storage_location = formatStorageLocation(value);\n          } else if (header.includes('pack') || header.includes('size')) {\n            ingredient.pack_size = value || '1';\n          }\n        });\n        \n        // Set defaults for required fields\n        if (!ingredient.ingredient_name) continue; // Skip rows without ingredient name\n        if (!ingredient.cost_per_unit) ingredient.cost_per_unit = 0;\n        if (!ingredient.cost_per_unit_as_purchased) ingredient.cost_per_unit_as_purchased = ingredient.cost_per_unit || 0;\n        if (!ingredient.cost_per_unit_incl_trim) ingredient.cost_per_unit_incl_trim = ingredient.cost_per_unit || 0;\n        if (!ingredient.trim_peel_waste_percentage) ingredient.trim_peel_waste_percentage = 0;\n        if (!ingredient.yield_percentage) ingredient.yield_percentage = 100;\n        if (!ingredient.unit) ingredient.unit = 'GM';\n        if (!ingredient.pack_size) ingredient.pack_size = '1';\n        \n        parsedData.push(ingredient);\n      }\n      \n      setParsedIngredients(parsedData);\n      setError(null);\n    } catch (err) {\n      setError('Failed to parse CSV file');\n    }\n  };\n\n  const handleSelectIngredient = (index: string, selected: boolean) => {\n    const newSelected = new Set(selectedIngredients);\n    if (selected) {\n      newSelected.add(index);\n    } else {\n      newSelected.delete(index);\n    }\n    setSelectedIngredients(newSelected);\n  };\n\n  const handleSelectAll = (selected: boolean) => {\n    if (selected) {\n      setSelectedIngredients(new Set(parsedIngredients.map((_, i) => i.toString())));\n    } else {\n      setSelectedIngredients(new Set());\n    }\n  };\n\n  const handleImport = async () => {\n    try {\n      const ingredientsToImport = parsedIngredients.filter((_, index) => \n        selectedIngredients.has(index.toString())\n      ).map(ingredient => ({\n        ...ingredient,\n        ingredient_name: formatIngredientName(ingredient.ingredient_name || ''),\n        brand: formatBrandName(ingredient.brand || ''),\n        supplier: formatSupplierName(ingredient.supplier || ''),\n        storage_location: formatStorageLocation(ingredient.storage_location || ''),\n      }));\n\n      await onImport(ingredientsToImport);\n      \n      // Reset state\n      setCsvData('');\n      setParsedIngredients([]);\n      setSelectedIngredients(new Set());\n      setError(null);\n    } catch (err) {\n      console.error('Failed to import ingredients:', err);\n    }\n  };\n\n  const handleClose = () => {\n    setCsvData('');\n    setParsedIngredients([]);\n    setSelectedIngredients(new Set());\n    setError(null);\n    onClose();\n  };\n\n  const formatCost = (cost: number): string => {\n    if (cost < 1) {\n      return cost.toFixed(3);\n    } else if (cost < 10) {\n      return cost.toFixed(2);\n    } else {\n      return cost.toFixed(2);\n    }\n  };\n\n  const getDisplayCost = (ingredient: Partial<Ingredient>) => {\n    const cost = ingredient.cost_per_unit || 0;\n    const unit = ingredient.unit || '';\n    const formattedCost = formatCost(cost);\n    \n    let packInfo = '';\n    if (ingredient.pack_price && ingredient.pack_size && ingredient.pack_size_unit) {\n      packInfo = `Pack: $${ingredient.pack_price} for ${ingredient.pack_size}${ingredient.pack_size_unit}`;\n    }\n\n    return { cost, unit, formattedCost, packInfo };\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"p-6 border-b border-[#2a2a2a]\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-2xl font-bold text-white\">📁 Import Ingredients from CSV</h2>\n            <button\n              onClick={handleClose}\n              className=\"p-2 rounded-full bg-[#2a2a2a] hover:bg-[#3a3a3a] text-gray-400 hover:text-white transition-colors\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 space-y-6\">\n          {/* File Upload */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Upload CSV File\n            </label>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileUpload}\n              className=\"w-full px-3 py-2 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            />\n            <p className=\"text-xs text-gray-400 mt-1\">\n              Supported columns: name, brand, cost, unit, supplier, code, location, pack_size\n            </p>\n          </div>\n\n          {/* Error Display */}\n          {error && (\n            <div className=\"bg-red-900/20 border border-red-500 text-red-400 px-4 py-3 rounded-lg\">\n              {error}\n            </div>\n          )}\n\n          {/* Preview */}\n          {parsedIngredients.length > 0 && (\n            <div>\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-medium text-white\">\n                  Preview ({parsedIngredients.length} ingredients found)\n                </h3>\n                <div className=\"space-x-2\">\n                  <button\n                    onClick={() => handleSelectAll(true)}\n                    className=\"text-sm text-[#29E7CD] hover:text-[#29E7CD]/80 transition-colors\"\n                  >\n                    Select All\n                  </button>\n                  <button\n                    onClick={() => handleSelectAll(false)}\n                    className=\"text-sm text-gray-400 hover:text-white transition-colors\"\n                  >\n                    Clear All\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"max-h-60 overflow-y-auto border border-[#2a2a2a] rounded-lg\">\n                {parsedIngredients.map((ingredient, index) => {\n                  const displayCost = getDisplayCost(ingredient);\n                  const isSelected = selectedIngredients.has(index.toString());\n                  \n                  return (\n                    <div \n                      key={index} \n                      className={`p-3 border-b border-[#2a2a2a] last:border-b-0 transition-colors ${\n                        isSelected ? 'bg-[#29E7CD]/10' : 'hover:bg-[#2a2a2a]/20'\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <input\n                          type=\"checkbox\"\n                          checked={isSelected}\n                          onChange={(e) => handleSelectIngredient(index.toString(), e.target.checked)}\n                          className=\"w-4 h-4 text-[#29E7CD] bg-[#2a2a2a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                        />\n                        <div className=\"flex-1\">\n                          <div className=\"text-white font-medium\">\n                            {ingredient.ingredient_name}\n                          </div>\n                          <div className=\"text-sm text-gray-400\">\n                            {ingredient.brand && `Brand: ${ingredient.brand} • `}\n                            Cost: ${displayCost.formattedCost}/{displayCost.unit}\n                            {displayCost.packInfo && ` • ${displayCost.packInfo}`}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              \n              <div className=\"mt-4 flex justify-end space-x-3\">\n                <button\n                  onClick={handleClose}\n                  className=\"px-4 py-2 text-gray-400 hover:text-white transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleImport}\n                  disabled={loading || selectedIngredients.size === 0}\n                  className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {loading ? 'Importing...' : `Import Selected (${selectedIngredients.size})`}\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Instructions */}\n          <div className=\"bg-[#2a2a2a]/30 p-4 rounded-lg border border-[#2a2a2a]/50\">\n            <h4 className=\"text-sm font-semibold text-white mb-2\">📋 CSV Format Instructions</h4>\n            <div className=\"text-xs text-gray-400 space-y-1\">\n              <p>• First row should contain column headers</p>\n              <p>• Required columns: name (or ingredient), cost (or price), unit</p>\n              <p>• Optional columns: brand, supplier, code (or sku), location (or storage), pack_size</p>\n              <p>• Values will be automatically formatted and capitalized</p>\n              <p>• Empty rows will be skipped</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3288, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientWizard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { formatIngredientName, formatBrandName, formatSupplierName, formatStorageLocation } from '@/lib/text-utils';\nimport { convertUnit } from '@/lib/unit-conversion';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface Supplier {\n  id: string;\n  name: string;\n  created_at: string;\n}\n\ninterface IngredientWizardProps {\n  suppliers: Supplier[];\n  availableUnits: string[];\n  onSave: (ingredient: Partial<Ingredient>) => Promise<void>;\n  onCancel: () => void;\n  onAddSupplier: (name: string) => Promise<void>;\n  loading?: boolean;\n}\n\nexport default function IngredientWizard({\n  suppliers,\n  availableUnits,\n  onSave,\n  onCancel,\n  onAddSupplier,\n  loading = false\n}: IngredientWizardProps) {\n  const { t } = useTranslation();\n  \n  const [wizardStep, setWizardStep] = useState(1);\n  const [formData, setFormData] = useState<Partial<Ingredient>>({\n    ingredient_name: '',\n    brand: '',\n    pack_size: '1',\n    pack_size_unit: 'GM',\n    pack_price: 0,\n    unit: 'GM',\n    cost_per_unit: 0,\n    cost_per_unit_as_purchased: 0,\n    cost_per_unit_incl_trim: 0,\n    trim_peel_waste_percentage: 0,\n    yield_percentage: 100,\n    supplier: '',\n    product_code: '',\n    storage_location: '',\n    min_stock_level: 0,\n  });\n\n  const [newSupplier, setNewSupplier] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Calculate cost per unit from pack price and pack size\n  const calculateCostPerUnit = (packPrice: number, packSize: number, packSizeUnit: string, targetUnit: string): number => {\n    if (packPrice === 0 || packSize === 0) return 0;\n    \n    const conversion = convertUnit(1, packSizeUnit, targetUnit);\n    const packSizeInTargetUnit = packSize * conversion.conversionFactor;\n    \n    return packPrice / packSizeInTargetUnit;\n  };\n\n  // Auto-calculate cost per unit when pack price or pack size changes\n  const updateCostPerUnit = () => {\n    if (formData.pack_price && formData.pack_size && formData.pack_size_unit && formData.unit) {\n      const calculatedCost = calculateCostPerUnit(\n        formData.pack_price,\n        parseFloat(formData.pack_size),\n        formData.pack_size_unit,\n        formData.unit\n      );\n      setFormData(prev => ({\n        ...prev,\n        cost_per_unit: calculatedCost,\n        cost_per_unit_as_purchased: calculatedCost,\n        cost_per_unit_incl_trim: calculatedCost\n      }));\n    }\n  };\n\n  // AI-powered wastage calculation based on ingredient name\n  const calculateWastagePercentage = (ingredientName: string): number => {\n    const name = ingredientName.toLowerCase();\n    \n    // High wastage ingredients (30-50%)\n    if (name.includes('whole') || name.includes('bone') || name.includes('shell') || \n        name.includes('peel') || name.includes('skin') || name.includes('rind') ||\n        name.includes('head') || name.includes('stalk') || name.includes('stem')) {\n      return Math.floor(Math.random() * 21) + 30; // 30-50%\n    }\n    \n    // Medium wastage ingredients (10-25%)\n    if (name.includes('fresh') || name.includes('raw') || name.includes('uncooked') ||\n        name.includes('leafy') || name.includes('herb') || name.includes('lettuce') ||\n        name.includes('spinach') || name.includes('kale') || name.includes('cabbage')) {\n      return Math.floor(Math.random() * 16) + 10; // 10-25%\n    }\n    \n    // Low wastage ingredients (0-10%)\n    if (name.includes('frozen') || name.includes('canned') || name.includes('dried') ||\n        name.includes('powder') || name.includes('oil') || name.includes('sauce') ||\n        name.includes('paste') || name.includes('concentrate')) {\n      return Math.floor(Math.random() * 11); // 0-10%\n    }\n    \n    // Default moderate wastage (5-15%)\n    return Math.floor(Math.random() * 11) + 5; // 5-15%\n  };\n\n  // Smart cost formatting - 3 decimals for small amounts (0.xxx), fewer for larger amounts\n  const formatCost = (cost: number): string => {\n    if (cost < 1) {\n      return cost.toFixed(3); // 0.007\n    } else if (cost < 10) {\n      return cost.toFixed(2); // 1.25\n    } else {\n      return cost.toFixed(2); // 15.50\n    }\n  };\n\n  const handleInputChange = (field: keyof Ingredient, value: string | number) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n\n    // Auto-calculate cost per unit for relevant fields\n    if (['pack_price', 'pack_size', 'pack_size_unit', 'unit'].includes(field)) {\n      setTimeout(updateCostPerUnit, 100);\n    }\n  };\n\n  const handleWastagePercentageChange = (wastage: number) => {\n    const clampedWastage = Math.max(0, Math.min(100, Math.round(wastage)));\n    const yieldPercentage = 100 - clampedWastage;\n    \n    setFormData(prev => ({\n      ...prev,\n      trim_peel_waste_percentage: clampedWastage,\n      yield_percentage: yieldPercentage\n    }));\n  };\n\n  const handleYieldPercentageChange = (yieldPercent: number) => {\n    const clampedYield = Math.max(0, Math.min(100, Math.round(yieldPercent)));\n    const wastagePercentage = 100 - clampedYield;\n    \n    setFormData(prev => ({\n      ...prev,\n      yield_percentage: clampedYield,\n      trim_peel_waste_percentage: wastagePercentage\n    }));\n  };\n\n  const addNewSupplier = async (supplierName: string) => {\n    try {\n      await onAddSupplier(supplierName);\n      setFormData(prev => ({ ...prev, supplier: supplierName }));\n      setNewSupplier('');\n    } catch (error) {\n      console.error('Failed to add supplier:', error);\n    }\n  };\n\n  const validateStep = (step: number): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (step === 1) {\n      if (!formData.ingredient_name?.trim()) {\n        newErrors.ingredient_name = 'Ingredient name is required';\n      }\n      if (!formData.pack_price || formData.pack_price <= 0) {\n        newErrors.pack_price = 'Pack price must be greater than 0';\n      }\n      if (!formData.pack_size || parseFloat(formData.pack_size) <= 0) {\n        newErrors.pack_size = 'Pack size must be greater than 0';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const nextStep = () => {\n    if (validateStep(wizardStep)) {\n      setWizardStep(prev => Math.min(prev + 1, 3));\n    }\n  };\n\n  const prevStep = () => {\n    setWizardStep(prev => Math.max(prev - 1, 1));\n  };\n\n  const resetWizard = () => {\n    setWizardStep(1);\n    setFormData({\n      ingredient_name: '',\n      brand: '',\n      pack_size: '1',\n      pack_size_unit: 'GM',\n      pack_price: 0,\n      unit: 'GM',\n      cost_per_unit: 0,\n      cost_per_unit_as_purchased: 0,\n      cost_per_unit_incl_trim: 0,\n      trim_peel_waste_percentage: 0,\n      yield_percentage: 100,\n      supplier: '',\n      product_code: '',\n      storage_location: '',\n      min_stock_level: 0,\n    });\n    setErrors({});\n  };\n\n  const handleSave = async () => {\n    if (!validateStep(3)) return;\n\n    try {\n      // Capitalize text fields before saving\n      const capitalizedIngredient = {\n        ...formData,\n        ingredient_name: formatIngredientName(formData.ingredient_name || ''),\n        brand: formatBrandName(formData.brand || ''),\n        supplier: formatSupplierName(formData.supplier || ''),\n        storage_location: formatStorageLocation(formData.storage_location || ''),\n      };\n\n      await onSave(capitalizedIngredient);\n      resetWizard();\n    } catch (error) {\n      console.error('Error saving ingredient:', error);\n    }\n  };\n\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] mb-8\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-semibold text-white\">🥘 Add New Ingredient</h2>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-2 h-2 bg-[#29E7CD] rounded-full\"></div>\n          <span className=\"text-xs text-gray-400\">Guided Setup</span>\n        </div>\n      </div>\n\n      {/* Wizard Progress */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-center space-x-4\">\n          {[1, 2, 3].map((step) => (\n            <div key={step} className=\"flex items-center\">\n              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-semibold transition-all duration-200 ${\n                step <= wizardStep \n                  ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white' \n                  : 'bg-[#2a2a2a] text-gray-400'\n              }`}>\n                {step}\n              </div>\n              {step < 3 && (\n                <div className={`w-12 h-1 mx-2 transition-all duration-200 ${\n                  step < wizardStep ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7]' : 'bg-[#2a2a2a]'\n                }`} />\n              )}\n            </div>\n          ))}\n        </div>\n        <div className=\"flex justify-center mt-4\">\n          <div className=\"text-sm text-gray-400\">\n            {wizardStep === 1 && '📦 Basic Information'}\n            {wizardStep === 2 && '⚙️ Advanced Settings'}\n            {wizardStep === 3 && '✅ Review & Save'}\n          </div>\n        </div>\n      </div>\n\n      {/* Step 1: Basic Information */}\n      {wizardStep === 1 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-2\">📦 Basic Information</h3>\n            <p className=\"text-gray-400\">Let's start with the essential details</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Ingredient Name *\n              </label>\n              <input\n                type=\"text\"\n                required\n                value={formData.ingredient_name || ''}\n                onChange={(e) => handleInputChange('ingredient_name', e.target.value)}\n                className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                placeholder=\"e.g., Fresh Tomatoes\"\n              />\n              {errors.ingredient_name && (\n                <p className=\"text-red-400 text-sm mt-1\">{errors.ingredient_name}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Brand (Optional)\n              </label>\n              <input\n                type=\"text\"\n                value={formData.brand || ''}\n                onChange={(e) => handleInputChange('brand', e.target.value)}\n                className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                placeholder=\"e.g., Coles, Woolworths\"\n              />\n            </div>\n          </div>\n\n          <div className=\"bg-[#2a2a2a]/30 p-6 rounded-2xl border border-[#2a2a2a]/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              📦 Packaging Information\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Pack Size *\n                </label>\n                <input\n                  type=\"text\"\n                  required\n                  value={formData.pack_size || ''}\n                  onChange={(e) => handleInputChange('pack_size', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., 5\"\n                />\n                {errors.pack_size && (\n                  <p className=\"text-red-400 text-sm mt-1\">{errors.pack_size}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Pack Unit *\n                </label>\n                <select\n                  value={formData.pack_size_unit || ''}\n                  onChange={(e) => handleInputChange('pack_size_unit', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                >\n                  <option value=\"\">Select pack unit</option>\n                  <option value=\"GM\">Grams (g)</option>\n                  <option value=\"KG\">Kilograms (kg)</option>\n                  <option value=\"ML\">Milliliters (ml)</option>\n                  <option value=\"L\">Liters (L)</option>\n                  <option value=\"PC\">Pieces</option>\n                  <option value=\"BOX\">Box</option>\n                  <option value=\"PACK\">Pack</option>\n                  <option value=\"BAG\">Bag</option>\n                  <option value=\"BOTTLE\">Bottle</option>\n                  <option value=\"CAN\">Can</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Individual Unit *\n                </label>\n                <select\n                  value={formData.unit || ''}\n                  onChange={(e) => handleInputChange('unit', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                >\n                  <option value=\"\">Select individual unit</option>\n                  <option value=\"GM\">Grams (g)</option>\n                  <option value=\"KG\">Kilograms (kg)</option>\n                  <option value=\"ML\">Milliliters (ml)</option>\n                  <option value=\"L\">Liters (L)</option>\n                  <option value=\"PC\">Pieces</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"mt-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                Pack Price ($) *\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute left-3 top-3 text-gray-400\">$</span>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  required\n                  value={formData.pack_price || ''}\n                  onChange={(e) => handleInputChange('pack_price', parseFloat(e.target.value) || 0)}\n                  className=\"w-full pl-8 pr-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"13.54\"\n                />\n              </div>\n              {errors.pack_price && (\n                <p className=\"text-red-400 text-sm mt-1\">{errors.pack_price}</p>\n              )}\n              \n              {/* Helper text */}\n              <div className=\"mt-4 p-3 bg-[#29E7CD]/10 border border-[#29E7CD]/20 rounded-xl\">\n                <p className=\"text-sm text-[#29E7CD]\">\n                  💡 Enter the total pack price (e.g., $13.54 for a 5L tub of yogurt). The system will automatically calculate the price per unit.\n                </p>\n                {formData.pack_price && formData.pack_size && formData.pack_size_unit && formData.unit && (\n                  <p className=\"text-sm text-[#29E7CD] mt-2 font-medium\">\n                    ✅ Price per {formData.unit}: ${formatCost(formData.cost_per_unit || 0)}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Step 1 Navigation */}\n          <div className=\"flex justify-end space-x-4\">\n            <button\n              type=\"button\"\n              onClick={onCancel}\n              className=\"px-6 py-3 bg-[#2a2a2a] text-gray-300 rounded-2xl hover:bg-[#2a2a2a]/80 transition-all duration-200 font-medium\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              disabled={!formData.ingredient_name || !formData.pack_price || !formData.pack_size}\n              className=\"px-6 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              Next Step →\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 2: Advanced Settings */}\n      {wizardStep === 2 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-2\">⚙️ Advanced Settings</h3>\n            <p className=\"text-gray-400\">Configure wastage, yield, and supplier information</p>\n          </div>\n\n          {/* Wastage and Yield */}\n          <div className=\"bg-[#2a2a2a]/30 p-6 rounded-2xl border border-[#2a2a2a]/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              🎯 Wastage & Yield Management\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Trim/Waste Percentage\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={formData.trim_peel_waste_percentage || 0}\n                    onChange={(e) => handleWastagePercentageChange(parseInt(e.target.value) || 0)}\n                    className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  />\n                  <span className=\"text-gray-400\">%</span>\n                </div>\n                {formData.ingredient_name && (\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    💡 AI suggests: {calculateWastagePercentage(formData.ingredient_name)}% based on \"{formData.ingredient_name}\"\n                  </p>\n                )}\n              </div>\n                \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Yield Percentage\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={formData.yield_percentage || 100}\n                    onChange={(e) => handleYieldPercentageChange(parseInt(e.target.value) || 100)}\n                    className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  />\n                  <span className=\"text-gray-400\">%</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Supplier Information */}\n          <div className=\"bg-[#2a2a2a]/30 p-6 rounded-2xl border border-[#2a2a2a]/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              🏪 Supplier Information\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Supplier\n                </label>\n                <select\n                  value={formData.supplier || ''}\n                  onChange={(e) => handleInputChange('supplier', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                >\n                  <option value=\"\">Select supplier</option>\n                  {suppliers.map(supplier => (\n                    <option key={supplier.id} value={supplier.name}>{supplier.name}</option>\n                  ))}\n                  <option value=\"custom\">+ Add new supplier</option>\n                </select>\n                    \n                {formData.supplier === 'custom' && (\n                  <div className=\"flex gap-2 mt-2\">\n                    <input\n                      type=\"text\"\n                      value={newSupplier}\n                      onChange={(e) => setNewSupplier(e.target.value)}\n                      className=\"flex-1 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                      placeholder=\"Enter new supplier name\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => addNewSupplier(newSupplier)}\n                      disabled={!newSupplier.trim()}\n                      className=\"px-4 py-3 bg-[#29E7CD]/10 text-[#29E7CD] rounded-2xl hover:bg-[#29E7CD]/20 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Storage Location\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.storage_location || ''}\n                  onChange={(e) => handleInputChange('storage_location', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., Cold Room A, Dry Storage\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Information */}\n          <div className=\"bg-[#2a2a2a]/30 p-6 rounded-2xl border border-[#2a2a2a]/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              📋 Additional Information\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Product Code (Optional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.product_code || ''}\n                  onChange={(e) => handleInputChange('product_code', e.target.value)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"e.g., SKU123456\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Min Stock Level\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.min_stock_level || 0}\n                  onChange={(e) => handleInputChange('min_stock_level', parseInt(e.target.value) || 0)}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-2xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] transition-all\"\n                  placeholder=\"0\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Step 2 Navigation */}\n          <div className=\"flex justify-between space-x-4\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              className=\"px-6 py-3 bg-[#2a2a2a] text-gray-300 rounded-2xl hover:bg-[#2a2a2a]/80 transition-all duration-200 font-medium\"\n            >\n              ← Previous Step\n            </button>\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              className=\"px-6 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n            >\n              Next Step →\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 3: Review & Save */}\n      {wizardStep === 3 && (\n        <div className=\"space-y-6\">\n          <div className=\"text-center mb-6\">\n            <h3 className=\"text-xl font-semibold text-white mb-2\">✅ Review & Save</h3>\n            <p className=\"text-gray-400\">Review your ingredient details before saving</p>\n          </div>\n\n          {/* Review Summary */}\n          <div className=\"bg-[#2a2a2a]/30 p-6 rounded-2xl border border-[#2a2a2a]/50\">\n            <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n              📋 Ingredient Summary\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n              <div className=\"space-y-3\">\n                <div>\n                  <span className=\"text-sm text-gray-400\">Ingredient Name:</span>\n                  <div className=\"text-white font-medium\">{formData.ingredient_name}</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Brand:</span>\n                  <div className=\"text-white font-medium\">{formData.brand || 'Not specified'}</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Pack Size:</span>\n                  <div className=\"text-white font-medium\">{formData.pack_size} {formData.pack_size_unit}</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Pack Price:</span>\n                  <div className=\"text-white font-medium\">${formData.pack_price}</div>\n                </div>\n              </div>\n              <div className=\"space-y-3\">\n                <div>\n                  <span className=\"text-sm text-gray-400\">Individual Unit:</span>\n                  <div className=\"text-white font-medium\">{formData.unit}</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Price per {formData.unit}:</span>\n                  <div className=\"text-white font-medium\">${formatCost(formData.cost_per_unit || 0)}</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Wastage:</span>\n                  <div className=\"text-white font-medium\">{formData.trim_peel_waste_percentage}%</div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-400\">Yield:</span>\n                  <div className=\"text-white font-medium\">{formData.yield_percentage}%</div>\n                </div>\n              </div>\n            </div>\n            \n            {(formData.supplier || formData.storage_location || formData.product_code) && (\n              <div className=\"mt-6 pt-6 border-t border-[#2a2a2a]\">\n                <h4 className=\"text-md font-semibold text-white mb-3\">Additional Details</h4>\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                  {formData.supplier && (\n                    <div>\n                      <span className=\"text-sm text-gray-400\">Supplier:</span>\n                      <div className=\"text-white font-medium\">{formData.supplier}</div>\n                    </div>\n                  )}\n                  {formData.storage_location && (\n                    <div>\n                      <span className=\"text-sm text-gray-400\">Storage Location:</span>\n                      <div className=\"text-white font-medium\">{formData.storage_location}</div>\n                    </div>\n                  )}\n                  {formData.product_code && (\n                    <div>\n                      <span className=\"text-sm text-gray-400\">Product Code:</span>\n                      <div className=\"text-white font-medium\">{formData.product_code}</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Step 3 Navigation */}\n          <div className=\"flex justify-between space-x-4\">\n            <button\n              type=\"button\"\n              onClick={prevStep}\n              className=\"px-6 py-3 bg-[#2a2a2a] text-gray-300 rounded-2xl hover:bg-[#2a2a2a]/80 transition-all duration-200 font-medium\"\n            >\n              ← Previous Step\n            </button>\n            <div className=\"flex space-x-4\">\n              <button\n                type=\"button\"\n                onClick={resetWizard}\n                className=\"px-6 py-3 bg-[#2a2a2a] text-gray-300 rounded-2xl hover:bg-[#2a2a2a]/80 transition-all duration-200 font-medium\"\n              >\n                Start Over\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleSave}\n                disabled={loading}\n                className=\"px-6 py-3 bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Saving...' : '✅ Save Ingredient'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4924, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/page.tsx"],"sourcesContent":["'use client';\n\nimport { supabase } from '@/lib/supabase';\nimport { useEffect, useState, useMemo } from 'react';\nimport { convertIngredientCost, convertUnit, getAllUnits, isVolumeUnit, isWeightUnit } from '@/lib/unit-conversion';\nimport { formatIngredientName, formatBrandName, formatSupplierName, formatStorageLocation, formatTextInput } from '@/lib/text-utils';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { useSmartLoading } from '@/hooks/useSmartLoading';\nimport dynamic from 'next/dynamic';\nimport { PageSkeleton, LoadingSkeleton, TableSkeleton, FormSkeleton } from '@/components/ui/LoadingSkeleton';\n\n// Direct imports to eliminate skeleton flashes\nimport IngredientTable from './components/IngredientTable';\nimport IngredientFilters from './components/IngredientFilters';\nimport IngredientActions from './components/IngredientActions';\nimport IngredientForm from './components/IngredientForm';\nimport CSVImportModal from './components/CSVImportModal';\nimport IngredientWizard from './components/IngredientWizard';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface Supplier {\n  id: string;\n  name: string;\n  created_at: string;\n}\n\nexport default function IngredientsPage() {\n  const { t } = useTranslation();\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\n  const [filteredIngredients, setFilteredIngredients] = useState<Ingredient[]>([]);\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\n  const [loading, setSmartLoading] = useSmartLoading(false, 200); // Smart loading with 200ms delay\n  const [error, setError] = useState<string | null>(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingIngredient, setEditingIngredient] = useState<Ingredient | null>(null);\n  const [showCSVImport, setShowCSVImport] = useState(false);\n  const [csvData, setCsvData] = useState<string>('');\n  const [parsedIngredients, setParsedIngredients] = useState<Partial<Ingredient>[]>([]);\n  const [importing, setImporting] = useState(false);\n  const [selectedIngredients, setSelectedIngredients] = useState<Set<string>>(new Set());\n  const [displayUnit, setDisplayUnit] = useState('g');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [supplierFilter, setSupplierFilter] = useState('');\n  const [storageFilter, setStorageFilter] = useState('');\n  const [sortBy, setSortBy] = useState<'name' | 'cost_asc' | 'cost_desc' | 'supplier'>('name');\n  const [wizardStep, setWizardStep] = useState(1);\n  const [newIngredient, setNewIngredient] = useState<Partial<Ingredient>>({\n    ingredient_name: '',\n    brand: '',\n    pack_size: '',\n    pack_size_unit: 'g',\n    pack_price: 0,\n    unit: 'g',\n    cost_per_unit: 0,\n    supplier: '',\n    product_code: '',\n    storage_location: '',\n    min_stock_level: 0,\n    current_stock: 0\n  });\n\n  // Filter and sort ingredients\n  useMemo(() => {\n    let filtered = ingredients.filter(ingredient => {\n      const matchesSearch = !searchTerm || \n        ingredient.ingredient_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (ingredient.brand && ingredient.brand.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        (ingredient.supplier && ingredient.supplier.toLowerCase().includes(searchTerm.toLowerCase()));\n      \n      const matchesSupplier = !supplierFilter || ingredient.supplier === supplierFilter;\n      const matchesStorage = !storageFilter || ingredient.storage_location === storageFilter;\n      \n      return matchesSearch && matchesSupplier && matchesStorage;\n    });\n\n    // Sort ingredients\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'name':\n          return a.ingredient_name.localeCompare(b.ingredient_name);\n        case 'cost_asc':\n          return (a.cost_per_unit || 0) - (b.cost_per_unit || 0);\n        case 'cost_desc':\n          return (b.cost_per_unit || 0) - (a.cost_per_unit || 0);\n        case 'supplier':\n          return (a.supplier || '').localeCompare(b.supplier || '');\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredIngredients(filtered);\n  }, [ingredients, searchTerm, supplierFilter, storageFilter, sortBy]);\n\n  const fetchIngredients = async () => {\n    setSmartLoading(true);\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .select('*')\n        .order('ingredient_name');\n\n      if (error) throw error;\n      setIngredients(data || []);\n    } catch (error) {\n      setError('Failed to fetch ingredients');\n    } finally {\n      setSmartLoading(false);\n    }\n  };\n\n  const fetchSuppliers = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('suppliers')\n        .select('*')\n        .order('name');\n\n      if (error) throw error;\n      setSuppliers(data || []);\n    } catch (error) {\n      // Handle error gracefully\n    }\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n    fetchSuppliers();\n  }, []);\n\n  const handleAddIngredient = async (ingredientData: Partial<Ingredient>) => {\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .insert([{\n          ...ingredientData,\n          ingredient_name: formatIngredientName(ingredientData.ingredient_name || ''),\n          brand: ingredientData.brand ? formatBrandName(ingredientData.brand) : null,\n          supplier: ingredientData.supplier ? formatSupplierName(ingredientData.supplier) : null,\n          storage_location: ingredientData.storage_location ? formatStorageLocation(ingredientData.storage_location) : null,\n          product_code: ingredientData.product_code ? formatTextInput(ingredientData.product_code) : null\n        }])\n        .select();\n\n      if (error) throw error;\n      \n      setIngredients(prev => [...prev, ...(data || [])]);\n      setShowAddForm(false);\n      setWizardStep(1);\n      setNewIngredient({\n        ingredient_name: '',\n        brand: '',\n        pack_size: '',\n        pack_size_unit: 'g',\n        pack_price: 0,\n        unit: 'g',\n        cost_per_unit: 0,\n        supplier: '',\n        product_code: '',\n        storage_location: '',\n        min_stock_level: 0,\n        current_stock: 0\n      });\n    } catch (error) {\n      setError('Failed to add ingredient');\n    }\n  };\n\n  const handleUpdateIngredient = async (id: string, updates: Partial<Ingredient>) => {\n    try {\n      const { data, error } = await supabase\n        .from('ingredients')\n        .update({\n          ...updates,\n          ingredient_name: updates.ingredient_name ? formatIngredientName(updates.ingredient_name) : undefined,\n          brand: updates.brand ? formatBrandName(updates.brand) : undefined,\n          supplier: updates.supplier ? formatSupplierName(updates.supplier) : undefined,\n          storage_location: updates.storage_location ? formatStorageLocation(updates.storage_location) : undefined,\n          product_code: updates.product_code ? formatTextInput(updates.product_code) : undefined\n        })\n        .eq('id', id)\n        .select();\n\n      if (error) throw error;\n      \n      setIngredients(prev => prev.map(ing => ing.id === id ? { ...ing, ...updates } : ing));\n      setEditingIngredient(null);\n    } catch (error) {\n      setError('Failed to update ingredient');\n    }\n  };\n\n  const handleDeleteIngredient = async (id: string) => {\n    try {\n      const { error } = await supabase\n        .from('ingredients')\n        .delete()\n        .eq('id', id);\n\n      if (error) throw error;\n      \n      setIngredients(prev => prev.filter(ing => ing.id !== id));\n    } catch (error) {\n      setError('Failed to delete ingredient');\n    }\n  };\n\n  const handleBulkDelete = async () => {\n    try {\n      const { error } = await supabase\n        .from('ingredients')\n        .delete()\n        .in('id', Array.from(selectedIngredients));\n\n      if (error) throw error;\n      \n      setIngredients(prev => prev.filter(ing => !selectedIngredients.has(ing.id)));\n      setSelectedIngredients(new Set());\n    } catch (error) {\n      setError('Failed to delete selected ingredients');\n    }\n  };\n\n  const exportToCSV = () => {\n    const csvContent = [\n      ['Ingredient Name', 'Brand', 'Pack Size', 'Pack Size Unit', 'Pack Price', 'Unit', 'Cost Per Unit', 'Supplier', 'Product Code', 'Storage Location', 'Min Stock Level', 'Current Stock'].join(','),\n      ...filteredIngredients.map(ingredient => [\n        ingredient.ingredient_name,\n        ingredient.brand || '',\n        ingredient.pack_size || '',\n        ingredient.pack_size_unit || '',\n        ingredient.pack_price || 0,\n        ingredient.unit || '',\n        ingredient.cost_per_unit || 0,\n        ingredient.supplier || '',\n        ingredient.product_code || '',\n        ingredient.storage_location || '',\n        ingredient.min_stock_level || 0,\n        ingredient.current_stock || 0\n      ].join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'ingredients.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const handleCSVImport = async () => {\n    try {\n      setImporting(true);\n      \n      const { data, error } = await supabase\n        .from('ingredients')\n        .insert(parsedIngredients.map(ingredient => ({\n          ...ingredient,\n          ingredient_name: formatIngredientName(ingredient.ingredient_name || ''),\n          brand: ingredient.brand ? formatBrandName(ingredient.brand) : null,\n          supplier: ingredient.supplier ? formatSupplierName(ingredient.supplier) : null,\n          storage_location: ingredient.storage_location ? formatStorageLocation(ingredient.storage_location) : null,\n          product_code: ingredient.product_code ? formatTextInput(ingredient.product_code) : null\n        })))\n        .select();\n\n      if (error) throw error;\n      \n      setIngredients(prev => [...prev, ...(data || [])]);\n      setShowCSVImport(false);\n      setCsvData('');\n      setParsedIngredients([]);\n    } catch (error) {\n      setError('Failed to import ingredients');\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  const handleSelectIngredient = (id: string, selected: boolean) => {\n    const newSelected = new Set(selectedIngredients);\n    if (selected) {\n      newSelected.add(id);\n    } else {\n      newSelected.delete(id);\n    }\n    setSelectedIngredients(newSelected);\n  };\n\n  const handleSelectAll = (selected: boolean) => {\n    if (selected) {\n      setSelectedIngredients(new Set(filteredIngredients.map(ing => ing.id)));\n    } else {\n      setSelectedIngredients(new Set());\n    }\n  };\n\n  if (loading) {\n    return <PageSkeleton />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white mb-2\">🥘 {t('ingredients.title', 'Ingredients Management')}</h1>\n              <p className=\"text-gray-400\">{t('ingredients.subtitle', 'Manage your kitchen ingredients and inventory')}</p>\n            </div>\n            \n            {/* Unit Selector */}\n            <div className=\"flex items-center gap-3\">\n              <label className=\"text-sm font-medium text-gray-300\">Display costs in:</label>\n              <select\n                value={displayUnit}\n                onChange={(e) => setDisplayUnit(e.target.value)}\n                className=\"px-4 py-3 bg-[#0a0a0a] border border-[#2a2a2a] rounded-lg text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent min-h-[44px] flex items-center justify-center\"\n              >\n                <optgroup label=\"Weight\">\n                  <option value=\"g\">Grams (g)</option>\n                  <option value=\"kg\">Kilograms (kg)</option>\n                  <option value=\"oz\">Ounces (oz)</option>\n                  <option value=\"lb\">Pounds (lb)</option>\n                </optgroup>\n                <optgroup label=\"Volume\">\n                  <option value=\"ml\">Milliliters (ml)</option>\n                  <option value=\"l\">Liters (L)</option>\n                  <option value=\"tsp\">Teaspoons (tsp)</option>\n                  <option value=\"tbsp\">Tablespoons (tbsp)</option>\n                  <option value=\"cup\">Cups</option>\n                </optgroup>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"bg-red-900/20 border border-red-500 text-red-400 px-4 py-3 rounded-lg mb-6\">\n            {error}\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <IngredientActions\n          selectedIngredients={selectedIngredients}\n          filteredIngredients={filteredIngredients}\n          onAddIngredient={() => setShowAddForm(true)}\n          onImportCSV={() => setShowCSVImport(true)}\n          onExportCSV={exportToCSV}\n          onBulkDelete={handleBulkDelete}\n          onBulkUpdate={async () => {}} // Placeholder function\n          loading={loading}\n        />\n\n        {/* Add Ingredient Wizard */}\n        {showAddForm && (\n          <IngredientWizard\n            suppliers={suppliers}\n            availableUnits={['g', 'kg', 'oz', 'lb', 'ml', 'l', 'tsp', 'tbsp', 'cup', 'pc', 'box', 'pack', 'bag', 'bottle', 'can']}\n            onSave={handleAddIngredient}\n            onCancel={() => {\n              setShowAddForm(false);\n              setWizardStep(1);\n              setNewIngredient({\n                ingredient_name: '',\n                brand: '',\n                pack_size: '',\n                pack_size_unit: 'g',\n                pack_price: 0,\n                unit: 'g',\n                cost_per_unit: 0,\n                supplier: '',\n                product_code: '',\n                storage_location: '',\n                min_stock_level: 0,\n                current_stock: 0\n              });\n            }}\n            onAddSupplier={async (name: string) => {\n              // Placeholder function - add supplier logic here\n              console.log('Adding supplier:', name);\n            }}\n            loading={loading}\n          />\n        )}\n\n        {/* Filters */}\n        <IngredientFilters\n          ingredients={ingredients}\n          searchTerm={searchTerm}\n          supplierFilter={supplierFilter}\n          storageFilter={storageFilter}\n          sortBy={sortBy}\n          displayUnit={displayUnit}\n          onSearchChange={setSearchTerm}\n          onSupplierFilterChange={setSupplierFilter}\n          onStorageFilterChange={setStorageFilter}\n          onSortChange={setSortBy}\n          onDisplayUnitChange={setDisplayUnit}\n        />\n\n        {/* Ingredients Table */}\n        <IngredientTable\n          ingredients={filteredIngredients}\n          displayUnit={displayUnit}\n          onEdit={setEditingIngredient}\n          onDelete={handleDeleteIngredient}\n          selectedIngredients={selectedIngredients}\n          onSelectIngredient={handleSelectIngredient}\n          onSelectAll={handleSelectAll}\n          loading={loading}\n        />\n\n        {/* Edit Ingredient Form */}\n        {editingIngredient && (\n          <IngredientForm\n            ingredient={editingIngredient}\n            suppliers={suppliers}\n            availableUnits={['g', 'kg', 'oz', 'lb', 'ml', 'l', 'tsp', 'tbsp', 'cup', 'pc', 'box', 'pack', 'bag', 'bottle', 'can']}\n            onSave={async (ingredientData: Partial<Ingredient>) => {\n              if (!editingIngredient?.id) return;\n              \n              try {\n                const { data, error } = await supabase\n                  .from('ingredients')\n                  .update({\n                    ...ingredientData,\n                    updated_at: new Date().toISOString()\n                  })\n                  .eq('id', editingIngredient.id)\n                  .select()\n                  .single();\n\n                if (error) throw error;\n\n                // Update local state\n                setIngredients(prev => \n                  prev.map(ing => ing.id === editingIngredient.id ? data : ing)\n                );\n                setEditingIngredient(null);\n              } catch (error) {\n                console.error('Error updating ingredient:', error);\n                setError('Failed to update ingredient');\n              }\n            }}\n            onCancel={() => setEditingIngredient(null)}\n            loading={loading}\n          />\n        )}\n\n        {/* CSV Import Modal */}\n        {showCSVImport && (\n          <CSVImportModal\n            isOpen={showCSVImport}\n            onClose={() => {\n              setShowCSVImport(false);\n              setCsvData('');\n              setParsedIngredients([]);\n            }}\n            onImport={handleCSVImport}\n            loading={importing}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AAjBA;;;;;;;;;;;;;;AA+Ce,SAAS;IACtB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,uIAAc;IAC5B,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAe,EAAE;IAC/D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAe,EAAE;IAC/E,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAa,EAAE;IACzD,MAAM,CAAC,SAAS,gBAAgB,GAAG,IAAA,2IAAe,EAAC,OAAO,MAAM,iCAAiC;IACjG,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAoB;IAC9E,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAS;IAC/C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAwB,EAAE;IACpF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,IAAA,iNAAQ,EAAc,IAAI;IAChF,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAC;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAC;IACnD,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAiD;IACrF,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAsB;QACtE,iBAAiB;QACjB,OAAO;QACP,WAAW;QACX,gBAAgB;QAChB,YAAY;QACZ,MAAM;QACN,eAAe;QACf,UAAU;QACV,cAAc;QACd,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;IACjB;IAEA,8BAA8B;IAC9B,IAAA,gNAAO,EAAC;QACN,IAAI,WAAW,YAAY,MAAM,CAAC,CAAA;YAChC,MAAM,gBAAgB,CAAC,cACrB,WAAW,eAAe,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACvE,WAAW,KAAK,IAAI,WAAW,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAClF,WAAW,QAAQ,IAAI,WAAW,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;YAE3F,MAAM,kBAAkB,CAAC,kBAAkB,WAAW,QAAQ,KAAK;YACnE,MAAM,iBAAiB,CAAC,iBAAiB,WAAW,gBAAgB,KAAK;YAEzE,OAAO,iBAAiB,mBAAmB;QAC7C;QAEA,mBAAmB;QACnB,SAAS,IAAI,CAAC,CAAC,GAAG;YAChB,OAAQ;gBACN,KAAK;oBACH,OAAO,EAAE,eAAe,CAAC,aAAa,CAAC,EAAE,eAAe;gBAC1D,KAAK;oBACH,OAAO,CAAC,EAAE,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,IAAI,CAAC;gBACvD,KAAK;oBACH,OAAO,CAAC,EAAE,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,IAAI,CAAC;gBACvD,KAAK;oBACH,OAAO,CAAC,EAAE,QAAQ,IAAI,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,IAAI;gBACxD;oBACE,OAAO;YACX;QACF;QAEA,uBAAuB;IACzB,GAAG;QAAC;QAAa;QAAY;QAAgB;QAAe;KAAO;IAEnE,MAAM,mBAAmB;QACvB,gBAAgB;QAChB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC,KACP,KAAK,CAAC;YAET,IAAI,OAAO,MAAM;YACjB,eAAe,QAAQ,EAAE;QAC3B,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,aACL,MAAM,CAAC,KACP,KAAK,CAAC;YAET,IAAI,OAAO,MAAM;YACjB,aAAa,QAAQ,EAAE;QACzB,EAAE,OAAO,OAAO;QACd,0BAA0B;QAC5B;IACF;IAEA,IAAA,kNAAS,EAAC;QACR;QACA;IACF,GAAG,EAAE;IAEL,MAAM,sBAAsB,OAAO;QACjC,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC;gBAAC;oBACP,GAAG,cAAc;oBACjB,iBAAiB,IAAA,4IAAoB,EAAC,eAAe,eAAe,IAAI;oBACxE,OAAO,eAAe,KAAK,GAAG,IAAA,uIAAe,EAAC,eAAe,KAAK,IAAI;oBACtE,UAAU,eAAe,QAAQ,GAAG,IAAA,0IAAkB,EAAC,eAAe,QAAQ,IAAI;oBAClF,kBAAkB,eAAe,gBAAgB,GAAG,IAAA,6IAAqB,EAAC,eAAe,gBAAgB,IAAI;oBAC7G,cAAc,eAAe,YAAY,GAAG,IAAA,uIAAe,EAAC,eAAe,YAAY,IAAI;gBAC7F;aAAE,EACD,MAAM;YAET,IAAI,OAAO,MAAM;YAEjB,eAAe,CAAA,OAAQ;uBAAI;uBAAU,QAAQ,EAAE;iBAAE;YACjD,eAAe;YACf,cAAc;YACd,iBAAiB;gBACf,iBAAiB;gBACjB,OAAO;gBACP,WAAW;gBACX,gBAAgB;gBAChB,YAAY;gBACZ,MAAM;gBACN,eAAe;gBACf,UAAU;gBACV,cAAc;gBACd,kBAAkB;gBAClB,iBAAiB;gBACjB,eAAe;YACjB;QACF,EAAE,OAAO,OAAO;YACd,SAAS;QACX;IACF;IAEA,MAAM,yBAAyB,OAAO,IAAY;QAChD,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC;gBACN,GAAG,OAAO;gBACV,iBAAiB,QAAQ,eAAe,GAAG,IAAA,4IAAoB,EAAC,QAAQ,eAAe,IAAI;gBAC3F,OAAO,QAAQ,KAAK,GAAG,IAAA,uIAAe,EAAC,QAAQ,KAAK,IAAI;gBACxD,UAAU,QAAQ,QAAQ,GAAG,IAAA,0IAAkB,EAAC,QAAQ,QAAQ,IAAI;gBACpE,kBAAkB,QAAQ,gBAAgB,GAAG,IAAA,6IAAqB,EAAC,QAAQ,gBAAgB,IAAI;gBAC/F,cAAc,QAAQ,YAAY,GAAG,IAAA,uIAAe,EAAC,QAAQ,YAAY,IAAI;YAC/E,GACC,EAAE,CAAC,MAAM,IACT,MAAM;YAET,IAAI,OAAO,MAAM;YAEjB,eAAe,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,KAAK;wBAAE,GAAG,GAAG;wBAAE,GAAG,OAAO;oBAAC,IAAI;YAChF,qBAAqB;QACvB,EAAE,OAAO,OAAO;YACd,SAAS;QACX;IACF;IAEA,MAAM,yBAAyB,OAAO;QACpC,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,GACN,EAAE,CAAC,MAAM;YAEZ,IAAI,OAAO,MAAM;YAEjB,eAAe,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QACvD,EAAE,OAAO,OAAO;YACd,SAAS;QACX;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CAC7B,IAAI,CAAC,eACL,MAAM,GACN,EAAE,CAAC,MAAM,MAAM,IAAI,CAAC;YAEvB,IAAI,OAAO,MAAM;YAEjB,eAAe,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,MAAO,CAAC,oBAAoB,GAAG,CAAC,IAAI,EAAE;YACzE,uBAAuB,IAAI;QAC7B,EAAE,OAAO,OAAO;YACd,SAAS;QACX;IACF;IAEA,MAAM,cAAc;QAClB,MAAM,aAAa;YACjB;gBAAC;gBAAmB;gBAAS;gBAAa;gBAAkB;gBAAc;gBAAQ;gBAAiB;gBAAY;gBAAgB;gBAAoB;gBAAmB;aAAgB,CAAC,IAAI,CAAC;eACzL,oBAAoB,GAAG,CAAC,CAAA,aAAc;oBACvC,WAAW,eAAe;oBAC1B,WAAW,KAAK,IAAI;oBACpB,WAAW,SAAS,IAAI;oBACxB,WAAW,cAAc,IAAI;oBAC7B,WAAW,UAAU,IAAI;oBACzB,WAAW,IAAI,IAAI;oBACnB,WAAW,aAAa,IAAI;oBAC5B,WAAW,QAAQ,IAAI;oBACvB,WAAW,YAAY,IAAI;oBAC3B,WAAW,gBAAgB,IAAI;oBAC/B,WAAW,eAAe,IAAI;oBAC9B,WAAW,aAAa,IAAI;iBAC7B,CAAC,IAAI,CAAC;SACR,CAAC,IAAI,CAAC;QAEP,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAAW;QACvD,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC;QACvC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG;QACb,EAAE,KAAK;QACP,OAAO,GAAG,CAAC,eAAe,CAAC;IAC7B;IAEA,MAAM,kBAAkB;QACtB,IAAI;YACF,aAAa;YAEb,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC,kBAAkB,GAAG,CAAC,CAAA,aAAc,CAAC;oBAC3C,GAAG,UAAU;oBACb,iBAAiB,IAAA,4IAAoB,EAAC,WAAW,eAAe,IAAI;oBACpE,OAAO,WAAW,KAAK,GAAG,IAAA,uIAAe,EAAC,WAAW,KAAK,IAAI;oBAC9D,UAAU,WAAW,QAAQ,GAAG,IAAA,0IAAkB,EAAC,WAAW,QAAQ,IAAI;oBAC1E,kBAAkB,WAAW,gBAAgB,GAAG,IAAA,6IAAqB,EAAC,WAAW,gBAAgB,IAAI;oBACrG,cAAc,WAAW,YAAY,GAAG,IAAA,uIAAe,EAAC,WAAW,YAAY,IAAI;gBACrF,CAAC,IACA,MAAM;YAET,IAAI,OAAO,MAAM;YAEjB,eAAe,CAAA,OAAQ;uBAAI;uBAAU,QAAQ,EAAE;iBAAE;YACjD,iBAAiB;YACjB,WAAW;YACX,qBAAqB,EAAE;QACzB,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,yBAAyB,CAAC,IAAY;QAC1C,MAAM,cAAc,IAAI,IAAI;QAC5B,IAAI,UAAU;YACZ,YAAY,GAAG,CAAC;QAClB,OAAO;YACL,YAAY,MAAM,CAAC;QACrB;QACA,uBAAuB;IACzB;IAEA,MAAM,kBAAkB,CAAC;QACvB,IAAI,UAAU;YACZ,uBAAuB,IAAI,IAAI,oBAAoB,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE;QACtE,OAAO;YACL,uBAAuB,IAAI;QAC7B;IACF;IAEA,IAAI,SAAS;QACX,qBAAO,8OAAC,oJAAY;;;;;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;;4CAAqC;4CAAI,EAAE,qBAAqB;;;;;;;kDAC9E,8OAAC;wCAAE,WAAU;kDAAiB,EAAE,wBAAwB;;;;;;;;;;;;0CAI1D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAM,WAAU;kDAAoC;;;;;;kDACrD,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;;0DAEV,8OAAC;gDAAS,OAAM;;kEACd,8OAAC;wDAAO,OAAM;kEAAI;;;;;;kEAClB,8OAAC;wDAAO,OAAM;kEAAK;;;;;;kEACnB,8OAAC;wDAAO,OAAM;kEAAK;;;;;;kEACnB,8OAAC;wDAAO,OAAM;kEAAK;;;;;;;;;;;;0DAErB,8OAAC;gDAAS,OAAM;;kEACd,8OAAC;wDAAO,OAAM;kEAAK;;;;;;kEACnB,8OAAC;wDAAO,OAAM;kEAAI;;;;;;kEAClB,8OAAC;wDAAO,OAAM;kEAAM;;;;;;kEACpB,8OAAC;wDAAO,OAAM;kEAAO;;;;;;kEACrB,8OAAC;wDAAO,OAAM;kEAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAO7B,uBACC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;8BAKL,8OAAC,2KAAiB;oBAChB,qBAAqB;oBACrB,qBAAqB;oBACrB,iBAAiB,IAAM,eAAe;oBACtC,aAAa,IAAM,iBAAiB;oBACpC,aAAa;oBACb,cAAc;oBACd,cAAc,WAAa;oBAC3B,SAAS;;;;;;gBAIV,6BACC,8OAAC,0KAAgB;oBACf,WAAW;oBACX,gBAAgB;wBAAC;wBAAK;wBAAM;wBAAM;wBAAM;wBAAM;wBAAK;wBAAO;wBAAQ;wBAAO;wBAAM;wBAAO;wBAAQ;wBAAO;wBAAU;qBAAM;oBACrH,QAAQ;oBACR,UAAU;wBACR,eAAe;wBACf,cAAc;wBACd,iBAAiB;4BACf,iBAAiB;4BACjB,OAAO;4BACP,WAAW;4BACX,gBAAgB;4BAChB,YAAY;4BACZ,MAAM;4BACN,eAAe;4BACf,UAAU;4BACV,cAAc;4BACd,kBAAkB;4BAClB,iBAAiB;4BACjB,eAAe;wBACjB;oBACF;oBACA,eAAe,OAAO;wBACpB,iDAAiD;wBACjD,QAAQ,GAAG,CAAC,oBAAoB;oBAClC;oBACA,SAAS;;;;;;8BAKb,8OAAC,2KAAiB;oBAChB,aAAa;oBACb,YAAY;oBACZ,gBAAgB;oBAChB,eAAe;oBACf,QAAQ;oBACR,aAAa;oBACb,gBAAgB;oBAChB,wBAAwB;oBACxB,uBAAuB;oBACvB,cAAc;oBACd,qBAAqB;;;;;;8BAIvB,8OAAC,yKAAe;oBACd,aAAa;oBACb,aAAa;oBACb,QAAQ;oBACR,UAAU;oBACV,qBAAqB;oBACrB,oBAAoB;oBACpB,aAAa;oBACb,SAAS;;;;;;gBAIV,mCACC,8OAAC,wKAAc;oBACb,YAAY;oBACZ,WAAW;oBACX,gBAAgB;wBAAC;wBAAK;wBAAM;wBAAM;wBAAM;wBAAM;wBAAK;wBAAO;wBAAQ;wBAAO;wBAAM;wBAAO;wBAAQ;wBAAO;wBAAU;qBAAM;oBACrH,QAAQ,OAAO;wBACb,IAAI,CAAC,mBAAmB,IAAI;wBAE5B,IAAI;4BACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2HAAQ,CACnC,IAAI,CAAC,eACL,MAAM,CAAC;gCACN,GAAG,cAAc;gCACjB,YAAY,IAAI,OAAO,WAAW;4BACpC,GACC,EAAE,CAAC,MAAM,kBAAkB,EAAE,EAC7B,MAAM,GACN,MAAM;4BAET,IAAI,OAAO,MAAM;4BAEjB,qBAAqB;4BACrB,eAAe,CAAA,OACb,KAAK,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,kBAAkB,EAAE,GAAG,OAAO;4BAE3D,qBAAqB;wBACvB,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,8BAA8B;4BAC5C,SAAS;wBACX;oBACF;oBACA,UAAU,IAAM,qBAAqB;oBACrC,SAAS;;;;;;gBAKZ,+BACC,8OAAC,wKAAc;oBACb,QAAQ;oBACR,SAAS;wBACP,iBAAiB;wBACjB,WAAW;wBACX,qBAAqB,EAAE;oBACzB;oBACA,UAAU;oBACV,SAAS;;;;;;;;;;;;;;;;;AAMrB","debugId":null}}]
}