{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/unit-conversion.ts"],"sourcesContent":["// Unit conversion utilities for ingredient management\n\nexport interface ConversionResult {\n  conversionFactor: number;\n  isValid: boolean;\n  error?: string;\n}\n\n// Common unit conversions\nconst CONVERSION_FACTORS: Record<string, Record<string, number>> = {\n  // Weight conversions (base unit: grams)\n  'g': { 'g': 1, 'kg': 0.001, 'oz': 0.035274, 'lb': 0.002205 },\n  'kg': { 'g': 1000, 'kg': 1, 'oz': 35.274, 'lb': 2.205 },\n  'oz': { 'g': 28.3495, 'kg': 0.0283495, 'oz': 1, 'lb': 0.0625 },\n  'lb': { 'g': 453.592, 'kg': 0.453592, 'oz': 16, 'lb': 1 },\n  \n  // Volume conversions (base unit: milliliters)\n  'ml': { 'ml': 1, 'l': 0.001, 'tsp': 0.202884, 'tbsp': 0.067628, 'cup': 0.004227 },\n  'l': { 'ml': 1000, 'l': 1, 'tsp': 202.884, 'tbsp': 67.628, 'cup': 4.227 },\n  'tsp': { 'ml': 4.92892, 'l': 0.00492892, 'tsp': 1, 'tbsp': 0.333333, 'cup': 0.0208333 },\n  'tbsp': { 'ml': 14.7868, 'l': 0.0147868, 'tsp': 3, 'tbsp': 1, 'cup': 0.0625 },\n  'cup': { 'ml': 236.588, 'l': 0.236588, 'tsp': 48, 'tbsp': 16, 'cup': 1 },\n  \n  // Piece conversions (base unit: pieces)\n  'pc': { 'pc': 1, 'box': 0.01, 'pack': 0.1, 'bag': 0.05, 'bottle': 0.1, 'can': 0.1 },\n  'box': { 'pc': 100, 'box': 1, 'pack': 10, 'bag': 5, 'bottle': 10, 'can': 10 },\n  'pack': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'bag': { 'pc': 20, 'box': 0.2, 'pack': 2, 'bag': 1, 'bottle': 2, 'can': 2 },\n  'bottle': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'can': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 }\n};\n\nexport function convertUnit(amount: number, fromUnit: string, toUnit: string): ConversionResult {\n  if (!fromUnit || !toUnit) {\n    return { conversionFactor: 1, isValid: false, error: 'Unit not specified' };\n  }\n\n  // Normalize units - handle common variations\n  const normalizeUnit = (unit: string): string => {\n    const normalized = unit.toLowerCase().trim();\n    // Handle common unit variations\n    if (normalized === 'gm') return 'g';\n    if (normalized === 'ml') return 'ml';\n    if (normalized === 'pc') return 'pc';\n    return normalized;\n  };\n\n  const from = normalizeUnit(fromUnit);\n  const to = normalizeUnit(toUnit);\n\n  if (from === to) {\n    return { conversionFactor: 1, isValid: true };\n  }\n\n  const fromFactors = CONVERSION_FACTORS[from];\n  if (!fromFactors) {\n    return { conversionFactor: 1, isValid: false, error: `Unknown unit: ${fromUnit}` };\n  }\n\n  const conversionFactor = fromFactors[to];\n  if (conversionFactor === undefined) {\n    return { conversionFactor: 1, isValid: false, error: `Cannot convert from ${fromUnit} to ${toUnit}` };\n  }\n\n  return { conversionFactor, isValid: true };\n}\n\nexport function convertIngredientCost(\n  cost: number, \n  fromUnit: string, \n  toUnit: string, \n  ingredientName: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit);\n  if (!conversion.isValid) {\n    // Only log unique conversion errors to reduce console spam\n    const errorKey = `${fromUnit}-${toUnit}`;\n    if (!conversionErrors.has(errorKey)) {\n      console.warn(`Conversion failed for ${ingredientName}: ${conversion.error}`);\n      conversionErrors.add(errorKey);\n    }\n    return cost;\n  }\n  return cost * conversion.conversionFactor;\n}\n\n// Track conversion errors to prevent spam\nconst conversionErrors = new Set<string>();\n\nexport function isVolumeUnit(unit: string): boolean {\n  const volumeUnits = ['ml', 'l', 'tsp', 'tbsp', 'cup'];\n  return volumeUnits.includes(unit.toLowerCase());\n}\n\nexport function isWeightUnit(unit: string): boolean {\n  const weightUnits = ['g', 'kg', 'oz', 'lb'];\n  return weightUnits.includes(unit.toLowerCase());\n}\n\nexport function getAllUnits(): string[] {\n  return Object.keys(CONVERSION_FACTORS);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/LoadingSkeleton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'table' | 'chart' | 'list' | 'form' | 'stats' | 'text' | 'button';\n  className?: string;\n  count?: number;\n  height?: string;\n  width?: string;\n}\n\nexport function LoadingSkeleton({ \n  variant = 'card', \n  className = '', \n  count = 1, \n  height,\n  width \n}: LoadingSkeletonProps) {\n  const baseClasses = 'animate-pulse bg-[#2a2a2a] rounded-xl';\n  \n  const variants = {\n    card: 'h-32',\n    table: 'h-64',\n    chart: 'h-80',\n    list: 'h-16',\n    form: 'h-96',\n    stats: 'h-24',\n    text: 'h-4',\n    button: 'h-10 w-24'\n  };\n\n  const skeletonClasses = `${baseClasses} ${variants[variant]} ${className}`;\n  const style = {\n    ...(height && { height }),\n    ...(width && { width })\n  };\n\n  if (count === 1) {\n    return <div className={skeletonClasses} style={style}></div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className={skeletonClasses} style={style}></div>\n      ))}\n    </div>\n  );\n}\n\n// Specialized skeleton components for common patterns\nexport function PageSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header skeleton */}\n        <div className=\"animate-pulse mb-8\">\n          <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n        </div>\n\n        {/* Action buttons skeleton */}\n        <div className=\"flex gap-3 mb-8\">\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-32 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-40 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-28 animate-pulse\"></div>\n        </div>\n\n        {/* Main content skeleton */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-[#2a2a2a] rounded-xl\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableSkeleton({ rows = 5, columns = 4 }: { rows?: number; columns?: number }) {\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-6 py-4 border-b border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex gap-4\">\n            {Array.from({ length: columns }).map((_, i) => (\n              <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-24\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Rows */}\n      <div className=\"divide-y divide-[#2a2a2a]\">\n        {Array.from({ length: rows }).map((_, i) => (\n          <div key={i} className=\"px-6 py-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"flex gap-4\">\n                {Array.from({ length: columns }).map((_, j) => (\n                  <div key={j} className=\"h-4 bg-[#2a2a2a] rounded w-20\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ChartSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n        <div className=\"h-80 bg-[#2a2a2a] rounded-xl\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CardGridSkeleton({ count = 6 }: { count?: number }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-3\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function StatsGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-3\"></div>\n          <div className=\"h-8 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function FormSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i}>\n              <div className=\"h-4 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n              <div className=\"h-10 bg-[#2a2a2a] rounded-xl\"></div>\n            </div>\n          ))}\n          <div className=\"h-10 bg-[#2a2a2a] rounded-xl w-24\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Landing page specific skeletons\nexport function HeroSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] flex items-center justify-center\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-16 bg-[#2a2a2a] rounded-3xl w-2/3 mb-8 mx-auto\"></div>\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/2 mb-12 mx-auto\"></div>\n          <div className=\"flex justify-center gap-4 mb-16\">\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-48\"></div>\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-40\"></div>\n          </div>\n          <div className=\"h-96 bg-[#2a2a2a] rounded-3xl\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function PricingSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-[#2a2a2a] rounded-xl w-1/3 mb-6\"></div>\n        <div className=\"h-12 bg-[#2a2a2a] rounded-xl w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-8\"></div>\n        <div className=\"space-y-4 mb-8\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-full\"></div>\n          ))}\n        </div>\n        <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-full\"></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAYO,SAAS,gBAAgB,EAC9B,UAAU,MAAM,EAChB,YAAY,EAAE,EACd,QAAQ,CAAC,EACT,MAAM,EACN,KAAK,EACgB;IACrB,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,MAAM;QACN,OAAO;QACP,OAAO;QACP,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;IACV;IAEA,MAAM,kBAAkB,GAAG,YAAY,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;IAC1E,MAAM,QAAQ;QACZ,GAAI,UAAU;YAAE;QAAO,CAAC;QACxB,GAAI,SAAS;YAAE;QAAM,CAAC;IACxB;IAEA,IAAI,UAAU,GAAG;QACf,qBAAO,8OAAC;YAAI,WAAW;YAAiB,OAAO;;;;;;IACjD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAM,GAAG,GAAG,CAAC,CAAC,GAAG,kBACrC,8OAAC;gBAAY,WAAW;gBAAiB,OAAO;eAAtC;;;;;;;;;;AAIlB;AAGO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAIjB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAIjB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;0CACZ;uCAAI,MAAM;iCAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;wCAAY,WAAU;uCAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1B;AAEO,SAAS,cAAc,EAAE,OAAO,CAAC,EAAE,UAAU,CAAC,EAAuC;IAC1F,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,kBACvC,8OAAC;gCAAY,WAAU;+BAAb;;;;;;;;;;;;;;;;;;;;0BAOlB,8OAAC;gBAAI,WAAU;0BACZ,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAK,GAAG,GAAG,CAAC,CAAC,GAAG,kBACpC,8OAAC;wBAAY,WAAU;kCACrB,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACZ,MAAM,IAAI,CAAC;oCAAE,QAAQ;gCAAQ,GAAG,GAAG,CAAC,CAAC,GAAG,kBACvC,8OAAC;wCAAY,WAAU;uCAAb;;;;;;;;;;;;;;;uBAJR;;;;;;;;;;;;;;;;AAapB;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAIvB;AAEO,SAAS,iBAAiB,EAAE,QAAQ,CAAC,EAAsB;IAChE,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAM,GAAG,GAAG,CAAC,CAAC,GAAG,kBACrC,8OAAC;gBAAY,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;eAHP;;;;;;;;;;AAQlB;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;gBAAY,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;eAHP;;;;;;;;;;AAQlB;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;wBACZ;+BAAI,MAAM;yBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;;kDACC,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;;;;;;+BAFP;;;;;sCAKZ,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAGO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKzB;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;8BACZ;2BAAI,MAAM;qBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;4BAAY,WAAU;2BAAb;;;;;;;;;;8BAGd,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAIvB","debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n    \n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log to analytics if available\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'exception', {\n        description: error.message,\n        fatal: false,\n      });\n    }\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] max-w-md mx-auto\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"w-12 h-12 rounded-full bg-gradient-to-r from-red-500 to-red-600 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n            </div>\n          </div>\n          \n          <h2 className=\"text-xl font-semibold text-white mb-2 text-center\">\n            Something went wrong\n          </h2>\n          \n          <p className=\"text-gray-400 text-center mb-4\">\n            We encountered an unexpected error. Please try refreshing the page.\n          </p>\n          \n          <div className=\"flex gap-3 justify-center\">\n            <button\n              onClick={() => window.location.reload()}\n              className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-2xl font-medium hover:shadow-xl transition-all duration-200\"\n            >\n              Refresh Page\n            </button>\n            \n            <button\n              onClick={() => this.setState({ hasError: false, error: undefined })}\n              className=\"bg-[#2a2a2a] text-white px-4 py-2 rounded-2xl font-medium hover:bg-[#3a3a3a] transition-all duration-200\"\n            >\n              Try Again\n            </button>\n          </div>\n          \n          {process.env.NODE_ENV === 'development' && this.state.error && (\n            <details className=\"mt-4 p-3 bg-[#2a2a2a] rounded-xl\">\n              <summary className=\"text-gray-400 cursor-pointer\">Error Details</summary>\n              <pre className=\"text-xs text-red-400 mt-2 overflow-auto\">\n                {this.state.error.stack}\n              </pre>\n            </details>\n          )}\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Hook for functional components to handle errors\nexport const useErrorHandler = () => {\n  const handleError = React.useCallback((error: Error, errorInfo?: any) => {\n    console.error('Error caught by useErrorHandler:', error, errorInfo);\n    \n    // Log to analytics if available\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'exception', {\n        description: error.message,\n        fatal: false,\n      });\n    }\n  }, []);\n\n  return { handleError };\n};\n\n// Higher-order component for wrapping components with error boundary\nexport const withErrorBoundary = <P extends object>(\n  Component: React.ComponentType<P>,\n  fallback?: ReactNode\n) => {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary fallback={fallback}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n};\n\nexport default ErrorBoundary;\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAFA;;;AAeO,MAAM,sBAAsB,kNAAS;IACnC,QAAe;QACpB,UAAU;IACZ,EAAE;IAEF,OAAc,yBAAyB,KAAY,EAAS;QAC1D,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEO,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QAC3D,QAAQ,KAAK,CAAC,kCAAkC,OAAO;QAEvD,wCAAwC;QACxC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;QAC5B;QAEA,gCAAgC;QAChC;;IAMF;IAEO,SAAS;QACd,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B;YAEA,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;gCAAqB,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CAC5E,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;kCAK3E,8OAAC;wBAAG,WAAU;kCAAoD;;;;;;kCAIlE,8OAAC;wBAAE,WAAU;kCAAiC;;;;;;kCAI9C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;gCACrC,WAAU;0CACX;;;;;;0CAID,8OAAC;gCACC,SAAS,IAAM,IAAI,CAAC,QAAQ,CAAC;wCAAE,UAAU;wCAAO,OAAO;oCAAU;gCACjE,WAAU;0CACX;;;;;;;;;;;;oBAKF,oDAAyB,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,kBACzD,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAQ,WAAU;0CAA+B;;;;;;0CAClD,8OAAC;gCAAI,WAAU;0CACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;;;;;;;;;;;;;;;;;;QAMnC;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;AAGO,MAAM,kBAAkB;IAC7B,MAAM,cAAc,gNAAK,CAAC,WAAW,CAAC,CAAC,OAAc;QACnD,QAAQ,KAAK,CAAC,oCAAoC,OAAO;QAEzD,gCAAgC;QAChC;;IAMF,GAAG,EAAE;IAEL,OAAO;QAAE;IAAY;AACvB;AAGO,MAAM,oBAAoB,CAC/B,WACA;IAEA,MAAM,mBAAmB,CAAC,sBACxB,8OAAC;YAAc,UAAU;sBACvB,cAAA,8OAAC;gBAAW,GAAG,KAAK;;;;;;;;;;;IAIxB,iBAAiB,WAAW,GAAG,CAAC,kBAAkB,EAAE,UAAU,WAAW,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC;IAE9F,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/text-utils.ts"],"sourcesContent":["// Text formatting utilities for ingredient management\n\nexport function formatIngredientName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatBrandName(brand: string): string {\n  if (!brand) return '';\n  \n  return brand\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatSupplierName(supplier: string): string {\n  if (!supplier) return '';\n  \n  return supplier\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatStorageLocation(location: string): string {\n  if (!location) return '';\n  \n  return location\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatTextInput(text: string): string {\n  if (!text) return '';\n  \n  return text\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatRecipeName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatDishName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;;;;;;;;;;;;AAE/C,SAAS,qBAAqB,IAAY;IAC/C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,KAAa;IAC3C,IAAI,CAAC,OAAO,OAAO;IAEnB,OAAO,MACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,mBAAmB,QAAgB;IACjD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,sBAAsB,QAAgB;IACpD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,IAAY;IAC1C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,iBAAiB,IAAY;IAC3C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,eAAe,IAAY;IACzC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 1034, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/components/DishForm.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { formatDishName } from '@/lib/text-utils';\nimport { DishFormData, Recipe } from '../types';\n\ninterface DishFormProps {\n  formData: DishFormData;\n  recipes: Recipe[];\n  selectedRecipe: string;\n  onDishNameChange: (name: string) => void;\n  onDishPortionsChange: (portions: number) => void;\n  onRecipeSelect: (recipeId: string) => void;\n}\n\nexport const DishForm: React.FC<DishFormProps> = ({\n  formData,\n  recipes,\n  selectedRecipe,\n  onDishNameChange,\n  onDishPortionsChange,\n  onRecipeSelect,\n}) => {\n  const { dishName, dishPortions, dishNameLocked, recipeExists, checkingRecipe } = formData;\n\n  return (\n    <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow\">\n      <h2 className=\"text-lg sm:text-xl font-semibold mb-6\">Create Dish</h2>\n      \n      {/* Dish Name Input */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          🍽️ Dish Name\n        </label>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter dish name (e.g., Chicken Curry)\"\n            value={dishName}\n            onChange={(e) => onDishNameChange(formatDishName(e.target.value))}\n            disabled={dishNameLocked}\n            className={`w-full px-4 py-3 border rounded-xl focus:outline-none focus:ring-2 transition-all duration-200 shadow-sm hover:shadow-md ${\n              dishNameLocked\n                ? 'border-blue-400 bg-[#1a1a1a] text-gray-300 cursor-not-allowed'\n                : recipeExists === true \n                  ? 'border-orange-400 bg-[#0a0a0a] text-white focus:ring-orange-400 focus:border-orange-400' \n                  : recipeExists === false \n                    ? 'border-green-400 bg-[#0a0a0a] text-white focus:ring-green-400 focus:border-green-400'\n                    : 'border-[#2a2a2a] bg-[#0a0a0a] text-white focus:ring-[#29E7CD] focus:border-[#29E7CD]'\n            }`}\n          />\n          {dishNameLocked && (\n            <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n              <svg className=\"w-5 h-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n            </div>\n          )}\n        </div>\n\n        {/* Recipe Status Indicator */}\n        {dishName.trim() && (\n          <div className=\"mt-2 flex items-center space-x-2\">\n            {checkingRecipe ? (\n              <div className=\"flex items-center space-x-2 text-gray-400\">\n                <div className=\"w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full animate-spin\"></div>\n                <span className=\"text-sm\">Checking...</span>\n              </div>\n            ) : recipeExists === true ? (\n              <div className=\"flex items-center space-x-2 text-orange-400\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n                <span className=\"text-sm font-medium\">⚠️ Recipe exists - ingredients loaded, will update existing recipe</span>\n              </div>\n            ) : recipeExists === false ? (\n              <div className=\"flex items-center space-x-2 text-green-400\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n                <span className=\"text-sm font-medium\">✅ New recipe - will create new recipe</span>\n              </div>\n            ) : null}\n          </div>\n        )}\n        \n        {/* Lock Status Indicator */}\n        {dishNameLocked && (\n          <div className=\"mt-2 flex items-center space-x-2 text-blue-400\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n            </svg>\n            <span className=\"text-sm font-medium\">🔒 Dish name locked - editing ingredients</span>\n          </div>\n        )}\n      </div>\n\n      {/* Recipe Selection - Secondary Option */}\n      <div className=\"mb-6 pt-4 border-t border-[#2a2a2a]/50\">\n        <div className=\"bg-gradient-to-r from-[#D925C7]/10 to-[#29E7CD]/10 border border-[#D925C7]/30 p-4 rounded-2xl\">\n          <div className=\"mb-4\">\n            <h3 className=\"text-xl font-semibold text-white mb-1\">📚 Or Select Existing Recipe</h3>\n            <p className=\"text-sm text-gray-400\">Choose a recipe to load ingredients automatically</p>\n          </div>\n          <select\n            value={selectedRecipe}\n            onChange={(e) => onRecipeSelect(e.target.value)}\n            className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#D925C7] focus:border-[#D925C7] transition-all duration-200 shadow-sm hover:shadow-md\"\n          >\n            <option value=\"\">Create new dish from scratch...</option>\n            {recipes.map((recipe) => (\n              <option key={recipe.id} value={recipe.id}>\n                {recipe.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Number of Portions */}\n      <div className=\"pt-4 border-t border-[#2a2a2a]/50\">\n        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n          🍽️ Number of Portions\n        </label>\n        <div className=\"flex items-center space-x-3\">\n          <input\n            type=\"number\"\n            min=\"1\"\n            placeholder=\"1\"\n            value={dishPortions}\n            onChange={(e) => onDishPortionsChange(Number(e.target.value))}\n            className=\"w-24 px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-[#29E7CD] transition-all duration-200 shadow-sm hover:shadow-md text-center font-semibold\"\n          />\n          <span className=\"text-sm text-gray-400\">portions</span>\n        </div>\n        <p className=\"text-xs text-gray-500 mt-2\">\n          This determines the cost per portion for your pricing calculations\n        </p>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/components/IngredientManager.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Ingredient, RecipeIngredient } from '../types';\n\ninterface IngredientManagerProps {\n  showAddIngredient: boolean;\n  ingredients: Ingredient[];\n  ingredientSearch: string;\n  showSuggestions: boolean;\n  filteredIngredients: Ingredient[];\n  selectedIngredient: Ingredient | null;\n  newIngredient: Partial<RecipeIngredient>;\n  onToggleAddIngredient: () => void;\n  onSearchChange: (value: string) => void;\n  onIngredientSelect: (ingredient: Ingredient) => void;\n  onQuantityChange: (quantity: number) => void;\n  onUnitChange: (unit: string) => void;\n  onAddIngredient: (e: React.FormEvent) => void;\n}\n\nexport const IngredientManager: React.FC<IngredientManagerProps> = ({\n  showAddIngredient,\n  ingredients,\n  ingredientSearch,\n  showSuggestions,\n  filteredIngredients,\n  selectedIngredient,\n  newIngredient,\n  onToggleAddIngredient,\n  onSearchChange,\n  onIngredientSelect,\n  onQuantityChange,\n  onUnitChange,\n  onAddIngredient,\n}) => {\n  return (\n    <div className=\"mb-6\">\n      <div className=\"bg-gradient-to-r from-[#29E7CD]/10 to-[#D925C7]/10 border border-[#29E7CD]/30 p-4 rounded-2xl\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h3 className=\"text-xl font-semibold text-white mb-1\">🥘 Add Ingredients</h3>\n            <p className=\"text-sm text-gray-400\">Add ingredients manually to build your dish</p>\n            <p className=\"text-xs text-[#29E7CD] mt-1\">✨ Automatic unit conversion: Use any unit (tsp, tbsp, cups, ml, g, kg) - we'll convert to the ingredient's base unit!</p>\n          </div>\n          <button\n            onClick={onToggleAddIngredient}\n            className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-xl text-sm font-medium hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl flex items-center space-x-2\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            <span>{showAddIngredient ? 'Cancel' : 'Add Ingredient'}</span>\n          </button>\n        </div>\n\n        {showAddIngredient && (\n          <form onSubmit={onAddIngredient} className=\"space-y-3 p-4 bg-[#0a0a0a] border border-[#2a2a2a] rounded-lg\">\n            <div className=\"relative ingredient-search-container\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                🔍 Search & Select Ingredient\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Type to search ingredients...\"\n                  value={ingredientSearch}\n                  onChange={(e) => onSearchChange(e.target.value)}\n                  onFocus={() => onSearchChange(ingredientSearch)} // Keep suggestions visible\n                  className=\"w-full max-w-md pl-10 pr-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-[#29E7CD] transition-all duration-200 shadow-sm hover:shadow-md\"\n                />\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                {ingredientSearch && (\n                  <button\n                    type=\"button\"\n                    onClick={() => onSearchChange('')}\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-white transition-colors\"\n                  >\n                    <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                )}\n              </div>\n              {ingredientSearch && (\n                <div className=\"mt-2 text-xs text-gray-400\">\n                  {filteredIngredients.length} ingredient{filteredIngredients.length !== 1 ? 's' : ''} found\n                </div>\n              )}\n            </div>\n\n            {/* Autocomplete Suggestions */}\n            {showSuggestions && filteredIngredients.length > 0 && (\n              <div className=\"absolute z-10 w-full max-w-md mt-1 bg-[#1f1f1f] border border-[#2a2a2a] rounded-xl shadow-lg max-h-60 overflow-y-auto suggestions-dropdown\">\n                {filteredIngredients.slice(0, 10).map((ingredient) => {\n                  const displayCost = ingredient.cost_per_unit_incl_trim || ingredient.cost_per_unit || 0;\n                  return (\n                    <button\n                      key={ingredient.id}\n                      type=\"button\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        onIngredientSelect(ingredient);\n                      }}\n                      className=\"w-full px-4 py-3 text-left hover:bg-[#2a2a2a] transition-colors border-b border-[#2a2a2a] last:border-b-0\"\n                    >\n                      <div className=\"flex justify-between items-center\">\n                        <div>\n                          <div className=\"text-white font-medium\">{ingredient.ingredient_name}</div>\n                          <div className=\"text-xs text-gray-400\">\n                            {ingredient.unit && `${ingredient.unit} • `}\n                            ${displayCost.toFixed(2)}/{ingredient.unit || 'unit'}\n                          </div>\n                        </div>\n                        <div className=\"text-[#29E7CD] text-sm\">\n                          {ingredient.trim_peel_waste_percentage ? `${ingredient.trim_peel_waste_percentage}% waste` : 'No waste'}\n                        </div>\n                      </div>\n                    </button>\n                  );\n                })}\n              </div>\n            )}\n            \n            {/* No results message */}\n            {showSuggestions && filteredIngredients.length === 0 && ingredientSearch && (\n              <div className=\"absolute z-10 w-full mt-1 p-3 bg-[#1f1f1f] border border-[#2a2a2a] rounded-xl shadow-lg\">\n                <p className=\"text-sm text-gray-400 text-center\">\n                  🔍 No ingredients found matching \"{ingredientSearch}\"\n                </p>\n                <p className=\"text-xs text-gray-500 text-center mt-1\">\n                  Try a different search term or add the ingredient to your list first\n                </p>\n              </div>\n            )}\n            \n            {/* Selected ingredient info */}\n            {selectedIngredient && (\n              <div className=\"mt-2 p-3 bg-[#29E7CD]/10 border border-[#29E7CD]/20 rounded-lg\">\n                <div className=\"flex justify-between items-center\">\n                  <div>\n                    <div className=\"text-[#29E7CD] font-medium\">✓ {selectedIngredient.ingredient_name}</div>\n                    <div className=\"text-xs text-gray-400\">\n                      ${(selectedIngredient.cost_per_unit_incl_trim || selectedIngredient.cost_per_unit || 0).toFixed(2)}/{selectedIngredient.unit || 'unit'}\n                    </div>\n                  </div>\n                  <button\n                    type=\"button\"\n                    onClick={() => onSearchChange('')}\n                    className=\"text-gray-400 hover:text-white transition-colors\"\n                  >\n                    <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  ⚖️ Quantity\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  required\n                  value={newIngredient.quantity || 0}\n                  onChange={(e) => onQuantityChange(parseFloat(e.target.value) || 0)}\n                  onFocus={(e) => {\n                    // Clear the field if it's 0 when focused\n                    if ((newIngredient.quantity || 0) === 0) {\n                      e.target.select(); // Select all text so user can type over it\n                    }\n                  }}\n                  className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-[#29E7CD] transition-all duration-200 shadow-sm hover:shadow-md\"\n                  placeholder=\"0.00\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  📏 Unit\n                </label>\n                <div className=\"relative\">\n                  <select\n                    value={newIngredient.unit || 'kg'}\n                    onChange={(e) => onUnitChange(e.target.value)}\n                    className=\"w-full px-4 py-3 border border-[#2a2a2a] bg-[#0a0a0a] text-white rounded-xl focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-[#29E7CD] transition-all duration-200 shadow-sm hover:shadow-md appearance-none cursor-pointer\"\n                  >\n                    <option value=\"kg\">kg</option>\n                    <option value=\"g\">g</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"mL\">mL</option>\n                    <option value=\"pcs\">pcs</option>\n                    <option value=\"box\">box</option>\n                    <option value=\"GM\">GM</option>\n                    <option value=\"PC\">PC</option>\n                    <option value=\"PACK\">PACK</option>\n                    <option value=\"BAG\">BAG</option>\n                  </select>\n                  <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                    <svg className=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-6 py-3 rounded-xl hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium flex items-center justify-center space-x-2\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              <span>Add Ingredient to Dish</span>\n            </button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/components/COGSTable.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { COGSCalculation } from '../types';\n\ninterface COGSTableProps {\n  calculations: COGSCalculation[];\n  editingIngredient: string | null;\n  editQuantity: number;\n  onEditIngredient: (ingredientId: string, currentQuantity: number) => void;\n  onSaveEdit: () => void;\n  onCancelEdit: () => void;\n  onRemoveIngredient: (ingredientId: string) => void;\n  onEditQuantityChange: (quantity: number) => void;\n  totalCOGS: number;\n  costPerPortion: number;\n  dishPortions: number;\n}\n\nexport const COGSTable: React.FC<COGSTableProps> = ({\n  calculations,\n  editingIngredient,\n  editQuantity,\n  onEditIngredient,\n  onSaveEdit,\n  onCancelEdit,\n  onRemoveIngredient,\n  onEditQuantityChange,\n  totalCOGS,\n  costPerPortion,\n  dishPortions,\n}) => {\n  if (calculations.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        No ingredients added yet. Add some ingredients to see COGS calculations.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Mobile Card Layout */}\n      <div className=\"block md:hidden\">\n        <div className=\"space-y-3\">\n          {calculations.map((calc, index) => (\n            <div key={index} className=\"p-3 bg-[#2a2a2a] rounded-lg border border-[#3a3a3a]\">\n              <div className=\"flex justify-between items-start mb-2\">\n                <h4 className=\"text-sm font-medium text-white\">\n                  {calc.ingredientName}\n                </h4>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm font-bold text-[#29E7CD]\">\n                    ${calc.yieldAdjustedCost.toFixed(2)}\n                  </span>\n                  <button\n                    onClick={() => onEditIngredient(calc.ingredientId, calc.quantity)}\n                    className=\"p-1 text-gray-400 hover:text-[#29E7CD] transition-colors duration-200\"\n                    title=\"Edit quantity\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                  </button>\n                  <button\n                    onClick={() => onRemoveIngredient(calc.ingredientId)}\n                    className=\"p-1 text-gray-400 hover:text-red-400 transition-colors duration-200\"\n                    title=\"Remove ingredient\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              \n              {editingIngredient === calc.ingredientId ? (\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"number\"\n                      value={editQuantity}\n                      onChange={(e) => onEditQuantityChange(parseFloat(e.target.value) || 0)}\n                      className=\"w-20 px-2 py-1 text-sm border border-[#3a3a3a] bg-[#0a0a0a] text-white rounded focus:outline-none focus:ring-1 focus:ring-[#29E7CD]\"\n                      step=\"0.1\"\n                      min=\"0\"\n                    />\n                    <span className=\"text-xs text-gray-400\">{calc.unit}</span>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={onSaveEdit}\n                      className=\"px-3 py-1 text-xs bg-[#29E7CD] text-white rounded hover:bg-[#29E7CD]/80 transition-colors duration-200\"\n                    >\n                      Save\n                    </button>\n                    <button\n                      onClick={onCancelEdit}\n                      className=\"px-3 py-1 text-xs bg-gray-600 text-white rounded hover:bg-gray-500 transition-colors duration-200\"\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <p className=\"text-xs text-gray-400\">\n                  {calc.quantity} {calc.unit}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Desktop Table Layout */}\n      <div className=\"hidden md:block overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\n                Ingredient\n              </th>\n              <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\n                Qty\n              </th>\n              <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\n                Cost\n              </th>\n              <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-[#1f1f1f] divide-y divide-gray-200\">\n            {calculations.map((calc, index) => (\n              <tr key={index} className=\"hover:bg-[#2a2a2a]/50 transition-colors duration-200\">\n                <td className=\"px-3 py-2 text-sm text-white\">\n                  {calc.ingredientName}\n                </td>\n                <td className=\"px-3 py-2 text-sm text-gray-500\">\n                  {editingIngredient === calc.ingredientId ? (\n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"number\"\n                        value={editQuantity}\n                        onChange={(e) => onEditQuantityChange(parseFloat(e.target.value) || 0)}\n                        className=\"w-20 px-2 py-1 text-sm border border-[#3a3a3a] bg-[#0a0a0a] text-white rounded focus:outline-none focus:ring-1 focus:ring-[#29E7CD]\"\n                        step=\"0.1\"\n                        min=\"0\"\n                      />\n                      <span className=\"text-xs text-gray-400\">{calc.unit}</span>\n                    </div>\n                  ) : (\n                    <span>{calc.quantity} {calc.unit}</span>\n                  )}\n                </td>\n                <td className=\"px-3 py-2 text-sm text-gray-500\">\n                  ${calc.yieldAdjustedCost.toFixed(2)}\n                </td>\n                <td className=\"px-3 py-2 text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    {editingIngredient === calc.ingredientId ? (\n                      <>\n                        <button\n                          onClick={onSaveEdit}\n                          className=\"px-2 py-1 text-xs bg-[#29E7CD] text-white rounded hover:bg-[#29E7CD]/80 transition-colors duration-200\"\n                        >\n                          Save\n                        </button>\n                        <button\n                          onClick={onCancelEdit}\n                          className=\"px-2 py-1 text-xs bg-gray-600 text-white rounded hover:bg-gray-500 transition-colors duration-200\"\n                        >\n                          Cancel\n                        </button>\n                      </>\n                    ) : (\n                      <>\n                        <button\n                          onClick={() => onEditIngredient(calc.ingredientId, calc.quantity)}\n                          className=\"p-1 text-gray-400 hover:text-[#29E7CD] transition-colors duration-200\"\n                          title=\"Edit quantity\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                          </svg>\n                        </button>\n                        <button\n                          onClick={() => onRemoveIngredient(calc.ingredientId)}\n                          className=\"p-1 text-gray-400 hover:text-red-400 transition-colors duration-200\"\n                          title=\"Remove ingredient\"\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                          </svg>\n                        </button>\n                      </>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Total COGS Summary */}\n      <div className=\"border-t pt-4\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-lg font-medium text-white\">Total COGS:</span>\n          <span className=\"text-lg font-bold text-[#29E7CD]\">\n            ${totalCOGS.toFixed(2)}\n          </span>\n        </div>\n        {dishPortions > 0 && (\n          <div className=\"flex justify-between items-center mb-4\">\n            <span className=\"text-sm text-gray-400\">Cost per portion:</span>\n            <span className=\"text-sm font-medium text-white\">\n              ${costPerPortion.toFixed(2)}\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2551, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/components/PricingTool.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { PricingCalculation, PricingStrategy } from '../types';\n\ninterface PricingToolProps {\n  costPerPortion: number;\n  targetGrossProfit: number;\n  pricingStrategy: 'charm' | 'whole' | 'real';\n  pricingCalculation: PricingCalculation | null;\n  onTargetGrossProfitChange: (gp: number) => void;\n  onPricingStrategyChange: (strategy: 'charm' | 'whole' | 'real') => void;\n}\n\nexport const PricingTool: React.FC<PricingToolProps> = ({\n  costPerPortion,\n  targetGrossProfit,\n  pricingStrategy,\n  pricingCalculation,\n  onTargetGrossProfitChange,\n  onPricingStrategyChange,\n}) => {\n  if (costPerPortion <= 0 || !pricingCalculation) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-6 pt-4 border-t border-[#2a2a2a]\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n          💰 Costing Tool\n          <div className=\"ml-2 w-2 h-2 bg-[#29E7CD] rounded-full animate-pulse\"></div>\n        </h3>\n        \n        {/* Target Gross Profit Selector */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            🎯 Target Gross Profit %\n          </label>\n          <div className=\"flex space-x-2\">\n            {[60, 65, 70, 75, 80].map((gp) => (\n              <button\n                key={gp}\n                onClick={() => onTargetGrossProfitChange(gp)}\n                className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                  targetGrossProfit === gp\n                    ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white shadow-lg'\n                    : 'bg-[#2a2a2a] text-gray-300 hover:bg-[#2a2a2a]/80'\n                }`}\n              >\n                {gp}%\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Pricing Strategy Selector */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n            📊 Pricing Strategy\n          </label>\n          <div className=\"grid grid-cols-3 gap-2\">\n            <button\n              onClick={() => onPricingStrategyChange('charm')}\n              className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                pricingStrategy === 'charm'\n                  ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white shadow-lg'\n                  : 'bg-[#2a2a2a] text-gray-300 hover:bg-[#2a2a2a]/80'\n              }`}\n            >\n              Charm ($19.95)\n            </button>\n            <button\n              onClick={() => onPricingStrategyChange('whole')}\n              className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                pricingStrategy === 'whole'\n                  ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white shadow-lg'\n                  : 'bg-[#2a2a2a] text-gray-300 hover:bg-[#2a2a2a]/80'\n              }`}\n            >\n              Whole ($20)\n            </button>\n            <button\n              onClick={() => onPricingStrategyChange('real')}\n              className={`px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                pricingStrategy === 'real'\n                  ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white shadow-lg'\n                  : 'bg-[#2a2a2a] text-gray-300 hover:bg-[#2a2a2a]/80'\n              }`}\n            >\n              Real ($19.47)\n            </button>\n          </div>\n        </div>\n\n        {/* Pricing Results */}\n        <div className=\"bg-gradient-to-br from-[#29E7CD]/10 to-[#D925C7]/10 border border-[#29E7CD]/30 p-4 rounded-2xl\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Food Cost */}\n            <div className=\"bg-[#2a2a2a]/30 p-3 rounded-xl border border-[#2a2a2a]/50\">\n              <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Food Cost</div>\n              <div className=\"text-xl font-bold text-white\">\n                ${costPerPortion.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-400\">per portion</div>\n            </div>\n\n            {/* Sell Price Excl GST */}\n            <div className=\"bg-[#2a2a2a]/30 p-3 rounded-xl border border-[#2a2a2a]/50\">\n              <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Sell Price (Excl GST)</div>\n              <div className=\"text-xl font-bold text-[#29E7CD]\">\n                ${pricingCalculation.sellPriceExclGST.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-400\">for your records</div>\n            </div>\n\n            {/* Sell Price Incl GST */}\n            <div className=\"bg-[#2a2a2a]/30 p-3 rounded-xl border border-[#2a2a2a]/50\">\n              <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Menu Price (Incl GST)</div>\n              <div className=\"text-xl font-bold text-[#D925C7]\">\n                ${pricingCalculation.sellPriceInclGST.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-400\">what customer pays</div>\n            </div>\n\n            {/* Gross Profit */}\n            <div className=\"bg-[#2a2a2a]/30 p-3 rounded-xl border border-[#2a2a2a]/50\">\n              <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Gross Profit</div>\n              <div className=\"text-xl font-bold text-green-400\">\n                ${pricingCalculation.grossProfitDollar.toFixed(2)}\n              </div>\n              <div className=\"text-xs text-gray-400\">\n                {pricingCalculation.actualGrossProfit.toFixed(1)}% margin\n              </div>\n            </div>\n          </div>\n\n          {/* Contributing Margin Section */}\n          <div className=\"mt-4 pt-4 border-t border-[#2a2a2a]/50\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {/* Contributing Margin */}\n              <div className=\"bg-gradient-to-br from-[#D925C7]/20 to-[#29E7CD]/20 p-3 rounded-xl border border-[#D925C7]/30\">\n                <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Contributing Margin</div>\n                <div className=\"text-xl font-bold text-[#D925C7]\">\n                  ${pricingCalculation.contributingMargin.toFixed(2)}\n                </div>\n                <div className=\"text-xs text-gray-400\">\n                  {pricingCalculation.contributingMarginPercent.toFixed(1)}% of revenue\n                </div>\n              </div>\n\n              {/* Contributing Margin Explanation */}\n              <div className=\"bg-[#2a2a2a]/30 p-3 rounded-xl border border-[#2a2a2a]/50\">\n                <div className=\"text-xs text-gray-500 uppercase tracking-wide mb-1\">Formula</div>\n                <div className=\"text-sm text-gray-400\">\n                  <strong className=\"text-[#D925C7]\">Revenue - Food Cost</strong>\n                </div>\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Amount available to cover fixed costs and generate profit\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* GST Breakdown */}\n          <div className=\"mt-4 pt-3 border-t border-[#2a2a2a]/50\">\n            <div className=\"flex justify-between items-center text-sm\">\n              <span className=\"text-gray-400\">GST Amount (10%):</span>\n              <span className=\"text-white font-medium\">\n                ${pricingCalculation.gstAmount.toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAcO,MAAM,cAA0C,CAAC,EACtD,cAAc,EACd,iBAAiB,EACjB,eAAe,EACf,kBAAkB,EAClB,yBAAyB,EACzB,uBAAuB,EACxB;IACC,IAAI,kBAAkB,KAAK,CAAC,oBAAoB;QAC9C,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;;wBAA0D;sCAEtE,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAIjB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAA+C;;;;;;sCAGhE,8OAAC;4BAAI,WAAU;sCACZ;gCAAC;gCAAI;gCAAI;gCAAI;gCAAI;6BAAG,CAAC,GAAG,CAAC,CAAC,mBACzB,8OAAC;oCAEC,SAAS,IAAM,0BAA0B;oCACzC,WAAW,CAAC,qEAAqE,EAC/E,sBAAsB,KAClB,sEACA,oDACJ;;wCAED;wCAAG;;mCARC;;;;;;;;;;;;;;;;8BAeb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,WAAU;sCAA+C;;;;;;sCAGhE,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAM,wBAAwB;oCACvC,WAAW,CAAC,qEAAqE,EAC/E,oBAAoB,UAChB,sEACA,oDACJ;8CACH;;;;;;8CAGD,8OAAC;oCACC,SAAS,IAAM,wBAAwB;oCACvC,WAAW,CAAC,qEAAqE,EAC/E,oBAAoB,UAChB,sEACA,oDACJ;8CACH;;;;;;8CAGD,8OAAC;oCACC,SAAS,IAAM,wBAAwB;oCACvC,WAAW,CAAC,qEAAqE,EAC/E,oBAAoB,SAChB,sEACA,oDACJ;8CACH;;;;;;;;;;;;;;;;;;8BAOL,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CAEb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAAqD;;;;;;sDACpE,8OAAC;4CAAI,WAAU;;gDAA+B;gDAC1C,eAAe,OAAO,CAAC;;;;;;;sDAE3B,8OAAC;4CAAI,WAAU;sDAAwB;;;;;;;;;;;;8CAIzC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAAqD;;;;;;sDACpE,8OAAC;4CAAI,WAAU;;gDAAmC;gDAC9C,mBAAmB,gBAAgB,CAAC,OAAO,CAAC;;;;;;;sDAEhD,8OAAC;4CAAI,WAAU;sDAAwB;;;;;;;;;;;;8CAIzC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAAqD;;;;;;sDACpE,8OAAC;4CAAI,WAAU;;gDAAmC;gDAC9C,mBAAmB,gBAAgB,CAAC,OAAO,CAAC;;;;;;;sDAEhD,8OAAC;4CAAI,WAAU;sDAAwB;;;;;;;;;;;;8CAIzC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAAqD;;;;;;sDACpE,8OAAC;4CAAI,WAAU;;gDAAmC;gDAC9C,mBAAmB,iBAAiB,CAAC,OAAO,CAAC;;;;;;;sDAEjD,8OAAC;4CAAI,WAAU;;gDACZ,mBAAmB,iBAAiB,CAAC,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;sCAMvD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DAAqD;;;;;;0DACpE,8OAAC;gDAAI,WAAU;;oDAAmC;oDAC9C,mBAAmB,kBAAkB,CAAC,OAAO,CAAC;;;;;;;0DAElD,8OAAC;gDAAI,WAAU;;oDACZ,mBAAmB,yBAAyB,CAAC,OAAO,CAAC;oDAAG;;;;;;;;;;;;;kDAK7D,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DAAqD;;;;;;0DACpE,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAO,WAAU;8DAAiB;;;;;;;;;;;0DAErC,8OAAC;gDAAI,WAAU;0DAA6B;;;;;;;;;;;;;;;;;;;;;;;sCAQlD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAgB;;;;;;kDAChC,8OAAC;wCAAK,WAAU;;4CAAyB;4CACrC,mBAAmB,SAAS,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQvD","debugId":null}},
    {"offset": {"line": 2990, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/components/SaveRecipeButton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface SaveRecipeButtonProps {\n  onSaveAsRecipe: () => void;\n}\n\nexport const SaveRecipeButton: React.FC<SaveRecipeButtonProps> = ({\n  onSaveAsRecipe,\n}) => {\n  return (\n    <div className=\"mt-4 pt-4 border-t border-[#2a2a2a]\">\n      <button\n        onClick={onSaveAsRecipe}\n        className=\"w-full bg-gradient-to-r from-[#D925C7] to-[#29E7CD] text-white px-4 py-3 rounded-lg hover:from-[#D925C7]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n      >\n        💾 Save as Recipe in Recipe Book\n      </button>\n      <p className=\"text-xs text-gray-400 mt-2 text-center\">\n        This will save the current COGS calculation as a recipe in your Recipe Book\n      </p>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAA;;AAQO,MAAM,mBAAoD,CAAC,EAChE,cAAc,EACf;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;0BAGD,8OAAC;gBAAE,WAAU;0BAAyC;;;;;;;;;;;;AAK5D","debugId":null}},
    {"offset": {"line": 3065, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,uMAAY,EAAC,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,IAAA,uMAAY,EAAC,aAAa;AACnC;AAGO,MAAM,gBAAgB,uCAAgC,wBAAwB","debugId":null}},
    {"offset": {"line": 3095, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/hooks/useCOGSCalculations.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { convertIngredientCost } from '@/lib/unit-conversion';\nimport { Ingredient, Recipe, RecipeIngredient, COGSCalculation } from '../types';\n\nexport const useCOGSCalculations = () => {\n  const [ingredients, setIngredients] = useState<Ingredient[]>([]);\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [selectedRecipe, setSelectedRecipe] = useState<string>('');\n  const [recipeIngredients, setRecipeIngredients] = useState<RecipeIngredient[]>([]);\n  const [calculations, setCalculations] = useState<COGSCalculation[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch ingredients\n      const { data: ingredientsData, error: ingredientsError } = await supabase\n        .from('ingredients')\n        .select('*')\n        .order('ingredient_name');\n\n      // Fetch recipes\n      const { data: recipesData, error: recipesError } = await supabase\n        .from('recipes')\n        .select('*')\n        .order('name');\n\n      if (ingredientsError) {\n        console.log('Ingredients table not found or empty:', ingredientsError.message);\n        setIngredients([]);\n      } else {\n        console.log('Ingredients fetched:', ingredientsData?.length || 0, 'items');\n        setIngredients(ingredientsData || []);\n      }\n\n      if (recipesError) {\n        console.log('Recipes table not found or empty:', recipesError.message);\n        setRecipes([]);\n      } else {\n        setRecipes(recipesData || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch data');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchRecipeIngredients = useCallback(async (recipeId: string) => {\n    if (!recipeId) return;\n\n    try {\n      const { data, error } = await supabase\n        .from('recipe_ingredients')\n        .select('*')\n        .eq('recipe_id', recipeId);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setRecipeIngredients(data || []);\n        calculateCOGS(data || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch recipe ingredients');\n    }\n  }, []);\n\n  const calculateCOGS = useCallback((recipeIngredients: RecipeIngredient[]) => {\n    const calculations: COGSCalculation[] = recipeIngredients.map(ri => {\n      const ingredient = ingredients.find(i => i.id === ri.ingredient_id);\n      if (!ingredient) return null;\n\n      // Use the correct cost field - prefer cost_per_unit_incl_trim if available, otherwise cost_per_unit\n      const baseCostPerUnit = ingredient.cost_per_unit_incl_trim || ingredient.cost_per_unit || 0;\n      const costPerUnit = convertIngredientCost(\n        baseCostPerUnit,\n        ingredient.unit || 'g',\n        ri.unit || 'g',\n        ingredient.ingredient_name\n      );\n      \n      // Calculate base cost for the quantity used\n      const totalCost = ri.quantity * costPerUnit;\n      \n      // Get waste and yield percentages\n      const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n      const yieldPercent = ingredient.yield_percentage || 100;\n      \n      // Calculate waste-adjusted cost (if not already included in cost_per_unit_incl_trim)\n      let wasteAdjustedCost = totalCost;\n      if (!ingredient.cost_per_unit_incl_trim && wastePercent > 0) {\n        wasteAdjustedCost = totalCost / (1 - wastePercent / 100);\n      }\n      \n      // Calculate yield-adjusted cost (final cost per usable portion)\n      const yieldAdjustedCost = wasteAdjustedCost * (yieldPercent / 100);\n\n      return {\n        recipeId: ri.recipe_id || 'temp',\n        ingredientId: ri.ingredient_id,\n        ingredientName: ingredient.ingredient_name,\n        quantity: ri.quantity,\n        unit: ri.unit || ingredient.unit || 'kg',\n        costPerUnit,\n        totalCost,\n        wasteAdjustedCost,\n        yieldAdjustedCost,\n      };\n    }).filter(Boolean) as COGSCalculation[];\n\n    setCalculations(calculations);\n  }, [ingredients]);\n\n  const loadExistingRecipeIngredients = useCallback(async (recipeId: string) => {\n    try {\n      console.log('Loading ingredients for recipe:', recipeId);\n      \n      const { data: recipeIngredients, error } = await supabase\n        .from('recipe_ingredients')\n        .select(`\n          id,\n          quantity,\n          unit,\n          ingredients (\n            id,\n            ingredient_name,\n            cost_per_unit,\n            unit,\n            trim_peel_waste_percentage,\n            yield_percentage\n          )\n        `)\n        .eq('recipe_id', recipeId);\n\n      if (error) {\n        console.log('Error loading recipe ingredients:', error);\n        return;\n      }\n\n      console.log('Loaded recipe ingredients:', recipeIngredients);\n\n      // Convert to COGSCalculation format\n      const loadedCalculations: COGSCalculation[] = recipeIngredients.map(ri => {\n        const ingredient = ri.ingredients as any;\n        const quantity = ri.quantity;\n        const baseCostPerUnit = ingredient.cost_per_unit;\n        const costPerUnit = convertIngredientCost(\n          baseCostPerUnit,\n          ingredient.unit || 'g',\n          ri.unit || 'g',\n          ingredient.ingredient_name\n        );\n        const totalCost = quantity * costPerUnit;\n        \n        // Apply waste and yield adjustments\n        const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n        const yieldPercent = ingredient.yield_percentage || 100;\n        const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n        const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n        return {\n          recipeId: recipeId,\n          ingredientId: ingredient.id,\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit,\n          totalCost: totalCost,\n          wasteAdjustedCost: wasteAdjustedCost,\n          yieldAdjustedCost: yieldAdjustedCost\n        };\n      });\n\n      console.log('Converted to calculations:', loadedCalculations);\n      \n      setCalculations(loadedCalculations);\n      \n      // Also update recipeIngredients state\n      const loadedRecipeIngredients: RecipeIngredient[] = recipeIngredients.map(dbItem => ({\n        recipe_id: recipeId,\n        ingredient_id: (dbItem.ingredients as any).id,\n        quantity: dbItem.quantity,\n        unit: dbItem.unit\n      }));\n      setRecipeIngredients(loadedRecipeIngredients);\n      \n    } catch (err) {\n      console.log('Error in loadExistingRecipeIngredients:', err);\n    }\n  }, []);\n\n  const checkRecipeExists = useCallback(async (recipeName: string) => {\n    if (!recipeName.trim()) {\n      return null;\n    }\n\n    try {\n      console.log('Checking for recipe:', recipeName.trim());\n      \n      const { data: existingRecipes, error } = await supabase\n        .from('recipes')\n        .select('id, name')\n        .ilike('name', recipeName.trim());\n      \n      const existingRecipe = existingRecipes && existingRecipes.length > 0 ? existingRecipes[0] : null;\n\n      console.log('Recipe check result:', { existingRecipe, error });\n\n      if (error && error.code === 'PGRST116') {\n        console.log('Recipe not found - PGRST116 error');\n        return false;\n      } else if (existingRecipe) {\n        console.log('Recipe found:', existingRecipe);\n        await loadExistingRecipeIngredients(existingRecipe.id);\n        return true;\n      } else {\n        console.log('Recipe not found - no data returned');\n        return false;\n      }\n    } catch (err) {\n      console.log('Error checking recipe:', err);\n      return null;\n    }\n  }, [loadExistingRecipeIngredients]);\n\n  const updateCalculation = useCallback((ingredientId: string, newQuantity: number) => {\n    setCalculations(prev => prev.map(calc => {\n      if (calc.ingredientId === ingredientId) {\n        const ingredient = ingredients.find(ing => ing.id === ingredientId);\n        if (ingredient) {\n          const newTotalCost = newQuantity * calc.costPerUnit;\n          const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n          const yieldPercent = ingredient.yield_percentage || 100;\n          const newWasteAdjustedCost = newTotalCost * (1 + wastePercent / 100);\n          const newYieldAdjustedCost = newWasteAdjustedCost / (yieldPercent / 100);\n          \n          return {\n            ...calc,\n            quantity: newQuantity,\n            totalCost: newTotalCost,\n            wasteAdjustedCost: newWasteAdjustedCost,\n            yieldAdjustedCost: newYieldAdjustedCost\n          };\n        }\n      }\n      return calc;\n    }));\n  }, [ingredients]);\n\n  const removeCalculation = useCallback((ingredientId: string) => {\n    setCalculations(prev => prev.filter(calc => calc.ingredientId !== ingredientId));\n  }, []);\n\n  const addCalculation = useCallback((calculation: COGSCalculation) => {\n    setCalculations(prev => [...prev, calculation]);\n  }, []);\n\n  const clearCalculations = useCallback(() => {\n    setCalculations([]);\n    setRecipeIngredients([]);\n  }, []);\n\n  // Auto-fetch when selectedRecipe changes\n  useEffect(() => {\n    if (selectedRecipe) {\n      fetchRecipeIngredients(selectedRecipe);\n    }\n  }, [selectedRecipe, fetchRecipeIngredients]);\n\n  // Recalculate when ingredients change\n  useEffect(() => {\n    if (recipeIngredients.length > 0) {\n      calculateCOGS(recipeIngredients);\n    }\n  }, [recipeIngredients, calculateCOGS]);\n\n  return {\n    // State\n    ingredients,\n    recipes,\n    selectedRecipe,\n    recipeIngredients,\n    calculations,\n    loading,\n    error,\n    \n    // Actions\n    fetchData,\n    fetchRecipeIngredients,\n    calculateCOGS,\n    loadExistingRecipeIngredients,\n    checkRecipeExists,\n    updateCalculation,\n    removeCalculation,\n    addCalculation,\n    clearCalculations,\n    setSelectedRecipe,\n    setError,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3361, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/hooks/usePricing.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { PricingCalculation } from '../types';\n\nexport const usePricing = (costPerPortion: number) => {\n  const [targetGrossProfit, setTargetGrossProfit] = useState<number>(70); // Default 70% GP\n  const [sellPriceExclGST, setSellPriceExclGST] = useState<number>(0);\n  const [sellPriceInclGST, setSellPriceInclGST] = useState<number>(0);\n  const [pricingStrategy, setPricingStrategy] = useState<'charm' | 'whole' | 'real'>('charm');\n\n  const calculateRecommendedPrices = useCallback((foodCost: number, targetGP: number, strategy: 'charm' | 'whole' | 'real') => {\n    // Calculate sell price excluding GST based on target gross profit\n    // GP% = (Sell Price - Food Cost) / Sell Price * 100\n    // Solving for Sell Price: Sell Price = Food Cost / (1 - GP/100)\n    const sellPriceExclGST = foodCost / (1 - targetGP / 100);\n    \n    // Calculate GST (10% in Australia) on the base price\n    const gstAmount = sellPriceExclGST * 0.10;\n    const sellPriceInclGST = sellPriceExclGST + gstAmount;\n    \n    // Apply pricing strategy to the GST-inclusive price (menu price)\n    let finalPriceInclGST = sellPriceInclGST;\n    \n    switch (strategy) {\n      case 'charm':\n        // Charm pricing: round to .95 or .99\n        const charmRounded = Math.ceil(sellPriceInclGST);\n        finalPriceInclGST = charmRounded - 0.01;\n        break;\n      case 'whole':\n        // Whole number pricing: round up to nearest dollar\n        finalPriceInclGST = Math.ceil(sellPriceInclGST);\n        break;\n      case 'real':\n        // Real price: keep exact calculation\n        finalPriceInclGST = sellPriceInclGST;\n        break;\n    }\n    \n    // Calculate the GST-exclusive price from the final menu price\n    const finalPriceExclGST = finalPriceInclGST / 1.10;\n    const finalGstAmount = finalPriceInclGST - finalPriceExclGST;\n    \n    // Calculate contributing margin (Revenue - Food Cost)\n    const contributingMargin = finalPriceExclGST - foodCost;\n    const contributingMarginPercent = (contributingMargin / finalPriceExclGST) * 100;\n    \n    return {\n      sellPriceExclGST: finalPriceExclGST,\n      sellPriceInclGST: finalPriceInclGST,\n      gstAmount: finalGstAmount,\n      actualGrossProfit: ((finalPriceExclGST - foodCost) / finalPriceExclGST) * 100,\n      grossProfitDollar: finalPriceExclGST - foodCost,\n      contributingMargin: contributingMargin,\n      contributingMarginPercent: contributingMarginPercent\n    };\n  }, []);\n\n  const pricingCalculation = useMemo(() => {\n    if (costPerPortion > 0) {\n      return calculateRecommendedPrices(costPerPortion, targetGrossProfit, pricingStrategy);\n    }\n    return null;\n  }, [costPerPortion, targetGrossProfit, pricingStrategy, calculateRecommendedPrices]);\n\n  // Update pricing when COGS changes\n  useEffect(() => {\n    if (costPerPortion > 0 && pricingCalculation) {\n      setSellPriceExclGST(pricingCalculation.sellPriceExclGST);\n      setSellPriceInclGST(pricingCalculation.sellPriceInclGST);\n    }\n  }, [costPerPortion, pricingCalculation]);\n\n  return {\n    targetGrossProfit,\n    sellPriceExclGST,\n    sellPriceInclGST,\n    pricingStrategy,\n    pricingCalculation,\n    setTargetGrossProfit,\n    setPricingStrategy,\n  };\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAKO,MAAM,aAAa,CAAC;IACzB,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAS,KAAK,iBAAiB;IACzF,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAS;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAS;IACjE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAA6B;IAEnF,MAAM,6BAA6B,IAAA,oNAAW,EAAC,CAAC,UAAkB,UAAkB;QAClF,kEAAkE;QAClE,oDAAoD;QACpD,gEAAgE;QAChE,MAAM,mBAAmB,WAAW,CAAC,IAAI,WAAW,GAAG;QAEvD,qDAAqD;QACrD,MAAM,YAAY,mBAAmB;QACrC,MAAM,mBAAmB,mBAAmB;QAE5C,iEAAiE;QACjE,IAAI,oBAAoB;QAExB,OAAQ;YACN,KAAK;gBACH,qCAAqC;gBACrC,MAAM,eAAe,KAAK,IAAI,CAAC;gBAC/B,oBAAoB,eAAe;gBACnC;YACF,KAAK;gBACH,mDAAmD;gBACnD,oBAAoB,KAAK,IAAI,CAAC;gBAC9B;YACF,KAAK;gBACH,qCAAqC;gBACrC,oBAAoB;gBACpB;QACJ;QAEA,8DAA8D;QAC9D,MAAM,oBAAoB,oBAAoB;QAC9C,MAAM,iBAAiB,oBAAoB;QAE3C,sDAAsD;QACtD,MAAM,qBAAqB,oBAAoB;QAC/C,MAAM,4BAA4B,AAAC,qBAAqB,oBAAqB;QAE7E,OAAO;YACL,kBAAkB;YAClB,kBAAkB;YAClB,WAAW;YACX,mBAAmB,AAAC,CAAC,oBAAoB,QAAQ,IAAI,oBAAqB;YAC1E,mBAAmB,oBAAoB;YACvC,oBAAoB;YACpB,2BAA2B;QAC7B;IACF,GAAG,EAAE;IAEL,MAAM,qBAAqB,IAAA,gNAAO,EAAC;QACjC,IAAI,iBAAiB,GAAG;YACtB,OAAO,2BAA2B,gBAAgB,mBAAmB;QACvE;QACA,OAAO;IACT,GAAG;QAAC;QAAgB;QAAmB;QAAiB;KAA2B;IAEnF,mCAAmC;IACnC,IAAA,kNAAS,EAAC;QACR,IAAI,iBAAiB,KAAK,oBAAoB;YAC5C,oBAAoB,mBAAmB,gBAAgB;YACvD,oBAAoB,mBAAmB,gBAAgB;QACzD;IACF,GAAG;QAAC;QAAgB;KAAmB;IAEvC,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 3449, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/hooks/useIngredientSearch.ts"],"sourcesContent":["'use client';\n\nimport { useState, useMemo, useCallback } from 'react';\nimport { Ingredient, RecipeIngredient } from '../types';\n\nexport const useIngredientSearch = (ingredients: Ingredient[]) => {\n  const [ingredientSearch, setIngredientSearch] = useState<string>('');\n  const [showSuggestions, setShowSuggestions] = useState<boolean>(false);\n  const [selectedIngredient, setSelectedIngredient] = useState<Ingredient | null>(null);\n  const [newIngredient, setNewIngredient] = useState<Partial<RecipeIngredient>>({\n    ingredient_id: '',\n    quantity: 0,\n    unit: 'kg',\n  });\n\n  // Live search with Material Design 3 guidelines - instant filtering\n  const filteredIngredients = useMemo(() => {\n    console.log('Filtering ingredients:', ingredients.length, 'total, search:', ingredientSearch);\n    \n    if (!ingredientSearch.trim()) {\n      const result = ingredients.slice(0, 50); // Show first 50 ingredients when no search\n      console.log('No search term, returning first 50:', result.length);\n      return result;\n    }\n    \n    const searchTerm = ingredientSearch.toLowerCase().trim();\n    const filtered = ingredients\n      .filter(ingredient => \n        ingredient.ingredient_name.toLowerCase().includes(searchTerm) ||\n        (ingredient.unit && ingredient.unit.toLowerCase().includes(searchTerm))\n      )\n      .sort((a, b) => {\n        // Prioritize exact matches and starts-with matches\n        const aName = a.ingredient_name.toLowerCase();\n        const bName = b.ingredient_name.toLowerCase();\n        \n        if (aName.startsWith(searchTerm) && !bName.startsWith(searchTerm)) return -1;\n        if (!aName.startsWith(searchTerm) && bName.startsWith(searchTerm)) return 1;\n        if (aName === searchTerm && bName !== searchTerm) return -1;\n        if (aName !== searchTerm && bName === searchTerm) return 1;\n        \n        return aName.localeCompare(bName);\n      })\n      .slice(0, 20); // Limit to 20 results for performance\n    \n    console.log('Search results:', filtered.length, 'matches for', searchTerm);\n    return filtered;\n  }, [ingredients, ingredientSearch]);\n\n  const handleIngredientSelect = useCallback((ingredient: Ingredient) => {\n    console.log('Ingredient selected:', ingredient.ingredient_name);\n    setSelectedIngredient(ingredient);\n    setNewIngredient({\n      ...newIngredient,\n      ingredient_id: ingredient.id,\n      unit: ingredient.unit || 'kg',\n    });\n    setIngredientSearch(ingredient.ingredient_name);\n    setShowSuggestions(false);\n  }, [newIngredient]);\n\n  const handleSearchChange = useCallback((value: string) => {\n    setIngredientSearch(value);\n    setShowSuggestions(value.length > 0);\n    setSelectedIngredient(null);\n    setNewIngredient({\n      ...newIngredient,\n      ingredient_id: '',\n    });\n  }, [newIngredient]);\n\n  const resetForm = useCallback(() => {\n    setNewIngredient({\n      ingredient_id: '',\n      quantity: 0,\n      unit: 'kg',\n    });\n    setIngredientSearch('');\n    setSelectedIngredient(null);\n    setShowSuggestions(false);\n  }, []);\n\n  return {\n    ingredientSearch,\n    showSuggestions,\n    selectedIngredient,\n    newIngredient,\n    filteredIngredients,\n    setIngredientSearch,\n    setShowSuggestions,\n    setNewIngredient,\n    handleIngredientSelect,\n    handleSearchChange,\n    resetForm,\n  };\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAKO,MAAM,sBAAsB,CAAC;IAClC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAS;IACjE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAU;IAChE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,IAAA,iNAAQ,EAAoB;IAChF,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAA4B;QAC5E,eAAe;QACf,UAAU;QACV,MAAM;IACR;IAEA,oEAAoE;IACpE,MAAM,sBAAsB,IAAA,gNAAO,EAAC;QAClC,QAAQ,GAAG,CAAC,0BAA0B,YAAY,MAAM,EAAE,kBAAkB;QAE5E,IAAI,CAAC,iBAAiB,IAAI,IAAI;YAC5B,MAAM,SAAS,YAAY,KAAK,CAAC,GAAG,KAAK,2CAA2C;YACpF,QAAQ,GAAG,CAAC,uCAAuC,OAAO,MAAM;YAChE,OAAO;QACT;QAEA,MAAM,aAAa,iBAAiB,WAAW,GAAG,IAAI;QACtD,MAAM,WAAW,YACd,MAAM,CAAC,CAAA,aACN,WAAW,eAAe,CAAC,WAAW,GAAG,QAAQ,CAAC,eACjD,WAAW,IAAI,IAAI,WAAW,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,aAE5D,IAAI,CAAC,CAAC,GAAG;YACR,mDAAmD;YACnD,MAAM,QAAQ,EAAE,eAAe,CAAC,WAAW;YAC3C,MAAM,QAAQ,EAAE,eAAe,CAAC,WAAW;YAE3C,IAAI,MAAM,UAAU,CAAC,eAAe,CAAC,MAAM,UAAU,CAAC,aAAa,OAAO,CAAC;YAC3E,IAAI,CAAC,MAAM,UAAU,CAAC,eAAe,MAAM,UAAU,CAAC,aAAa,OAAO;YAC1E,IAAI,UAAU,cAAc,UAAU,YAAY,OAAO,CAAC;YAC1D,IAAI,UAAU,cAAc,UAAU,YAAY,OAAO;YAEzD,OAAO,MAAM,aAAa,CAAC;QAC7B,GACC,KAAK,CAAC,GAAG,KAAK,sCAAsC;QAEvD,QAAQ,GAAG,CAAC,mBAAmB,SAAS,MAAM,EAAE,eAAe;QAC/D,OAAO;IACT,GAAG;QAAC;QAAa;KAAiB;IAElC,MAAM,yBAAyB,IAAA,oNAAW,EAAC,CAAC;QAC1C,QAAQ,GAAG,CAAC,wBAAwB,WAAW,eAAe;QAC9D,sBAAsB;QACtB,iBAAiB;YACf,GAAG,aAAa;YAChB,eAAe,WAAW,EAAE;YAC5B,MAAM,WAAW,IAAI,IAAI;QAC3B;QACA,oBAAoB,WAAW,eAAe;QAC9C,mBAAmB;IACrB,GAAG;QAAC;KAAc;IAElB,MAAM,qBAAqB,IAAA,oNAAW,EAAC,CAAC;QACtC,oBAAoB;QACpB,mBAAmB,MAAM,MAAM,GAAG;QAClC,sBAAsB;QACtB,iBAAiB;YACf,GAAG,aAAa;YAChB,eAAe;QACjB;IACF,GAAG;QAAC;KAAc;IAElB,MAAM,YAAY,IAAA,oNAAW,EAAC;QAC5B,iBAAiB;YACf,eAAe;YACf,UAAU;YACV,MAAM;QACR;QACA,oBAAoB;QACpB,sBAAsB;QACtB,mBAAmB;IACrB,GAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 3542, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/hooks/useRecipeSaving.ts"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { formatDishName } from '@/lib/text-utils';\nimport { COGSCalculation } from '../types';\n\nexport const useRecipeSaving = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  const saveAsRecipe = useCallback(async (\n    calculations: COGSCalculation[],\n    dishName: string,\n    dishPortions: number\n  ) => {\n    if (calculations.length === 0) {\n      setError('No calculations to save. Please calculate COGS first.');\n      return;\n    }\n\n    const rawRecipeName = dishName || prompt('Enter a name for this recipe:');\n    if (!rawRecipeName) return;\n    \n    const recipeName = formatDishName(rawRecipeName);\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Check if recipe already exists (case-insensitive)\n      const { data: existingRecipes, error: checkError } = await supabase\n        .from('recipes')\n        .select('id, name')\n        .ilike('name', recipeName);\n\n      console.log('Recipe check results:', { existingRecipes, checkError, recipeName });\n\n      let recipeData;\n      const existingRecipe = existingRecipes && existingRecipes.length > 0 ? existingRecipes[0] : null;\n      \n      console.log('Existing recipe found:', existingRecipe);\n      \n      if (existingRecipe && !checkError) {\n        // Recipe exists - update it\n        const recipePortions = dishPortions || 1;\n        \n        const { data: updatedRecipe, error: updateError } = await supabase\n          .from('recipes')\n          .update({\n            yield: recipePortions,\n            yield_unit: 'servings',\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', existingRecipe.id)\n          .select()\n          .single();\n\n        if (updateError) {\n          setError(updateError.message);\n          return;\n        }\n        \n        recipeData = updatedRecipe;\n      } else {\n        // Recipe doesn't exist - create new one\n        const recipePortions = dishPortions || 1;\n        \n        const { data: newRecipe, error: createError } = await supabase\n        .from('recipes')\n        .insert({\n          name: recipeName,\n            yield: recipePortions,\n            yield_unit: 'servings'\n        })\n        .select()\n        .single();\n\n        if (createError) {\n          setError(createError.message);\n        return;\n      }\n\n        recipeData = newRecipe;\n      }\n\n      // Handle recipe ingredients\n      const recipeIngredientInserts = calculations.map(calc => ({\n        recipe_id: recipeData.id,\n        ingredient_id: calc.ingredientId,\n        quantity: calc.quantity,\n        unit: calc.unit\n      }));\n\n      if (existingRecipe && !checkError) {\n        // Recipe exists - replace all ingredients (delete old ones first, then insert new ones)\n        \n        // First, delete all existing ingredients for this recipe\n        const { error: deleteError } = await supabase\n          .from('recipe_ingredients')\n          .delete()\n          .eq('recipe_id', existingRecipe.id);\n\n        if (deleteError) {\n          setError(deleteError.message);\n          return;\n        }\n\n        // Then insert the current ingredients (complete updated recipe)\n      const { error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .insert(recipeIngredientInserts);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return;\n      }\n      } else {\n        // New recipe - insert all ingredients\n        const { error: ingredientsError } = await supabase\n          .from('recipe_ingredients')\n          .insert(recipeIngredientInserts);\n\n        if (ingredientsError) {\n          setError(ingredientsError.message);\n          return;\n        }\n      }\n\n      // Clear any existing error and show success message\n      setError(null);\n      const actionText = existingRecipe && !checkError ? 'updated' : 'saved';\n      setSuccessMessage(`Recipe \"${recipeName}\" ${actionText} successfully to Recipe Book!`);\n      \n      // Clear success message after 5 seconds\n      setTimeout(() => setSuccessMessage(null), 5000);\n      \n    } catch (err) {\n      console.log('Recipe save error:', err);\n      setError('Failed to save recipe');\n      setSuccessMessage(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const clearMessages = useCallback(() => {\n    setError(null);\n    setSuccessMessage(null);\n  }, []);\n\n  return {\n    loading,\n    error,\n    successMessage,\n    saveAsRecipe,\n    clearMessages,\n    setError,\n    setSuccessMessage,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3666, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/cogs/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { convertUnit } from '@/lib/unit-conversion';\nimport { PageSkeleton } from '@/components/ui/LoadingSkeleton';\nimport { ErrorBoundary } from '@/components/ui/ErrorBoundary';\n\n// Components\nimport { DishForm } from './components/DishForm';\nimport { IngredientManager } from './components/IngredientManager';\nimport { COGSTable } from './components/COGSTable';\nimport { PricingTool } from './components/PricingTool';\nimport { SaveRecipeButton } from './components/SaveRecipeButton';\n\n// Hooks\nimport { useCOGSCalculations } from './hooks/useCOGSCalculations';\nimport { usePricing } from './hooks/usePricing';\nimport { useIngredientSearch } from './hooks/useIngredientSearch';\nimport { useRecipeSaving } from './hooks/useRecipeSaving';\n\n// Types\nimport { DishFormData } from './types';\n\nfunction COGSPageContent() {\n  // Main COGS calculations hook\n  const {\n    ingredients,\n    recipes,\n    selectedRecipe,\n    calculations,\n    loading,\n    error,\n    fetchData,\n    setSelectedRecipe,\n    updateCalculation,\n    removeCalculation,\n    addCalculation,\n    checkRecipeExists,\n    setError,\n  } = useCOGSCalculations();\n\n  // Local state for dish form\n  const [dishName, setDishName] = useState<string>('');\n  const [dishPortions, setDishPortions] = useState<number>(1);\n\n  // Pricing calculations\n  const totalCOGS = calculations.reduce((sum, calc) => sum + calc.yieldAdjustedCost, 0);\n  const costPerPortion = totalCOGS / (dishPortions || 1);\n  \n  const {\n    targetGrossProfit,\n    pricingStrategy,\n    pricingCalculation,\n    setTargetGrossProfit,\n    setPricingStrategy,\n  } = usePricing(costPerPortion);\n\n  // Ingredient search functionality\n  const {\n    ingredientSearch,\n    showSuggestions,\n    selectedIngredient,\n    newIngredient,\n    filteredIngredients,\n    handleIngredientSelect,\n    handleSearchChange,\n    resetForm,\n    setNewIngredient,\n  } = useIngredientSearch(ingredients);\n\n  // Recipe saving functionality\n  const {\n    loading: saving,\n    error: saveError,\n    successMessage,\n    saveAsRecipe,\n    setError: setSaveError,\n    setSuccessMessage,\n  } = useRecipeSaving();\n\n  // Additional local state\n  const [dishNameLocked, setDishNameLocked] = useState(false);\n  const [recipeExists, setRecipeExists] = useState<boolean | null>(null);\n  const [checkingRecipe, setCheckingRecipe] = useState(false);\n  const [showAddIngredient, setShowAddIngredient] = useState(false);\n  const [editingIngredient, setEditingIngredient] = useState<string | null>(null);\n  const [editQuantity, setEditQuantity] = useState<number>(0);\n\n  // Initialize data\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Handle editing data from recipe book\n  useEffect(() => {\n    const editingData = sessionStorage.getItem('editingRecipe');\n    if (editingData) {\n      try {\n        const { recipe, recipeId, calculations, dishName, dishPortions, dishNameLocked } = JSON.parse(editingData);\n        \n        console.log('🔍 DEBUG: Loading from sessionStorage with recipeId:', { \n          dishName, \n          recipeId, \n          calculationsCount: calculations.length \n        });\n        \n        setDishName(dishName);\n        setDishPortions(dishPortions);\n        setDishNameLocked(dishNameLocked);\n        \n        // Clear the session storage\n        sessionStorage.removeItem('editingRecipe');\n        \n        // Show success message\n        setSuccessMessage(`Recipe \"${dishName}\" loaded for editing!`);\n        setTimeout(() => setSuccessMessage(null), 3000);\n        \n      } catch (err) {\n        console.log('Failed to parse editing data:', err);\n      }\n    }\n  }, [setSuccessMessage]);\n\n  // Close suggestions when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (!target.closest('.ingredient-search-container') && !target.closest('.suggestions-dropdown')) {\n        setShowSuggestions(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Debounced recipe check (only for manual dish name entry, not when editing from recipe book)\n  useEffect(() => {\n    const timeoutId = setTimeout(async () => {\n      if (dishName.trim() && !dishNameLocked) {\n        console.log('🔍 DEBUG: Running recipe check for:', dishName);\n        setCheckingRecipe(true);\n        const exists = await checkRecipeExists(dishName);\n        setRecipeExists(exists);\n        setCheckingRecipe(false);\n      } else if (!dishName.trim()) {\n        setRecipeExists(null);\n      } else {\n        console.log('🔍 DEBUG: Skipping recipe check - dish name locked (editing from recipe book)');\n      }\n    }, 500);\n\n    return () => clearTimeout(timeoutId);\n  }, [dishName, dishNameLocked, checkRecipeExists]);\n\n  // Handle editing ingredient quantity\n  const handleEditIngredient = (ingredientId: string, currentQuantity: number) => {\n    setEditingIngredient(ingredientId);\n    setEditQuantity(currentQuantity);\n  };\n\n  // Save edited ingredient quantity\n  const handleSaveEdit = () => {\n    if (editingIngredient && editQuantity > 0) {\n      updateCalculation(editingIngredient, editQuantity);\n    }\n    setEditingIngredient(null);\n    setEditQuantity(0);\n  };\n\n  // Cancel editing\n  const handleCancelEdit = () => {\n    setEditingIngredient(null);\n    setEditQuantity(0);\n  };\n\n  // Remove ingredient from calculations\n  const handleRemoveIngredient = (ingredientId: string) => {\n    removeCalculation(ingredientId);\n  };\n\n  const handleToggleAddIngredient = () => {\n    setShowAddIngredient(!showAddIngredient);\n    // Lock dish name when starting to add ingredients\n    if (!showAddIngredient && dishName.trim()) {\n      setDishNameLocked(true);\n    }\n    // Unlock dish name when canceling add ingredient\n    if (showAddIngredient) {\n      setDishNameLocked(false);\n    }\n  };\n\n  const handleAddIngredient = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newIngredient.ingredient_id || !newIngredient.quantity) {\n      setSaveError('Please select an ingredient and enter a quantity');\n      return;\n    }\n\n    try {\n      // Check if ingredient already exists\n      const existingIngredient = calculations.find(\n        calc => calc.ingredientId === newIngredient.ingredient_id\n      );\n\n      if (existingIngredient) {\n        // Update existing ingredient quantity with automatic unit conversion\n        const selectedIngredientData = ingredients.find(ing => ing.id === newIngredient.ingredient_id);\n        if (selectedIngredientData) {\n          // Automatic unit conversion: convert user input to ingredient's base unit\n          let convertedQuantity = newIngredient.quantity!;\n          let convertedUnit = newIngredient.unit || 'kg';\n          let conversionNote = '';\n\n          // If user entered volume units but ingredient is measured by weight (or vice versa)\n          const userUnit = (newIngredient.unit || 'kg').toLowerCase().trim();\n          const ingredientUnit = (selectedIngredientData.unit || 'kg').toLowerCase().trim();\n          \n          // Volume units\n          const volumeUnits = ['tsp', 'teaspoon', 'tbsp', 'tablespoon', 'cup', 'cups', 'ml', 'milliliter', 'l', 'liter', 'litre', 'fl oz', 'fluid ounce'];\n          // Weight units  \n          const weightUnits = ['g', 'gm', 'gram', 'grams', 'kg', 'kilogram', 'oz', 'ounce', 'lb', 'pound', 'mg', 'milligram'];\n          \n          const isUserVolume = volumeUnits.includes(userUnit);\n          const isUserWeight = weightUnits.includes(userUnit);\n          const isIngredientVolume = volumeUnits.includes(ingredientUnit);\n          const isIngredientWeight = weightUnits.includes(ingredientUnit);\n\n          // Convert if there's a mismatch between user input and ingredient base unit\n          if ((isUserVolume && isIngredientWeight) || (isUserWeight && isIngredientVolume)) {\n            const conversionResult = convertUnit(newIngredient.quantity!, newIngredient.unit || 'kg', selectedIngredientData.unit || 'kg');\n            convertedQuantity = newIngredient.quantity! * conversionResult.conversionFactor;\n            convertedUnit = selectedIngredientData.unit || 'kg';\n            conversionNote = ` (converted from ${newIngredient.quantity} ${newIngredient.unit || 'kg'})`;\n          }\n\n          // Update the calculation with new quantity\n          const currentCalc = calculations.find(calc => calc.ingredientId === newIngredient.ingredient_id);\n          if (currentCalc) {\n            const newQuantity = currentCalc.quantity + convertedQuantity;\n            updateCalculation(newIngredient.ingredient_id!, newQuantity);\n          }\n        }\n      } else {\n        // Add new ingredient with automatic unit conversion\n        const selectedIngredientData = ingredients.find(ing => ing.id === newIngredient.ingredient_id);\n        if (selectedIngredientData) {\n          // Automatic unit conversion: convert user input to ingredient's base unit\n          let convertedQuantity = newIngredient.quantity!;\n          let convertedUnit = newIngredient.unit || 'kg';\n          let conversionNote = '';\n\n          // If user entered volume units but ingredient is measured by weight (or vice versa)\n          const userUnit = (newIngredient.unit || 'kg').toLowerCase().trim();\n          const ingredientUnit = (selectedIngredientData.unit || 'kg').toLowerCase().trim();\n          \n          // Volume units\n          const volumeUnits = ['tsp', 'teaspoon', 'tbsp', 'tablespoon', 'cup', 'cups', 'ml', 'milliliter', 'l', 'liter', 'litre', 'fl oz', 'fluid ounce'];\n          // Weight units  \n          const weightUnits = ['g', 'gm', 'gram', 'grams', 'kg', 'kilogram', 'oz', 'ounce', 'lb', 'pound', 'mg', 'milligram'];\n          \n          const isUserVolume = volumeUnits.includes(userUnit);\n          const isUserWeight = weightUnits.includes(userUnit);\n          const isIngredientVolume = volumeUnits.includes(ingredientUnit);\n          const isIngredientWeight = weightUnits.includes(ingredientUnit);\n\n          // Convert if there's a mismatch between user input and ingredient base unit\n          if ((isUserVolume && isIngredientWeight) || (isUserWeight && isIngredientVolume)) {\n            const conversionResult = convertUnit(newIngredient.quantity!, newIngredient.unit || 'kg', selectedIngredientData.unit || 'kg');\n            convertedQuantity = newIngredient.quantity! * conversionResult.conversionFactor;\n            convertedUnit = selectedIngredientData.unit || 'kg';\n            conversionNote = ` (converted from ${newIngredient.quantity} ${newIngredient.unit || 'kg'})`;\n          }\n\n          // Create new calculation\n          const baseCostPerUnit = selectedIngredientData.cost_per_unit_incl_trim || selectedIngredientData.cost_per_unit || 0;\n          const costPerUnit = baseCostPerUnit; // Simplified for now\n          const totalCost = convertedQuantity * costPerUnit;\n          \n          // Apply waste and yield adjustments\n          const wastePercent = selectedIngredientData.trim_peel_waste_percentage || 0;\n          const yieldPercent = selectedIngredientData.yield_percentage || 100;\n          const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n          const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n          \n          const newCalculation = {\n            recipeId: selectedRecipe || 'temp',\n            ingredientId: newIngredient.ingredient_id!,\n            ingredientName: selectedIngredientData.ingredient_name + conversionNote,\n            quantity: convertedQuantity,\n            unit: convertedUnit,\n            costPerUnit: costPerUnit,\n            totalCost: totalCost,\n            wasteAdjustedCost: wasteAdjustedCost,\n            yieldAdjustedCost: yieldAdjustedCost\n          };\n          \n          addCalculation(newCalculation);\n        }\n      }\n      \n      // Reset form\n      resetForm();\n      \n    } catch (err) {\n      setSaveError('Failed to add ingredient');\n    }\n  };\n\n  const handleSaveAsRecipe = () => {\n    saveAsRecipe(calculations, dishName, dishPortions);\n    // Unlock dish name after successful save\n    setDishNameLocked(false);\n  };\n\n  // Prepare form data for DishForm\n  const dishFormData: DishFormData = {\n    dishName,\n    dishPortions,\n    dishNameLocked,\n    recipeExists,\n    checkingRecipe,\n  };\n\n  if (loading) {\n    return <PageSkeleton />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\n            💰 COGS Calculator\n          </h1>\n          <p className=\"text-gray-400\">Calculate Cost of Goods Sold and optimize your profit margins</p>\n        </div>\n\n        {/* Error Display */}\n        {(error || saveError) && (\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6\">\n            {error || saveError}\n          </div>\n        )}\n\n        {/* Success Message */}\n        {successMessage && (\n          <div className=\"bg-gradient-to-r from-green-500 to-emerald-500 border-2 border-green-400 text-white px-6 py-5 rounded-2xl mb-6 shadow-2xl animate-in slide-in-from-top-2 duration-500 transform scale-105 hover:scale-110 transition-all duration-300\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center animate-pulse\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={3} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"font-bold text-lg text-white\">{successMessage}</p>\n                <p className=\"text-sm text-green-100 mt-1 font-medium\">🎉 Your recipe has been added to the Recipe Book and is ready to use!</p>\n              </div>\n              <button\n                onClick={() => setSuccessMessage(null)}\n                className=\"flex-shrink-0 text-white/80 hover:text-white hover:bg-white/20 rounded-full p-2 transition-all duration-200\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-8\">\n          {/* Left Column - Dish Creation */}\n          <div>\n            <DishForm\n              formData={dishFormData}\n              recipes={recipes}\n              selectedRecipe={selectedRecipe}\n              onDishNameChange={setDishName}\n              onDishPortionsChange={setDishPortions}\n              onRecipeSelect={setSelectedRecipe}\n            />\n\n            <IngredientManager\n              showAddIngredient={showAddIngredient}\n              ingredients={ingredients}\n              ingredientSearch={ingredientSearch}\n              showSuggestions={showSuggestions}\n              filteredIngredients={filteredIngredients}\n              selectedIngredient={selectedIngredient}\n              newIngredient={newIngredient}\n              onToggleAddIngredient={handleToggleAddIngredient}\n              onSearchChange={handleSearchChange}\n              onIngredientSelect={handleIngredientSelect}\n              onQuantityChange={(quantity) => setNewIngredient({ ...newIngredient, quantity })}\n              onUnitChange={(unit) => setNewIngredient({ ...newIngredient, unit })}\n              onAddIngredient={handleAddIngredient}\n            />\n          </div>\n\n          {/* Right Column - COGS Calculation */}\n          <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow\">\n            <h2 className=\"text-lg sm:text-xl font-semibold mb-4\">Cost Analysis</h2>\n            \n            <COGSTable\n              calculations={calculations}\n              editingIngredient={editingIngredient}\n              editQuantity={editQuantity}\n              onEditIngredient={handleEditIngredient}\n              onSaveEdit={handleSaveEdit}\n              onCancelEdit={handleCancelEdit}\n              onRemoveIngredient={handleRemoveIngredient}\n              onEditQuantityChange={setEditQuantity}\n              totalCOGS={totalCOGS}\n              costPerPortion={costPerPortion}\n              dishPortions={dishPortions}\n            />\n\n            <PricingTool\n              costPerPortion={costPerPortion}\n              targetGrossProfit={targetGrossProfit}\n              pricingStrategy={pricingStrategy}\n              pricingCalculation={pricingCalculation}\n              onTargetGrossProfitChange={setTargetGrossProfit}\n              onPricingStrategyChange={setPricingStrategy}\n            />\n            \n            <SaveRecipeButton onSaveAsRecipe={handleSaveAsRecipe} />\n          </div>\n        </div>\n\n        {recipes.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 text-6xl mb-4\">📊</div>\n            <h3 className=\"text-lg font-medium text-white mb-2\">No recipes available</h3>\n            <p className=\"text-gray-500 mb-4\">\n              Create some recipes first to calculate their COGS.\n            </p>\n            <a\n              href=\"/webapp/recipes\"\n              className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-colors\"\n            >\n              Go to Recipes\n            </a>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function COGSPage() {\n  return (\n    <ErrorBoundary>\n      <COGSPageContent />\n    </ErrorBoundary>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}