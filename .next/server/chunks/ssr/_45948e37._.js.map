{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/currency-formatting.ts"],"sourcesContent":["// Currency formatting utilities for internationalization performance\n// This centralizes currency formatting to avoid repeated Intl.NumberFormat creation\n\ninterface CurrencyConfig {\n  code: string;\n  symbol: string;\n  locale: string;\n  decimals: number;\n}\n\n// Supported currencies with their configurations\nconst CURRENCY_CONFIGS: Record<string, CurrencyConfig> = {\n  AUD: { code: 'AUD', symbol: 'A$', locale: 'en-AU', decimals: 2 },\n  USD: { code: 'USD', symbol: '$', locale: 'en-US', decimals: 2 },\n  EUR: { code: 'EUR', symbol: '‚Ç¨', locale: 'en-EU', decimals: 2 },\n  GBP: { code: 'GBP', symbol: '¬£', locale: 'en-GB', decimals: 2 },\n  CAD: { code: 'CAD', symbol: 'C$', locale: 'en-CA', decimals: 2 },\n  NZD: { code: 'NZD', symbol: 'NZ$', locale: 'en-NZ', decimals: 2 },\n};\n\n// Cache for NumberFormat instances to avoid recreation\nconst formatterCache = new Map<string, Intl.NumberFormat>();\n\n/**\n * Get cached NumberFormat instance for currency formatting\n */\nfunction getCurrencyFormatter(currency: string): Intl.NumberFormat {\n  const cacheKey = currency;\n  \n  if (!formatterCache.has(cacheKey)) {\n    const config = CURRENCY_CONFIGS[currency] || CURRENCY_CONFIGS.AUD;\n    const formatter = new Intl.NumberFormat(config.locale, {\n      style: 'currency',\n      currency: config.code,\n      minimumFractionDigits: config.decimals,\n      maximumFractionDigits: config.decimals,\n    });\n    formatterCache.set(cacheKey, formatter);\n  }\n  \n  return formatterCache.get(cacheKey)!;\n}\n\n/**\n * Format currency amount with proper localization\n */\nexport function formatCurrency(\n  amount: number, \n  currency: string = 'AUD',\n  options?: {\n    showSymbol?: boolean;\n    compact?: boolean;\n  }\n): string {\n  const config = CURRENCY_CONFIGS[currency] || CURRENCY_CONFIGS.AUD;\n  const { showSymbol = true, compact = false } = options || {};\n  \n  if (compact && amount >= 1000) {\n    // Use compact notation for large numbers\n    const formatter = new Intl.NumberFormat(config.locale, {\n      style: 'currency',\n      currency: config.code,\n      notation: 'compact',\n      maximumFractionDigits: 1,\n    });\n    return formatter.format(amount);\n  }\n  \n  const formatter = getCurrencyFormatter(currency);\n  return formatter.format(amount);\n}\n\n/**\n * Format currency for display in tables (without symbol)\n */\nexport function formatCurrencyValue(\n  amount: number, \n  currency: string = 'AUD'\n): string {\n  const config = CURRENCY_CONFIGS[currency] || CURRENCY_CONFIGS.AUD;\n  const formatter = new Intl.NumberFormat(config.locale, {\n    minimumFractionDigits: config.decimals,\n    maximumFractionDigits: config.decimals,\n  });\n  \n  return formatter.format(amount);\n}\n\n/**\n * Parse currency string back to number\n */\nexport function parseCurrency(value: string, currency: string = 'AUD'): number {\n  const config = CURRENCY_CONFIGS[currency] || CURRENCY_CONFIGS.AUD;\n  \n  // Remove currency symbols and spaces\n  const cleanValue = value\n    .replace(/[^\\d.,-]/g, '')\n    .replace(',', '.');\n  \n  return parseFloat(cleanValue) || 0;\n}\n\n/**\n * Get currency symbol\n */\nexport function getCurrencySymbol(currency: string = 'AUD'): string {\n  const config = CURRENCY_CONFIGS[currency] || CURRENCY_CONFIGS.AUD;\n  return config.symbol;\n}\n\n/**\n * Get all supported currencies\n */\nexport function getSupportedCurrencies(): string[] {\n  return Object.keys(CURRENCY_CONFIGS);\n}\n\n/**\n * Format percentage with proper localization\n */\nexport function formatPercentage(\n  value: number, \n  decimals: number = 1,\n  locale: string = 'en-AU'\n): string {\n  const formatter = new Intl.NumberFormat(locale, {\n    style: 'percent',\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals,\n  });\n  \n  return formatter.format(value / 100);\n}\n\n/**\n * Format number with thousand separators\n */\nexport function formatNumber(\n  value: number, \n  locale: string = 'en-AU',\n  decimals: number = 2\n): string {\n  const formatter = new Intl.NumberFormat(locale, {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals,\n  });\n  \n  return formatter.format(value);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/I18nTest.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { formatCurrency } from '../lib/currency-formatting';\n\nexport default function I18nTest() {\n  const [locale, setLocale] = useState('en-AU');\n  const [currency, setCurrency] = useState('AUD');\n  const [testAmount] = useState(29.50);\n\n  // Detect browser language\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const browserLang = navigator.language || 'en-AU';\n      setLocale(browserLang);\n      \n      // Set currency based on locale\n      const currencyMap: Record<string, string> = {\n        'en-AU': 'AUD',\n        'en-US': 'USD',\n        'en-GB': 'GBP',\n        'de-DE': 'EUR',\n        'fr-FR': 'EUR',\n        'es-ES': 'EUR'\n      };\n      setCurrency(currencyMap[browserLang] || 'AUD');\n    }\n  }, []);\n\n  const formatPrice = (amount: number, currencyCode: string, localeCode: string) => {\n    return new Intl.NumberFormat(localeCode, {\n      style: 'currency',\n      currency: currencyCode\n    }).format(amount);\n  };\n\n  const formatDate = (date: Date, localeCode: string) => {\n    return new Intl.DateTimeFormat(localeCode, {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }).format(date);\n  };\n\n  const formatNumber = (num: number, localeCode: string) => {\n    return new Intl.NumberFormat(localeCode).format(num);\n  };\n\n  return (\n    <div className=\"bg-[#1f1f1f] border border-[#29E7CD]/30 rounded-3xl p-8 max-w-2xl mx-auto\">\n      <h2 className=\"text-2xl font-bold text-[#29E7CD] mb-6 text-center\">\n        üåç Internationalization Test\n      </h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n        <div>\n          <label className=\"block text-white font-semibold mb-2\">Browser Language:</label>\n          <select \n            value={locale} \n            onChange={(e) => setLocale(e.target.value)}\n            className=\"w-full bg-[#2a2a2a] border border-[#29E7CD]/30 rounded-lg p-3 text-white\"\n          >\n            <option value=\"en-AU\">English (Australia)</option>\n            <option value=\"en-US\">English (US)</option>\n            <option value=\"en-GB\">English (UK)</option>\n            <option value=\"de-DE\">Deutsch (Germany)</option>\n            <option value=\"fr-FR\">Fran√ßais (France)</option>\n            <option value=\"es-ES\">Espa√±ol (Spain)</option>\n          </select>\n        </div>\n        \n        <div>\n          <label className=\"block text-white font-semibold mb-2\">Currency:</label>\n          <select \n            value={currency} \n            onChange={(e) => setCurrency(e.target.value)}\n            className=\"w-full bg-[#2a2a2a] border border-[#29E7CD]/30 rounded-lg p-3 text-white\"\n          >\n            <option value=\"AUD\">AUD - Australian Dollar</option>\n            <option value=\"USD\">USD - US Dollar</option>\n            <option value=\"GBP\">GBP - British Pound</option>\n            <option value=\"EUR\">EUR - Euro</option>\n            <option value=\"CAD\">CAD - Canadian Dollar</option>\n            <option value=\"NZD\">NZD - New Zealand Dollar</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-[#2a2a2a]/50 rounded-xl p-4\">\n          <h3 className=\"text-white font-semibold mb-3\">Price Formatting</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">PrepFlow Price:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {formatPrice(testAmount, currency, locale)}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Using formatCurrency():</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {formatCurrency(testAmount, currency)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#2a2a2a]/50 rounded-xl p-4\">\n          <h3 className=\"text-white font-semibold mb-3\">Date Formatting</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Today:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {formatDate(new Date(), locale)}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Short:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {new Intl.DateTimeFormat(locale).format(new Date())}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#2a2a2a]/50 rounded-xl p-4\">\n          <h3 className=\"text-white font-semibold mb-3\">Number Formatting</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Large Number:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {formatNumber(1234567.89, locale)}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Percentage:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {new Intl.NumberFormat(locale, { style: 'percent' }).format(0.15)}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#2a2a2a]/50 rounded-xl p-4\">\n          <h3 className=\"text-white font-semibold mb-3\">Browser Info</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Language:</span>\n              <span className=\"text-[#29E7CD] font-mono\">\n                {typeof window !== 'undefined' ? navigator.language : 'N/A'}\n              </span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-300\">Languages:</span>\n              <span className=\"text-[#29E7CD] font-mono text-xs\">\n                {typeof window !== 'undefined' ? navigator.languages?.slice(0, 2).join(', ') : 'N/A'}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-6 text-center\">\n        <p className=\"text-gray-400 text-sm\">\n          Change your browser language settings and refresh to see automatic detection in action!\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/setup/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Image from 'next/image';\nimport I18nTest from '../../../components/I18nTest';\n\nexport default function SetupPage() {\n  const [loading, setLoading] = useState(false);\n  const [recipesLoading, setRecipesLoading] = useState(false);\n  const [result, setResult] = useState<string | null>(null);\n  const [recipesResult, setRecipesResult] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [recipesError, setRecipesError] = useState<string | null>(null);\n\n  const populateIngredients = async () => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const response = await fetch('/api/setup-database', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setResult(data.message);\n      } else {\n        setError(data.error || 'Failed to populate ingredients');\n      }\n    } catch (err) {\n      setError('Network error occurred');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const populateRecipes = async () => {\n    setRecipesLoading(true);\n    setRecipesError(null);\n    setRecipesResult(null);\n\n    try {\n      const response = await fetch('/api/populate-recipes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setRecipesResult(data.message);\n      } else {\n        setRecipesError(data.error || 'Failed to populate recipes');\n      }\n    } catch (err) {\n      setRecipesError('Network error occurred');\n    } finally {\n      setRecipesLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header with Logo */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <Image\n              src=\"/images/prepflow-logo.png\"\n              alt=\"PrepFlow Logo\"\n              width={120}\n              height={40}\n              className=\"h-8 w-auto\"\n            />\n            <div className=\"h-8 w-px bg-[#2a2a2a]\"></div>\n            <div>\n              <h1 className=\"text-4xl font-bold text-white mb-2\">\n                üõ†Ô∏è Database Setup\n              </h1>\n              <p className=\"text-gray-400\">Initialize your PrepFlow database with sample data</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Ingredients Setup Card */}\n        <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] max-w-4xl mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h2 className=\"text-2xl font-semibold text-white mb-2\">üìä Populate Sample Ingredients</h2>\n              <p className=\"text-gray-400\">Add realistic Australian kitchen ingredients to get started</p>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 bg-[#29E7CD] rounded-full animate-pulse\"></div>\n              <span className=\"text-xs text-gray-400\">Ready</span>\n            </div>\n          </div>\n          \n          <div className=\"bg-[#2a2a2a]/30 p-4 rounded-2xl border border-[#2a2a2a]/50 mb-6\">\n            <p className=\"text-gray-300 leading-relaxed\">\n              This will add 50+ realistic Australian kitchen ingredients to your database, including proper cost data, \n              waste percentages, and supplier information. Perfect for testing the COGS calculator and recipe management features.\n            </p>\n          </div>\n          \n          {/* Action Button */}\n          <div className=\"flex justify-center mb-6\">\n            <button\n              onClick={populateIngredients}\n              disabled={loading}\n              className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-8 py-4 rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium text-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>Populating Database...</span>\n                </div>\n              ) : (\n                'üöÄ Populate Sample Ingredients'\n              )}\n            </button>\n          </div>\n\n          {/* Status Messages */}\n          {result && (\n            <div className=\"mb-6 p-4 bg-gradient-to-r from-green-500/10 to-green-600/10 border border-green-500/30 text-green-400 rounded-2xl\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xl\">‚úÖ</span>\n                <span className=\"font-medium\">{result}</span>\n              </div>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"mb-6 p-4 bg-gradient-to-r from-red-500/10 to-red-600/10 border border-red-500/30 text-red-400 rounded-2xl\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xl\">‚ùå</span>\n                <span className=\"font-medium\">{error}</span>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Recipes Setup Card */}\n        <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] max-w-4xl\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h2 className=\"text-2xl font-semibold text-white mb-2\">üçΩÔ∏è Populate Sample Recipes</h2>\n              <p className=\"text-gray-400\">Add 12 complete restaurant dishes with full ingredient lists</p>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 bg-[#D925C7] rounded-full animate-pulse\"></div>\n              <span className=\"text-xs text-gray-400\">Ready</span>\n            </div>\n          </div>\n          \n          <div className=\"bg-[#2a2a2a]/30 p-4 rounded-2xl border border-[#2a2a2a]/50 mb-6\">\n            <p className=\"text-gray-300 leading-relaxed\">\n              This will add 12 complete restaurant recipes including Classic Beef Burger, Margherita Pizza, Chicken Caesar Salad, \n              Fish and Chips, Spaghetti Carbonara, Beef Stir Fry, Chocolate Lava Cake, Chicken Tikka Masala, Caesar Salad (Vegetarian), \n              Beef Tacos, Pan-Seared Salmon Fillet, and Apple Crumble. Each recipe includes detailed instructions and complete ingredient lists.\n            </p>\n          </div>\n          \n          {/* Action Button */}\n          <div className=\"flex justify-center mb-6\">\n            <button\n              onClick={populateRecipes}\n              disabled={recipesLoading}\n              className=\"bg-gradient-to-r from-[#D925C7] to-[#29E7CD] text-white px-8 py-4 rounded-2xl hover:from-[#D925C7]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium text-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {recipesLoading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  <span>Adding Recipes...</span>\n                </div>\n              ) : (\n                'üçΩÔ∏è Populate Sample Recipes'\n              )}\n            </button>\n          </div>\n\n          {/* Status Messages */}\n          {recipesResult && (\n            <div className=\"mb-6 p-4 bg-gradient-to-r from-green-500/10 to-green-600/10 border border-green-500/30 text-green-400 rounded-2xl\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xl\">‚úÖ</span>\n                <span className=\"font-medium\">{recipesResult}</span>\n              </div>\n            </div>\n          )}\n\n          {recipesError && (\n            <div className=\"mb-6 p-4 bg-gradient-to-r from-red-500/10 to-red-600/10 border border-red-500/30 text-red-400 rounded-2xl\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xl\">‚ùå</span>\n                <span className=\"font-medium\">{recipesError}</span>\n              </div>\n            </div>\n          )}\n\n          {/* Information Card */}\n          <div className=\"bg-gradient-to-br from-[#D925C7]/10 to-[#29E7CD]/10 border border-[#D925C7]/30 p-6 rounded-2xl\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 rounded-2xl bg-gradient-to-br from-[#D925C7]/20 to-[#29E7CD]/20 flex items-center justify-center flex-shrink-0\">\n                <span className=\"text-2xl\">üçΩÔ∏è</span>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-semibold text-white mb-3\">Sample Recipes Include:</h3>\n                <ul className=\"text-gray-300 space-y-2\">\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>Classic Beef Burger with fresh vegetables</span>\n                  </li>\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>Margherita Pizza with mozzarella and basil</span>\n                  </li>\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>Chicken Caesar Salad with grilled chicken</span>\n                  </li>\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>Fish and Chips with beer batter</span>\n                  </li>\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>Spaghetti Carbonara with pancetta</span>\n                  </li>\n                  <li className=\"flex items-center space-x-2\">\n                    <span className=\"w-2 h-2 bg-[#D925C7] rounded-full\"></span>\n                    <span>And 6 more complete restaurant dishes!</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Internationalization Test Component */}\n        <div className=\"mt-8\">\n          <I18nTest />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}