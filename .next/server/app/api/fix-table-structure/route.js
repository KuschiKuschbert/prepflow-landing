(()=>{var a={};a.id=3768,a.ids=[3768],a.modules={87:(a,b,c)=>{"use strict";c.d(b,{E2:()=>h,Ye:()=>g});var d=c(82461);let e="https://dulkrqgjfohsuxhsmofo.supabase.co",f="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR1bGtycWdqZm9oc3V4aHNtb2ZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY5NzYwMDMsImV4cCI6MjA3MjU1MjAwM30.b_P98mAantymNfWy1Qz18SaR-LwrPjuaebO2Uj_5JK8";if(!e||!f)throw Error("Missing Supabase environment variables. Please check your .env.local file.");function g(){let a=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!a)throw Error("Missing SUPABASE_SERVICE_ROLE_KEY environment variable.");if(!e)throw Error("Missing NEXT_PUBLIC_SUPABASE_URL environment variable.");return(0,d.UU)(e,a)}(0,d.UU)(e,f);let h=g()},261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:a=>{"use strict";a.exports=require("punycode")},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},27910:a=>{"use strict";a.exports=require("stream")},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55591:a=>{"use strict";a.exports=require("https")},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:a=>{"use strict";a.exports=require("zlib")},78335:()=>{},79551:a=>{"use strict";a.exports=require("url")},80658:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>C,patchFetch:()=>B,routeModule:()=>x,serverHooks:()=>A,workAsyncStorage:()=>y,workUnitAsyncStorage:()=>z});var d={};c.r(d),c.d(d,{POST:()=>w});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(10641),v=c(87);async function w(){if(!v.E2)return u.NextResponse.json({error:"Supabase admin client not available"},{status:500});try{let a=[],b=[];for(let c of(console.log("\uD83D\uDD27 Fixing cleaning_areas table..."),["ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS area_name VARCHAR(255)","ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS description TEXT","ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS cleaning_frequency VARCHAR(50)","ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true","ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE cleaning_areas ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"cleaning_areas",sql:c,error:d.message}):a.push({table:"cleaning_areas",action:"added_column",sql:c})}catch(a){b.push({table:"cleaning_areas",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing cleaning_tasks table..."),["ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS area_id UUID REFERENCES cleaning_areas(id) ON DELETE CASCADE","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS task_name VARCHAR(255)","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS description TEXT","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS frequency VARCHAR(50)","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS estimated_duration_minutes INTEGER","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE cleaning_tasks ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"cleaning_tasks",sql:c,error:d.message}):a.push({table:"cleaning_tasks",action:"added_column",sql:c})}catch(a){b.push({table:"cleaning_tasks",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing suppliers table..."),["ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS supplier_name VARCHAR(255)","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS contact_person VARCHAR(255)","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS email VARCHAR(255)","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS phone VARCHAR(50)","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS address TEXT","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE suppliers ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"suppliers",sql:c,error:d.message}):a.push({table:"suppliers",action:"added_column",sql:c})}catch(a){b.push({table:"suppliers",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing compliance_types table..."),["ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS type_name VARCHAR(255)","ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS description TEXT","ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS frequency VARCHAR(50)","ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true","ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE compliance_types ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"compliance_types",sql:c,error:d.message}):a.push({table:"compliance_types",action:"added_column",sql:c})}catch(a){b.push({table:"compliance_types",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing compliance_records table..."),["ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS compliance_type_id UUID REFERENCES compliance_types(id) ON DELETE CASCADE","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS record_date DATE","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS status VARCHAR(50)","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS notes TEXT","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS recorded_by VARCHAR(255)","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE compliance_records ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"compliance_records",sql:c,error:d.message}):a.push({table:"compliance_records",action:"added_column",sql:c})}catch(a){b.push({table:"compliance_records",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing kitchen_sections table..."),["ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS section_name VARCHAR(255)","ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS description TEXT","ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS is_active BOOLEAN DEFAULT true","ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE kitchen_sections ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"kitchen_sections",sql:c,error:d.message}):a.push({table:"kitchen_sections",action:"added_column",sql:c})}catch(a){b.push({table:"kitchen_sections",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing prep_lists table..."),["ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS prep_date DATE DEFAULT CURRENT_DATE","ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS section_id UUID REFERENCES kitchen_sections(id)","ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'pending'","ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE prep_lists ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"prep_lists",sql:c,error:d.message}):a.push({table:"prep_lists",action:"added_column",sql:c})}catch(a){b.push({table:"prep_lists",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing prep_list_items table..."),["ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS prep_list_id UUID REFERENCES prep_lists(id) ON DELETE CASCADE","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS quantity_needed DECIMAL(10,3)","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS unit VARCHAR(50)","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS is_completed BOOLEAN DEFAULT false","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE prep_list_items ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"prep_list_items",sql:c,error:d.message}):a.push({table:"prep_list_items",action:"added_column",sql:c})}catch(a){b.push({table:"prep_list_items",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing order_lists table..."),["ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS order_date DATE DEFAULT CURRENT_DATE","ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS supplier_id UUID REFERENCES suppliers(id)","ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'pending'","ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS total_amount DECIMAL(10,2)","ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE order_lists ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"order_lists",sql:c,error:d.message}):a.push({table:"order_lists",action:"added_column",sql:c})}catch(a){b.push({table:"order_lists",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing order_items table..."),["ALTER TABLE order_items ADD COLUMN IF NOT EXISTS order_list_id UUID REFERENCES order_lists(id) ON DELETE CASCADE","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS ingredient_id UUID REFERENCES ingredients(id) ON DELETE CASCADE","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS quantity_ordered DECIMAL(10,3)","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS unit VARCHAR(50)","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS unit_price DECIMAL(10,4)","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS total_price DECIMAL(10,2)","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE order_items ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"order_items",sql:c,error:d.message}):a.push({table:"order_items",action:"added_column",sql:c})}catch(a){b.push({table:"order_items",sql:c,error:a.message})}for(let c of(console.log("\uD83D\uDD27 Fixing temperature_logs table..."),["ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS equipment_id UUID REFERENCES temperature_equipment(id) ON DELETE CASCADE","ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS temperature_celsius DECIMAL(5,2)","ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS recorded_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()","ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS recorded_by VARCHAR(255)","ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS notes TEXT","ALTER TABLE temperature_logs ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()"]))try{let{error:d}=await v.E2.rpc("exec_sql",{sql:c});d?b.push({table:"temperature_logs",sql:c,error:d.message}):a.push({table:"temperature_logs",action:"added_column",sql:c})}catch(a){b.push({table:"temperature_logs",sql:c,error:a.message})}return u.NextResponse.json({success:!0,message:"Table structure fixes completed",summary:{fixed:a.length,errors:b.length},results:a.slice(0,10),errors:b.slice(0,10),nextSteps:["Run /api/populate-test-data again to populate with correct structure","Check /webapp to see populated data"]})}catch(a){return console.error("Error during table structure fix:",a),u.NextResponse.json({success:!1,error:"Internal server error during table structure fix",details:a.message},{status:500})}}let x=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/fix-table-structure/route",pathname:"/api/fix-table-structure",filename:"route",bundlePath:"app/api/fix-table-structure/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"/Users/danielkuschmierz/prepflow-landing/app/api/fix-table-structure/route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:y,workUnitAsyncStorage:z,serverHooks:A}=x;function B(){return(0,g.patchFetch)({workAsyncStorage:y,workUnitAsyncStorage:z})}async function C(a,b,c){var d;let e="/api/fix-table-structure/route";"/index"===e&&(e="/");let g=await x.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:y,prerenderManifest:z,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(z.dynamicRoutes[E]||z.routes[D]);if(F&&!y){let a=!!z.routes[D],b=z.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||x.isDev||y||(G="/index"===(G=D)?"/":G);let H=!0===x.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:z,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>x.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>x.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await x.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await x.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:z,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),y&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await x.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},81630:a=>{"use strict";a.exports=require("http")},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96487:()=>{}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[4586,1692,2461],()=>b(b.s=80658));module.exports=c})();