// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/cancelled" | "/privacy-policy" | "/terms-of-service" | "/thank-you" | "/webapp" | "/webapp/ai-specials" | "/webapp/cleaning" | "/webapp/cogs" | "/webapp/compliance" | "/webapp/dish-sections" | "/webapp/ingredients" | "/webapp/order-lists" | "/webapp/par-levels" | "/webapp/performance" | "/webapp/prep-lists" | "/webapp/recipe-sharing" | "/webapp/recipes" | "/webapp/setup" | "/webapp/suppliers" | "/webapp/temperature"
type AppRouteHandlerRoutes = "/api/ai-specials" | "/api/all-recipe-ingredients" | "/api/assign-dish-section" | "/api/check-table-structure" | "/api/cleaning-areas" | "/api/cleaning-tasks" | "/api/compliance-records" | "/api/compliance-types" | "/api/create-correct-rls-policies" | "/api/create-missing-tables" | "/api/create-rls-policies" | "/api/create-tables" | "/api/create-tables-auto" | "/api/disable-rls" | "/api/fix-database" | "/api/fix-rls-policies" | "/api/generate-test-temperature-logs" | "/api/ingredients" | "/api/kitchen-sections" | "/api/menu-dishes" | "/api/order-lists" | "/api/par-levels" | "/api/performance" | "/api/populate-recipes" | "/api/prep-lists" | "/api/recipe-ingredients" | "/api/recipe-share" | "/api/recipes" | "/api/sample-performance-data" | "/api/send-sample-email" | "/api/setup-database" | "/api/setup-restaurant-features" | "/api/supplier-price-lists" | "/api/suppliers" | "/api/temperature-equipment" | "/api/temperature-logs" | "/api/test-recipe-ingredient" | "/api/test-table-columns"
type PageRoutes = never
type LayoutRoutes = "/" | "/webapp"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/ai-specials": {}
  "/api/all-recipe-ingredients": {}
  "/api/assign-dish-section": {}
  "/api/check-table-structure": {}
  "/api/cleaning-areas": {}
  "/api/cleaning-tasks": {}
  "/api/compliance-records": {}
  "/api/compliance-types": {}
  "/api/create-correct-rls-policies": {}
  "/api/create-missing-tables": {}
  "/api/create-rls-policies": {}
  "/api/create-tables": {}
  "/api/create-tables-auto": {}
  "/api/disable-rls": {}
  "/api/fix-database": {}
  "/api/fix-rls-policies": {}
  "/api/generate-test-temperature-logs": {}
  "/api/ingredients": {}
  "/api/kitchen-sections": {}
  "/api/menu-dishes": {}
  "/api/order-lists": {}
  "/api/par-levels": {}
  "/api/performance": {}
  "/api/populate-recipes": {}
  "/api/prep-lists": {}
  "/api/recipe-ingredients": {}
  "/api/recipe-share": {}
  "/api/recipes": {}
  "/api/sample-performance-data": {}
  "/api/send-sample-email": {}
  "/api/setup-database": {}
  "/api/setup-restaurant-features": {}
  "/api/supplier-price-lists": {}
  "/api/suppliers": {}
  "/api/temperature-equipment": {}
  "/api/temperature-logs": {}
  "/api/test-recipe-ingredient": {}
  "/api/test-table-columns": {}
  "/cancelled": {}
  "/privacy-policy": {}
  "/terms-of-service": {}
  "/thank-you": {}
  "/webapp": {}
  "/webapp/ai-specials": {}
  "/webapp/cleaning": {}
  "/webapp/cogs": {}
  "/webapp/compliance": {}
  "/webapp/dish-sections": {}
  "/webapp/ingredients": {}
  "/webapp/order-lists": {}
  "/webapp/par-levels": {}
  "/webapp/performance": {}
  "/webapp/prep-lists": {}
  "/webapp/recipe-sharing": {}
  "/webapp/recipes": {}
  "/webapp/setup": {}
  "/webapp/suppliers": {}
  "/webapp/temperature": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/webapp": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
