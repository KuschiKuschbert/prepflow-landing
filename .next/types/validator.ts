// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/cancelled/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cancelled">> = Specific
  const handler = {} as typeof import("../../app/cancelled/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy-policy">> = Specific
  const handler = {} as typeof import("../../app/privacy-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms-of-service/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms-of-service">> = Specific
  const handler = {} as typeof import("../../app/terms-of-service/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/thank-you/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/thank-you">> = Specific
  const handler = {} as typeof import("../../app/thank-you/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/ai-specials/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/ai-specials">> = Specific
  const handler = {} as typeof import("../../app/webapp/ai-specials/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/cleaning/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/cleaning">> = Specific
  const handler = {} as typeof import("../../app/webapp/cleaning/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/cogs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/cogs">> = Specific
  const handler = {} as typeof import("../../app/webapp/cogs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/compliance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/compliance">> = Specific
  const handler = {} as typeof import("../../app/webapp/compliance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/dish-sections/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/dish-sections">> = Specific
  const handler = {} as typeof import("../../app/webapp/dish-sections/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/ingredients/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/ingredients">> = Specific
  const handler = {} as typeof import("../../app/webapp/ingredients/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/order-lists/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/order-lists">> = Specific
  const handler = {} as typeof import("../../app/webapp/order-lists/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp">> = Specific
  const handler = {} as typeof import("../../app/webapp/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/par-levels/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/par-levels">> = Specific
  const handler = {} as typeof import("../../app/webapp/par-levels/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/performance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/performance">> = Specific
  const handler = {} as typeof import("../../app/webapp/performance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/prep-lists/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/prep-lists">> = Specific
  const handler = {} as typeof import("../../app/webapp/prep-lists/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/recipe-sharing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/recipe-sharing">> = Specific
  const handler = {} as typeof import("../../app/webapp/recipe-sharing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/recipes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/recipes">> = Specific
  const handler = {} as typeof import("../../app/webapp/recipes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/setup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/setup">> = Specific
  const handler = {} as typeof import("../../app/webapp/setup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/suppliers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/suppliers">> = Specific
  const handler = {} as typeof import("../../app/webapp/suppliers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/temperature/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/webapp/temperature">> = Specific
  const handler = {} as typeof import("../../app/webapp/temperature/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ai-specials/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ai-specials">> = Specific
  const handler = {} as typeof import("../../app/api/ai-specials/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/all-recipe-ingredients/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/all-recipe-ingredients">> = Specific
  const handler = {} as typeof import("../../app/api/all-recipe-ingredients/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/assign-dish-section/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/assign-dish-section">> = Specific
  const handler = {} as typeof import("../../app/api/assign-dish-section/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/check-all-tables/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/check-all-tables">> = Specific
  const handler = {} as typeof import("../../app/api/check-all-tables/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/check-table-structure/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/check-table-structure">> = Specific
  const handler = {} as typeof import("../../app/api/check-table-structure/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cleaning-areas/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cleaning-areas">> = Specific
  const handler = {} as typeof import("../../app/api/cleaning-areas/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cleaning-tasks/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cleaning-tasks">> = Specific
  const handler = {} as typeof import("../../app/api/cleaning-tasks/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/compliance-records/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/compliance-records">> = Specific
  const handler = {} as typeof import("../../app/api/compliance-records/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/compliance-types/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/compliance-types">> = Specific
  const handler = {} as typeof import("../../app/api/compliance-types/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-correct-rls-policies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-correct-rls-policies">> = Specific
  const handler = {} as typeof import("../../app/api/create-correct-rls-policies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-database-tables/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-database-tables">> = Specific
  const handler = {} as typeof import("../../app/api/create-database-tables/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-missing-tables/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-missing-tables">> = Specific
  const handler = {} as typeof import("../../app/api/create-missing-tables/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-rls-policies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-rls-policies">> = Specific
  const handler = {} as typeof import("../../app/api/create-rls-policies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-tables-auto/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-tables-auto">> = Specific
  const handler = {} as typeof import("../../app/api/create-tables-auto/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/create-tables/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/create-tables">> = Specific
  const handler = {} as typeof import("../../app/api/create-tables/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/disable-rls/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/disable-rls">> = Specific
  const handler = {} as typeof import("../../app/api/disable-rls/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/fix-database/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/fix-database">> = Specific
  const handler = {} as typeof import("../../app/api/fix-database/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/fix-rls-policies/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/fix-rls-policies">> = Specific
  const handler = {} as typeof import("../../app/api/fix-rls-policies/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/fix-table-structure/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/fix-table-structure">> = Specific
  const handler = {} as typeof import("../../app/api/fix-table-structure/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/generate-test-temperature-logs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/generate-test-temperature-logs">> = Specific
  const handler = {} as typeof import("../../app/api/generate-test-temperature-logs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ingredients/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ingredients">> = Specific
  const handler = {} as typeof import("../../app/api/ingredients/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/kitchen-sections/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/kitchen-sections">> = Specific
  const handler = {} as typeof import("../../app/api/kitchen-sections/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/menu-dishes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/menu-dishes">> = Specific
  const handler = {} as typeof import("../../app/api/menu-dishes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/order-lists/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/order-lists">> = Specific
  const handler = {} as typeof import("../../app/api/order-lists/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/par-levels/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/par-levels">> = Specific
  const handler = {} as typeof import("../../app/api/par-levels/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/performance/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/performance">> = Specific
  const handler = {} as typeof import("../../app/api/performance/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/populate-recipes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/populate-recipes">> = Specific
  const handler = {} as typeof import("../../app/api/populate-recipes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/populate-simple-test-data/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/populate-simple-test-data">> = Specific
  const handler = {} as typeof import("../../app/api/populate-simple-test-data/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/populate-test-data/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/populate-test-data">> = Specific
  const handler = {} as typeof import("../../app/api/populate-test-data/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/prep-lists/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/prep-lists">> = Specific
  const handler = {} as typeof import("../../app/api/prep-lists/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/recipe-ingredients/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/recipe-ingredients">> = Specific
  const handler = {} as typeof import("../../app/api/recipe-ingredients/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/recipe-share/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/recipe-share">> = Specific
  const handler = {} as typeof import("../../app/api/recipe-share/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/recipes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/recipes">> = Specific
  const handler = {} as typeof import("../../app/api/recipes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/sample-performance-data/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sample-performance-data">> = Specific
  const handler = {} as typeof import("../../app/api/sample-performance-data/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/send-sample-email/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/send-sample-email">> = Specific
  const handler = {} as typeof import("../../app/api/send-sample-email/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/setup-complete-database/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/setup-complete-database">> = Specific
  const handler = {} as typeof import("../../app/api/setup-complete-database/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/setup-database/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/setup-database">> = Specific
  const handler = {} as typeof import("../../app/api/setup-database/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/setup-restaurant-features/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/setup-restaurant-features">> = Specific
  const handler = {} as typeof import("../../app/api/setup-restaurant-features/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/supplier-price-lists/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/supplier-price-lists">> = Specific
  const handler = {} as typeof import("../../app/api/supplier-price-lists/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/suppliers/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/suppliers">> = Specific
  const handler = {} as typeof import("../../app/api/suppliers/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/temperature-equipment/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/temperature-equipment">> = Specific
  const handler = {} as typeof import("../../app/api/temperature-equipment/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/temperature-logs/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/temperature-logs">> = Specific
  const handler = {} as typeof import("../../app/api/temperature-logs/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-recipe-ingredient/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-recipe-ingredient">> = Specific
  const handler = {} as typeof import("../../app/api/test-recipe-ingredient/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-table-columns/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-table-columns">> = Specific
  const handler = {} as typeof import("../../app/api/test-table-columns/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/webapp/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/webapp">> = Specific
  const handler = {} as typeof import("../../app/webapp/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
