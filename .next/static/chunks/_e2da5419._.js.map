{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;;;;AAGoB;AAHpB;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,0MAAY,EAAC,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,2KAAO,CAAC,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,IAAA,0MAAY,EAAC,aAAa;AACnC;AAGO,MAAM,gBAAgB,sCAAgC,0BAAwB","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/LoadingSkeleton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'table' | 'chart' | 'list' | 'form' | 'stats' | 'text' | 'button';\n  className?: string;\n  count?: number;\n  height?: string;\n  width?: string;\n}\n\nexport function LoadingSkeleton({ \n  variant = 'card', \n  className = '', \n  count = 1, \n  height,\n  width \n}: LoadingSkeletonProps) {\n  const baseClasses = 'animate-pulse bg-[#2a2a2a] rounded-xl';\n  \n  const variants = {\n    card: 'h-32',\n    table: 'h-64',\n    chart: 'h-80',\n    list: 'h-16',\n    form: 'h-96',\n    stats: 'h-24',\n    text: 'h-4',\n    button: 'h-10 w-24'\n  };\n\n  const skeletonClasses = `${baseClasses} ${variants[variant]} ${className}`;\n  const style = {\n    ...(height && { height }),\n    ...(width && { width })\n  };\n\n  if (count === 1) {\n    return <div className={skeletonClasses} style={style}></div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className={skeletonClasses} style={style}></div>\n      ))}\n    </div>\n  );\n}\n\n// Specialized skeleton components for common patterns\nexport function PageSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header skeleton */}\n        <div className=\"animate-pulse mb-8\">\n          <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n        </div>\n\n        {/* Action buttons skeleton */}\n        <div className=\"flex gap-3 mb-8\">\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-32 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-40 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-28 animate-pulse\"></div>\n        </div>\n\n        {/* Main content skeleton */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-[#2a2a2a] rounded-xl\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableSkeleton({ rows = 5, columns = 4 }: { rows?: number; columns?: number }) {\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-6 py-4 border-b border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex gap-4\">\n            {Array.from({ length: columns }).map((_, i) => (\n              <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-24\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Rows */}\n      <div className=\"divide-y divide-[#2a2a2a]\">\n        {Array.from({ length: rows }).map((_, i) => (\n          <div key={i} className=\"px-6 py-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"flex gap-4\">\n                {Array.from({ length: columns }).map((_, j) => (\n                  <div key={j} className=\"h-4 bg-[#2a2a2a] rounded w-20\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ChartSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n        <div className=\"h-80 bg-[#2a2a2a] rounded-xl\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CardGridSkeleton({ count = 6 }: { count?: number }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-3\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function StatsGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-3\"></div>\n          <div className=\"h-8 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function FormSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i}>\n              <div className=\"h-4 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n              <div className=\"h-10 bg-[#2a2a2a] rounded-xl\"></div>\n            </div>\n          ))}\n          <div className=\"h-10 bg-[#2a2a2a] rounded-xl w-24\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Landing page specific skeletons\nexport function HeroSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] flex items-center justify-center\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-16 bg-[#2a2a2a] rounded-3xl w-2/3 mb-8 mx-auto\"></div>\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/2 mb-12 mx-auto\"></div>\n          <div className=\"flex justify-center gap-4 mb-16\">\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-48\"></div>\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-40\"></div>\n          </div>\n          <div className=\"h-96 bg-[#2a2a2a] rounded-3xl\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function PricingSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-[#2a2a2a] rounded-xl w-1/3 mb-6\"></div>\n        <div className=\"h-12 bg-[#2a2a2a] rounded-xl w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-8\"></div>\n        <div className=\"space-y-4 mb-8\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-full\"></div>\n          ))}\n        </div>\n        <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-full\"></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/unit-conversion.ts"],"sourcesContent":["// Unit conversion utilities for ingredient management\n\nexport interface ConversionResult {\n  conversionFactor: number;\n  isValid: boolean;\n  error?: string;\n}\n\n// Common unit conversions\nconst CONVERSION_FACTORS: Record<string, Record<string, number>> = {\n  // Weight conversions (base unit: grams)\n  'g': { 'g': 1, 'kg': 0.001, 'oz': 0.035274, 'lb': 0.002205 },\n  'kg': { 'g': 1000, 'kg': 1, 'oz': 35.274, 'lb': 2.205 },\n  'oz': { 'g': 28.3495, 'kg': 0.0283495, 'oz': 1, 'lb': 0.0625 },\n  'lb': { 'g': 453.592, 'kg': 0.453592, 'oz': 16, 'lb': 1 },\n  \n  // Volume conversions (base unit: milliliters)\n  'ml': { 'ml': 1, 'l': 0.001, 'tsp': 0.202884, 'tbsp': 0.067628, 'cup': 0.004227 },\n  'l': { 'ml': 1000, 'l': 1, 'tsp': 202.884, 'tbsp': 67.628, 'cup': 4.227 },\n  'tsp': { 'ml': 4.92892, 'l': 0.00492892, 'tsp': 1, 'tbsp': 0.333333, 'cup': 0.0208333 },\n  'tbsp': { 'ml': 14.7868, 'l': 0.0147868, 'tsp': 3, 'tbsp': 1, 'cup': 0.0625 },\n  'cup': { 'ml': 236.588, 'l': 0.236588, 'tsp': 48, 'tbsp': 16, 'cup': 1 },\n  \n  // Piece conversions (base unit: pieces)\n  'pc': { 'pc': 1, 'box': 0.01, 'pack': 0.1, 'bag': 0.05, 'bottle': 0.1, 'can': 0.1 },\n  'box': { 'pc': 100, 'box': 1, 'pack': 10, 'bag': 5, 'bottle': 10, 'can': 10 },\n  'pack': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'bag': { 'pc': 20, 'box': 0.2, 'pack': 2, 'bag': 1, 'bottle': 2, 'can': 2 },\n  'bottle': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'can': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 }\n};\n\nexport function convertUnit(amount: number, fromUnit: string, toUnit: string): ConversionResult {\n  if (!fromUnit || !toUnit) {\n    return { conversionFactor: 1, isValid: false, error: 'Unit not specified' };\n  }\n\n  // Normalize units - handle common variations\n  const normalizeUnit = (unit: string): string => {\n    const normalized = unit.toLowerCase().trim();\n    // Handle common unit variations\n    if (normalized === 'gm') return 'g';\n    if (normalized === 'ml') return 'ml';\n    if (normalized === 'pc') return 'pc';\n    return normalized;\n  };\n\n  const from = normalizeUnit(fromUnit);\n  const to = normalizeUnit(toUnit);\n\n  if (from === to) {\n    return { conversionFactor: 1, isValid: true };\n  }\n\n  const fromFactors = CONVERSION_FACTORS[from];\n  if (!fromFactors) {\n    return { conversionFactor: 1, isValid: false, error: `Unknown unit: ${fromUnit}` };\n  }\n\n  const conversionFactor = fromFactors[to];\n  if (conversionFactor === undefined) {\n    return { conversionFactor: 1, isValid: false, error: `Cannot convert from ${fromUnit} to ${toUnit}` };\n  }\n\n  return { conversionFactor, isValid: true };\n}\n\nexport function convertIngredientCost(\n  cost: number, \n  fromUnit: string, \n  toUnit: string, \n  ingredientName: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit);\n  if (!conversion.isValid) {\n    // Only log unique conversion errors to reduce console spam\n    const errorKey = `${fromUnit}-${toUnit}`;\n    if (!conversionErrors.has(errorKey)) {\n      console.warn(`Conversion failed for ${ingredientName}: ${conversion.error}`);\n      conversionErrors.add(errorKey);\n    }\n    return cost;\n  }\n  return cost * conversion.conversionFactor;\n}\n\n// Track conversion errors to prevent spam\nconst conversionErrors = new Set<string>();\n\nexport function isVolumeUnit(unit: string): boolean {\n  const volumeUnits = ['ml', 'l', 'tsp', 'tbsp', 'cup'];\n  return volumeUnits.includes(unit.toLowerCase());\n}\n\nexport function isWeightUnit(unit: string): boolean {\n  const weightUnits = ['g', 'kg', 'oz', 'lb'];\n  return weightUnits.includes(unit.toLowerCase());\n}\n\nexport function getAllUnits(): string[] {\n  return Object.keys(CONVERSION_FACTORS);\n}"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;;;;;;;;AAQtD,0BAA0B;AAC1B,MAAM,qBAA6D;IACjE,wCAAwC;IACxC,KAAK;QAAE,KAAK;QAAG,MAAM;QAAO,MAAM;QAAU,MAAM;IAAS;IAC3D,MAAM;QAAE,KAAK;QAAM,MAAM;QAAG,MAAM;QAAQ,MAAM;IAAM;IACtD,MAAM;QAAE,KAAK;QAAS,MAAM;QAAW,MAAM;QAAG,MAAM;IAAO;IAC7D,MAAM;QAAE,KAAK;QAAS,MAAM;QAAU,MAAM;QAAI,MAAM;IAAE;IAExD,8CAA8C;IAC9C,MAAM;QAAE,MAAM;QAAG,KAAK;QAAO,OAAO;QAAU,QAAQ;QAAU,OAAO;IAAS;IAChF,KAAK;QAAE,MAAM;QAAM,KAAK;QAAG,OAAO;QAAS,QAAQ;QAAQ,OAAO;IAAM;IACxE,OAAO;QAAE,MAAM;QAAS,KAAK;QAAY,OAAO;QAAG,QAAQ;QAAU,OAAO;IAAU;IACtF,QAAQ;QAAE,MAAM;QAAS,KAAK;QAAW,OAAO;QAAG,QAAQ;QAAG,OAAO;IAAO;IAC5E,OAAO;QAAE,MAAM;QAAS,KAAK;QAAU,OAAO;QAAI,QAAQ;QAAI,OAAO;IAAE;IAEvE,wCAAwC;IACxC,MAAM;QAAE,MAAM;QAAG,OAAO;QAAM,QAAQ;QAAK,OAAO;QAAM,UAAU;QAAK,OAAO;IAAI;IAClF,OAAO;QAAE,MAAM;QAAK,OAAO;QAAG,QAAQ;QAAI,OAAO;QAAG,UAAU;QAAI,OAAO;IAAG;IAC5E,QAAQ;QAAE,MAAM;QAAI,OAAO;QAAK,QAAQ;QAAG,OAAO;QAAK,UAAU;QAAG,OAAO;IAAE;IAC7E,OAAO;QAAE,MAAM;QAAI,OAAO;QAAK,QAAQ;QAAG,OAAO;QAAG,UAAU;QAAG,OAAO;IAAE;IAC1E,UAAU;QAAE,MAAM;QAAI,OAAO;QAAK,QAAQ;QAAG,OAAO;QAAK,UAAU;QAAG,OAAO;IAAE;IAC/E,OAAO;QAAE,MAAM;QAAI,OAAO;QAAK,QAAQ;QAAG,OAAO;QAAK,UAAU;QAAG,OAAO;IAAE;AAC9E;AAEO,SAAS,YAAY,MAAc,EAAE,QAAgB,EAAE,MAAc;IAC1E,IAAI,CAAC,YAAY,CAAC,QAAQ;QACxB,OAAO;YAAE,kBAAkB;YAAG,SAAS;YAAO,OAAO;QAAqB;IAC5E;IAEA,6CAA6C;IAC7C,MAAM,gBAAgB,CAAC;QACrB,MAAM,aAAa,KAAK,WAAW,GAAG,IAAI;QAC1C,gCAAgC;QAChC,IAAI,eAAe,MAAM,OAAO;QAChC,IAAI,eAAe,MAAM,OAAO;QAChC,IAAI,eAAe,MAAM,OAAO;QAChC,OAAO;IACT;IAEA,MAAM,OAAO,cAAc;IAC3B,MAAM,KAAK,cAAc;IAEzB,IAAI,SAAS,IAAI;QACf,OAAO;YAAE,kBAAkB;YAAG,SAAS;QAAK;IAC9C;IAEA,MAAM,cAAc,kBAAkB,CAAC,KAAK;IAC5C,IAAI,CAAC,aAAa;QAChB,OAAO;YAAE,kBAAkB;YAAG,SAAS;YAAO,OAAO,AAAC,iBAAyB,OAAT;QAAW;IACnF;IAEA,MAAM,mBAAmB,WAAW,CAAC,GAAG;IACxC,IAAI,qBAAqB,WAAW;QAClC,OAAO;YAAE,kBAAkB;YAAG,SAAS;YAAO,OAAO,AAAC,uBAAqC,OAAf,UAAS,QAAa,OAAP;QAAS;IACtG;IAEA,OAAO;QAAE;QAAkB,SAAS;IAAK;AAC3C;AAEO,SAAS,sBACd,IAAY,EACZ,QAAgB,EAChB,MAAc,EACd,cAAsB;IAEtB,MAAM,aAAa,YAAY,GAAG,UAAU;IAC5C,IAAI,CAAC,WAAW,OAAO,EAAE;QACvB,2DAA2D;QAC3D,MAAM,WAAW,AAAC,GAAc,OAAZ,UAAS,KAAU,OAAP;QAChC,IAAI,CAAC,iBAAiB,GAAG,CAAC,WAAW;YACnC,QAAQ,IAAI,CAAC,AAAC,yBAA2C,OAAnB,gBAAe,MAAqB,OAAjB,WAAW,KAAK;YACzE,iBAAiB,GAAG,CAAC;QACvB;QACA,OAAO;IACT;IACA,OAAO,OAAO,WAAW,gBAAgB;AAC3C;AAEA,0CAA0C;AAC1C,MAAM,mBAAmB,IAAI;AAEtB,SAAS,aAAa,IAAY;IACvC,MAAM,cAAc;QAAC;QAAM;QAAK;QAAO;QAAQ;KAAM;IACrD,OAAO,YAAY,QAAQ,CAAC,KAAK,WAAW;AAC9C;AAEO,SAAS,aAAa,IAAY;IACvC,MAAM,cAAc;QAAC;QAAK;QAAM;QAAM;KAAK;IAC3C,OAAO,YAAY,QAAQ,CAAC,KAAK,WAAW;AAC9C;AAEO,SAAS;IACd,OAAO,OAAO,IAAI,CAAC;AACrB","debugId":null}},
    {"offset": {"line": 855, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/text-utils.ts"],"sourcesContent":["// Text formatting utilities for ingredient management\n\nexport function formatIngredientName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatBrandName(brand: string): string {\n  if (!brand) return '';\n  \n  return brand\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatSupplierName(supplier: string): string {\n  if (!supplier) return '';\n  \n  return supplier\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatStorageLocation(location: string): string {\n  if (!location) return '';\n  \n  return location\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatTextInput(text: string): string {\n  if (!text) return '';\n  \n  return text\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatRecipeName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\nexport function formatDishName(name: string): string {\n  if (!name) return '';\n  \n  return name\n    .toLowerCase()\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;;;;;;;;;;;;AAE/C,SAAS,qBAAqB,IAAY;IAC/C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,KAAa;IAC3C,IAAI,CAAC,OAAO,OAAO;IAEnB,OAAO,MACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,mBAAmB,QAAgB;IACjD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,sBAAsB,QAAgB;IACpD,IAAI,CAAC,UAAU,OAAO;IAEtB,OAAO,SACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,gBAAgB,IAAY;IAC1C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,iBAAiB,IAAY;IAC3C,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV;AAEO,SAAS,eAAe,IAAY;IACzC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,WAAW,GACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;AACV","debugId":null}},
    {"offset": {"line": 907, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/hooks/useRecipeManagement.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/lib/supabase';\nimport { Recipe, RecipeIngredient, COGSCalculation, RecipePriceData } from '../types';\nimport { convertIngredientCost } from '@/lib/unit-conversion';\nimport { formatRecipeName } from '@/lib/text-utils';\nimport { useApiCall } from '@/hooks/useApiCall';\n\nexport function useRecipeManagement() {\n  const router = useRouter();\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [recipePrices, setRecipePrices] = useState<Record<string, RecipePriceData>>({});\n\n  // Use centralized formatting utility\n  const capitalizeRecipeName = formatRecipeName;\n\n  // Calculate recommended selling price for a recipe\n  const calculateRecommendedPrice = useCallback((recipe: Recipe, ingredients: RecipeIngredient[]) => {\n    if (!ingredients || ingredients.length === 0) return null;\n\n    // Calculate total cost per serving\n    let totalCostPerServing = 0;\n    \n    ingredients.forEach(ri => {\n      const ingredient = ri.ingredients;\n      const quantity = ri.quantity;\n      // Convert cost to the unit being used in the recipe\n      const baseCostPerUnit = ingredient.cost_per_unit;\n      const costPerUnit = convertIngredientCost(\n        baseCostPerUnit,\n        ingredient.unit || 'g',\n        ri.unit || 'g',\n        ingredient.ingredient_name\n      );\n      const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n      const yieldPercent = ingredient.yield_percentage || 100;\n      \n      // Calculate cost with waste and yield adjustments\n      const baseCost = quantity * costPerUnit;\n      const wasteAdjustedCost = baseCost * (1 + wastePercent / 100);\n      const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n      \n      totalCostPerServing += yieldAdjustedCost;\n    });\n\n    // Apply 30% food cost target (industry standard)\n    const targetFoodCostPercent = 30;\n    const recommendedPrice = totalCostPerServing / (targetFoodCostPercent / 100);\n    \n    // Apply charm pricing (round to nearest .95)\n    const charmPrice = Math.floor(recommendedPrice) + 0.95;\n    \n    return {\n      costPerServing: totalCostPerServing,\n      recommendedPrice: charmPrice,\n      foodCostPercent: (totalCostPerServing / charmPrice) * 100\n    };\n  }, []);\n\n  const fetchRecipes = useCallback(async () => {\n    try {\n      const response = await fetch('/api/recipes');\n      const result = await response.json();\n\n      if (!response.ok) {\n        setError(result.error || 'Failed to fetch recipes');\n      } else {\n        setRecipes(result.recipes || []);\n        \n        // Calculate prices for each recipe\n        await calculateAllRecipePrices(result.recipes || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch recipes');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Calculate prices for all recipes\n  const calculateAllRecipePrices = useCallback(async (recipesData: Recipe[]) => {\n    const prices: Record<string, RecipePriceData> = {};\n    \n    for (const recipe of recipesData) {\n      try {\n        const ingredients = await fetchRecipeIngredients(recipe.id);\n        const priceData = calculateRecommendedPrice(recipe, ingredients);\n        if (priceData) {\n          prices[recipe.id] = priceData;\n        }\n      } catch (err) {\n        console.log(`Failed to calculate price for recipe ${recipe.id}:`, err);\n      }\n    }\n    \n    setRecipePrices(prices);\n  }, [calculateRecommendedPrice]);\n\n  // Refresh recipe prices (for auto-updates)\n  const refreshRecipePrices = useCallback(async () => {\n    if (recipes.length === 0) return;\n    \n    try {\n      await calculateAllRecipePrices(recipes);\n    } catch (err) {\n      console.log('Failed to refresh recipe prices:', err);\n    }\n  }, [recipes, calculateAllRecipePrices]);\n\n  const fetchRecipeIngredients = useCallback(async (recipeId: string) => {\n    try {\n      const { data: ingredientsData, error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .select(`\n          id,\n          recipe_id,\n          ingredient_id,\n          quantity,\n          unit,\n          ingredients (\n            id,\n            ingredient_name,\n            cost_per_unit,\n            unit,\n            trim_peel_waste_percentage,\n            yield_percentage\n          )\n        `)\n        .eq('recipe_id', recipeId);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return [];\n      }\n\n      return (ingredientsData || []) as unknown as RecipeIngredient[];\n    } catch (err) {\n      setError('Failed to fetch recipe ingredients');\n      return [];\n    }\n  }, []);\n\n  const handleEditRecipe = useCallback(async (recipe: Recipe) => {\n    try {\n      // Fetch recipe ingredients\n      const ingredients = await fetchRecipeIngredients(recipe.id);\n      \n      // Convert to COGSCalculation format\n      const calculations: COGSCalculation[] = ingredients.map(ri => {\n        const ingredient = ri.ingredients;\n        const quantity = ri.quantity;\n        const costPerUnit = ingredient.cost_per_unit;\n        const totalCost = quantity * costPerUnit;\n\n        // Apply waste and yield adjustments\n        const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n        const yieldPercent = ingredient.yield_percentage || 100;\n        const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n        const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n        return {\n          recipeId: recipe.id,\n          ingredientId: ingredient.id,\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit,\n          totalCost: totalCost,\n          wasteAdjustedCost: wasteAdjustedCost,\n          yieldAdjustedCost: yieldAdjustedCost\n        };\n      });\n\n      // Store data in sessionStorage for COGS page\n      sessionStorage.setItem('editingRecipe', JSON.stringify({\n        recipe,\n        calculations,\n        dishName: recipe.name,\n        dishPortions: recipe.yield,\n        dishNameLocked: true\n      }));\n\n      // Navigate to COGS page\n      router.push('/webapp/cogs');\n    } catch (err) {\n      setError('Failed to load recipe for editing');\n    }\n  }, [fetchRecipeIngredients, router]);\n\n  // Listen for ingredient price changes and update recipe prices automatically\n  useEffect(() => {\n    if (recipes.length === 0) return;\n\n    // Subscribe to ingredient table changes\n    const subscription = supabase\n      .channel('ingredient-price-changes')\n      .on('postgres_changes', \n        { \n          event: 'UPDATE', \n          schema: 'public', \n          table: 'ingredients',\n          filter: 'cost_per_unit=neq.null' // Only trigger on cost_per_unit changes\n        }, \n        (payload) => {\n          console.log('Ingredient price changed:', payload);\n          // Refresh recipe prices when any ingredient price changes\n          refreshRecipePrices();\n        }\n      )\n      .subscribe();\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [recipes, refreshRecipePrices]);\n\n  useEffect(() => {\n    fetchRecipes();\n  }, [fetchRecipes]);\n\n  return {\n    recipes,\n    loading,\n    error,\n    recipePrices,\n    capitalizeRecipeName,\n    fetchRecipes,\n    fetchRecipeIngredients,\n    handleEditRecipe,\n    calculateRecommendedPrice,\n    calculateAllRecipePrices,\n    refreshRecipePrices,\n    setError\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1143, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/hooks/useAIInstructions.ts"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { Recipe, RecipeIngredient } from '../types';\n\nexport function useAIInstructions() {\n  const [aiInstructions, setAiInstructions] = useState<string>('');\n  const [generatingInstructions, setGeneratingInstructions] = useState(false);\n\n  const generateAIInstructions = useCallback(async (recipe: Recipe, ingredients: RecipeIngredient[]) => {\n    console.log('🤖 DEBUG: Generating AI instructions for:', recipe.name);\n    console.log('🤖 DEBUG: Ingredients:', ingredients);\n    setGeneratingInstructions(true);\n    \n    try {\n      // Analyze ingredients to determine cooking method\n      const ingredientNames = ingredients.map(ri => ri.ingredients.ingredient_name.toLowerCase());\n      console.log('🤖 DEBUG: Ingredient names:', ingredientNames);\n      \n      const hasProtein = ingredientNames.some(name => \n        name.includes('beef') || name.includes('chicken') || name.includes('pork') || \n        name.includes('fish') || name.includes('lamb') || name.includes('mince')\n      );\n      const hasVegetables = ingredientNames.some(name => \n        name.includes('carrot') || name.includes('onion') || name.includes('garlic') ||\n        name.includes('tomato') || name.includes('pepper') || name.includes('celery')\n      );\n      const hasDairy = ingredientNames.some(name => \n        name.includes('cheese') || name.includes('milk') || name.includes('cream') ||\n        name.includes('butter') || name.includes('yogurt')\n      );\n      const hasGrains = ingredientNames.some(name => \n        name.includes('rice') || name.includes('pasta') || name.includes('bread') ||\n        name.includes('flour') || name.includes('quinoa')\n      );\n\n      // Determine recipe type and cooking method\n      let recipeType = 'general';\n      let cookingMethod = 'stovetop';\n      let primaryTechnique = 'sautéing';\n\n      if (recipe.name.toLowerCase().includes('burger') || recipe.name.toLowerCase().includes('patty')) {\n        recipeType = 'burger';\n        cookingMethod = 'grill/pan';\n        primaryTechnique = 'grilling/pan-frying';\n      } else if (recipe.name.toLowerCase().includes('soup') || recipe.name.toLowerCase().includes('stew')) {\n        recipeType = 'soup';\n        cookingMethod = 'stovetop';\n        primaryTechnique = 'simmering';\n      } else if (recipe.name.toLowerCase().includes('salad')) {\n        recipeType = 'salad';\n        cookingMethod = 'cold prep';\n        primaryTechnique = 'mixing';\n      } else if (recipe.name.toLowerCase().includes('pasta') || recipe.name.toLowerCase().includes('noodle')) {\n        recipeType = 'pasta';\n        cookingMethod = 'stovetop';\n        primaryTechnique = 'boiling/sautéing';\n      }\n\n      // Generate specific instructions based on recipe analysis\n      let generatedInstructions = '';\n\n      if (recipeType === 'burger') {\n        generatedInstructions = `**Burger Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and equipment\n2. Prepare work station with cutting board, knives, and mixing bowls\n3. Preheat ${cookingMethod === 'grill/pan' ? 'grill or large skillet' : 'cooking surface'} to medium-high heat\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('mince')\n)?.ingredients.ingredient_name || 'main protein'} - season and form into patties` : ''}\n${hasVegetables ? `2. Prep vegetables: Wash, peel, and chop all vegetables as needed` : ''}\n${hasDairy ? `3. Prepare dairy: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('cheese')\n)?.ingredients.ingredient_name || 'cheese'} - slice or grate as needed` : ''}\n\n**Cooking Method:**\n1. Heat cooking surface to medium-high (375°F/190°C)\n2. ${hasProtein ? 'Cook protein patties for 4-5 minutes per side for medium doneness' : 'Cook main ingredients'}\n3. ${hasVegetables ? 'Sauté vegetables until tender-crisp' : 'Cook vegetables as needed'}\n4. ${hasDairy ? 'Add cheese in final 1-2 minutes of cooking' : 'Add finishing ingredients'}\n\n**Assembly & Service:**\n1. Toast buns if desired\n2. Layer ingredients: protein, vegetables, condiments\n3. Serve immediately while hot\n4. Yield: ${recipe.yield} ${recipe.yield_unit}\n\n**Professional Tips:**\n- Maintain consistent heat for even cooking\n- Don't press patties while cooking\n- Let meat rest 2-3 minutes before serving\n- Keep ingredients warm during assembly`;\n\n      } else if (recipeType === 'soup') {\n        generatedInstructions = `**Soup Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and large pot\n2. Prepare cutting board and sharp knives\n3. Have stock or broth ready at room temperature\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: Cut ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('chicken')\n)?.ingredients.ingredient_name || 'protein'} into bite-sized pieces` : ''}\n${hasVegetables ? `2. Prep vegetables: Dice aromatics (onions, carrots, celery) uniformly` : ''}\n${hasGrains ? `3. Prepare grains: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('rice') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('pasta')\n)?.ingredients.ingredient_name || 'grains'} - rinse if needed` : ''}\n\n**Cooking Method:**\n1. Heat large pot over medium heat\n2. ${hasProtein ? 'Sear protein until browned, remove and set aside' : 'Start with aromatics'}\n3. ${hasVegetables ? 'Sauté vegetables until softened (5-7 minutes)' : 'Cook base ingredients'}\n4. Add liquid and bring to boil, then reduce to simmer\n5. ${hasProtein ? 'Return protein to pot' : 'Add main ingredients'}\n6. Simmer until all ingredients are tender (20-30 minutes)\n\n**Final Steps:**\n1. Taste and adjust seasoning\n2. Skim any excess fat from surface\n3. Serve hot with garnishes\n4. Yield: ${recipe.yield} ${recipe.yield_unit}\n\n**Professional Tips:**\n- Build layers of flavor (sauté aromatics first)\n- Simmer gently to avoid breaking ingredients\n- Taste frequently and adjust seasoning\n- Cool quickly if storing`;\n\n      } else {\n        // General recipe instructions\n        generatedInstructions = `**${recipe.name} Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and equipment\n2. Prepare work station with cutting board and knives\n3. Preheat cooking equipment as needed\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('chicken') ||\n  ri.ingredients.ingredient_name.toLowerCase().includes('mince')\n)?.ingredients.ingredient_name || 'main protein'} - cut, season, or prepare as needed` : ''}\n${hasVegetables ? `2. Prep vegetables: Wash, peel, and cut vegetables uniformly` : ''}\n${hasDairy ? `3. Prepare dairy: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('cheese') ||\n  ri.ingredients.ingredient_name.toLowerCase().includes('milk')\n)?.ingredients.ingredient_name || 'dairy products'} - prepare as needed` : ''}\n\n**Cooking Method:**\n1. Heat cooking surface to appropriate temperature\n2. ${hasProtein ? 'Cook protein first, then remove and set aside' : 'Start with base ingredients'}\n3. ${hasVegetables ? 'Cook vegetables until desired doneness' : 'Cook main ingredients'}\n4. ${hasProtein ? 'Return protein to pan' : 'Combine all ingredients'}\n5. Season and finish cooking\n\n**Final Steps:**\n1. Taste and adjust seasoning\n2. Plate attractively for ${recipe.yield} ${recipe.yield_unit}\n3. Serve immediately while hot\n\n**Professional Tips:**\n- Maintain consistent heat throughout cooking\n- Use proper knife skills for uniform cuts\n- Keep work area clean and organized\n- Taste frequently and adjust seasoning`;\n      }\n\n      console.log('🤖 DEBUG: Generated instructions:', generatedInstructions);\n      setAiInstructions(generatedInstructions);\n      console.log('🤖 DEBUG: AI instructions state set');\n    } catch (err) {\n      console.error('🤖 DEBUG: Error generating instructions:', err);\n      throw new Error('Failed to generate cooking instructions');\n    } finally {\n      setGeneratingInstructions(false);\n    }\n  }, []);\n\n  return {\n    aiInstructions,\n    generatingInstructions,\n    generateAIInstructions\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/components/RecipeCard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Recipe } from '../types';\n\ninterface RecipeCardProps {\n  recipe: Recipe;\n  recipePrices: Record<string, {costPerServing: number, recommendedPrice: number, foodCostPercent: number}>;\n  selectedRecipes: Set<string>;\n  onSelectRecipe: (recipeId: string) => void;\n  onPreviewRecipe: (recipe: Recipe) => void;\n  onEditRecipe: (recipe: Recipe) => void;\n  onDeleteRecipe: (recipe: Recipe) => void;\n  capitalizeRecipeName: (name: string) => string;\n}\n\nexport default function RecipeCard({ \n  recipe, \n  recipePrices, \n  selectedRecipes, \n  onSelectRecipe, \n  onPreviewRecipe, \n  onEditRecipe, \n  onDeleteRecipe,\n  capitalizeRecipeName \n}: RecipeCardProps) {\n  return (\n    <div className=\"p-4 hover:bg-[#2a2a2a]/20 transition-colors\">\n      <div className=\"flex items-start justify-between mb-2\">\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            checked={selectedRecipes.has(recipe.id)}\n            onChange={() => onSelectRecipe(recipe.id)}\n            className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2 mr-3\"\n          />\n          <h3 \n            className=\"text-sm font-medium text-white cursor-pointer\" \n            onClick={() => onPreviewRecipe(recipe)}\n          >\n            {capitalizeRecipeName(recipe.name)}\n          </h3>\n        </div>\n        <span className=\"text-xs text-gray-500\">\n          {new Date(recipe.created_at).toLocaleDateString()}\n        </span>\n      </div>\n      \n      <div className=\"space-y-1 text-xs text-gray-500 mb-3 ml-7\">\n        <div>\n          <span className=\"font-medium\">Recommended Price:</span> \n          {recipePrices[recipe.id] ? (\n            <span className=\"text-white font-semibold ml-1\">\n              ${recipePrices[recipe.id].recommendedPrice.toFixed(2)}\n            </span>\n          ) : (\n            <span className=\"text-gray-500 ml-1\">Calculating...</span>\n          )}\n        </div>\n        {recipePrices[recipe.id] && (\n          <div>\n            <span className=\"font-medium\">Food Cost:</span> \n            <span className=\"text-gray-400 ml-1\">\n              {recipePrices[recipe.id].foodCostPercent.toFixed(1)}%\n            </span>\n          </div>\n        )}\n        {recipe.instructions && (\n          <div>\n            <span className=\"font-medium\">Instructions:</span>\n            <p className=\"mt-1 text-gray-400 line-clamp-2\">\n              {recipe.instructions}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-2 ml-7\">\n        <button\n          onClick={() => onEditRecipe(recipe)}\n          className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-3 py-2 rounded-lg text-xs font-medium hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200\"\n        >\n          ✏️ Edit in COGS\n        </button>\n        <button\n          onClick={() => onDeleteRecipe(recipe)}\n          className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-3 py-2 rounded-lg text-xs font-medium hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200\"\n        >\n          🗑️ Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAgBe,SAAS,WAAW,KASjB;QATiB,EACjC,MAAM,EACN,YAAY,EACZ,eAAe,EACf,cAAc,EACd,eAAe,EACf,YAAY,EACZ,cAAc,EACd,oBAAoB,EACJ,GATiB;IAUjC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,MAAK;gCACL,SAAS,gBAAgB,GAAG,CAAC,OAAO,EAAE;gCACtC,UAAU,IAAM,eAAe,OAAO,EAAE;gCACxC,WAAU;;;;;;0CAEZ,6LAAC;gCACC,WAAU;gCACV,SAAS,IAAM,gBAAgB;0CAE9B,qBAAqB,OAAO,IAAI;;;;;;;;;;;;kCAGrC,6LAAC;wBAAK,WAAU;kCACb,IAAI,KAAK,OAAO,UAAU,EAAE,kBAAkB;;;;;;;;;;;;0BAInD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAK,WAAU;0CAAc;;;;;;4BAC7B,YAAY,CAAC,OAAO,EAAE,CAAC,iBACtB,6LAAC;gCAAK,WAAU;;oCAAgC;oCAC5C,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC;;;;;;qDAGrD,6LAAC;gCAAK,WAAU;0CAAqB;;;;;;;;;;;;oBAGxC,YAAY,CAAC,OAAO,EAAE,CAAC,kBACtB,6LAAC;;0CACC,6LAAC;gCAAK,WAAU;0CAAc;;;;;;0CAC9B,6LAAC;gCAAK,WAAU;;oCACb,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC;oCAAG;;;;;;;;;;;;;oBAIzD,OAAO,YAAY,kBAClB,6LAAC;;0CACC,6LAAC;gCAAK,WAAU;0CAAc;;;;;;0CAC9B,6LAAC;gCAAE,WAAU;0CACV,OAAO,YAAY;;;;;;;;;;;;;;;;;;0BAO5B,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS,IAAM,aAAa;wBAC5B,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,SAAS,IAAM,eAAe;wBAC9B,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;KA9EwB","debugId":null}},
    {"offset": {"line": 1444, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/components/RecipeTable.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Recipe, RecipePriceData } from '../types';\n\ninterface RecipeTableProps {\n  recipes: Recipe[];\n  recipePrices: Record<string, RecipePriceData>;\n  selectedRecipes: Set<string>;\n  onSelectAll: () => void;\n  onSelectRecipe: (recipeId: string) => void;\n  onPreviewRecipe: (recipe: Recipe) => void;\n  onEditRecipe: (recipe: Recipe) => void;\n  onDeleteRecipe: (recipe: Recipe) => void;\n  capitalizeRecipeName: (name: string) => string;\n}\n\nexport default function RecipeTable({ \n  recipes, \n  recipePrices, \n  selectedRecipes, \n  onSelectAll, \n  onSelectRecipe, \n  onPreviewRecipe, \n  onEditRecipe, \n  onDeleteRecipe,\n  capitalizeRecipeName \n}: RecipeTableProps) {\n  return (\n    <div className=\"hidden md:block overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-[#2a2a2a]\">\n        <thead className=\"sticky top-0 z-10 bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n          <tr>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRecipes.size === recipes.length && recipes.length > 0}\n                  onChange={onSelectAll}\n                  className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                />\n                <span className=\"ml-2\">Select</span>\n              </div>\n            </th>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              Name\n            </th>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              Recommended Price\n            </th>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              Instructions\n            </th>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              Created\n            </th>\n            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n              Actions\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-[#1f1f1f] divide-y divide-[#2a2a2a]\">\n          {recipes.map((recipe) => (\n            <tr key={recipe.id} className=\"hover:bg-[#2a2a2a]/20 transition-colors\">\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\" onClick={(e) => e.stopPropagation()}>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedRecipes.has(recipe.id)}\n                  onChange={() => onSelectRecipe(recipe.id)}\n                  className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                />\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white cursor-pointer\" onClick={() => onPreviewRecipe(recipe)}>\n                {capitalizeRecipeName(recipe.name)}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 cursor-pointer\" onClick={() => onPreviewRecipe(recipe)}>\n                {recipePrices[recipe.id] ? (\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-white font-semibold\">${recipePrices[recipe.id].recommendedPrice.toFixed(2)}</span>\n                    <span className=\"text-xs text-gray-400\">\n                      {recipePrices[recipe.id].foodCostPercent.toFixed(1)}% food cost\n                    </span>\n                  </div>\n                ) : (\n                  <span className=\"text-gray-500\">Calculating...</span>\n                )}\n              </td>\n              <td className=\"px-6 py-4 text-sm text-gray-300 cursor-pointer\" onClick={() => onPreviewRecipe(recipe)}>\n                {recipe.instructions ? (\n                  <div className=\"max-w-xs truncate\">\n                    {recipe.instructions}\n                  </div>\n                ) : (\n                  '-'\n                )}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 cursor-pointer\" onClick={() => onPreviewRecipe(recipe)}>\n                {new Date(recipe.created_at).toLocaleDateString()}\n              </td>\n              <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                <div className=\"flex gap-2\" onClick={(e) => e.stopPropagation()}>\n                  <button\n                    onClick={() => onEditRecipe(recipe)}\n                    className=\"bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-3 py-1 rounded-lg text-xs font-medium hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200\"\n                  >\n                    ✏️ Edit\n                  </button>\n                  <button\n                    onClick={() => onDeleteRecipe(recipe)}\n                    className=\"bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-3 py-1 rounded-lg text-xs font-medium hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200\"\n                  >\n                    🗑️ Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAiBe,SAAS,YAAY,KAUjB;QAViB,EAClC,OAAO,EACP,YAAY,EACZ,eAAe,EACf,WAAW,EACX,cAAc,EACd,eAAe,EACf,YAAY,EACZ,cAAc,EACd,oBAAoB,EACH,GAViB;IAWlC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAM,WAAU;;8BACf,6LAAC;oBAAM,WAAU;8BACf,cAAA,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CACZ,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAK;4CACL,SAAS,gBAAgB,IAAI,KAAK,QAAQ,MAAM,IAAI,QAAQ,MAAM,GAAG;4CACrE,UAAU;4CACV,WAAU;;;;;;sDAEZ,6LAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;0CAG3B,6LAAC;gCAAG,WAAU;0CAAiF;;;;;;0CAG/F,6LAAC;gCAAG,WAAU;0CAAiF;;;;;;0CAG/F,6LAAC;gCAAG,WAAU;0CAAiF;;;;;;0CAG/F,6LAAC;gCAAG,WAAU;0CAAiF;;;;;;0CAG/F,6LAAC;gCAAG,WAAU;0CAAiF;;;;;;;;;;;;;;;;;8BAKnG,6LAAC;oBAAM,WAAU;8BACd,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;4BAAmB,WAAU;;8CAC5B,6LAAC;oCAAG,WAAU;oCAA6D,SAAS,CAAC,IAAM,EAAE,eAAe;8CAC1G,cAAA,6LAAC;wCACC,MAAK;wCACL,SAAS,gBAAgB,GAAG,CAAC,OAAO,EAAE;wCACtC,UAAU,IAAM,eAAe,OAAO,EAAE;wCACxC,WAAU;;;;;;;;;;;8CAGd,6LAAC;oCAAG,WAAU;oCAA4E,SAAS,IAAM,gBAAgB;8CACtH,qBAAqB,OAAO,IAAI;;;;;;8CAEnC,6LAAC;oCAAG,WAAU;oCAAmE,SAAS,IAAM,gBAAgB;8CAC7G,YAAY,CAAC,OAAO,EAAE,CAAC,iBACtB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;;oDAA2B;oDAAE,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC;;;;;;;0DAC9F,6LAAC;gDAAK,WAAU;;oDACb,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC;oDAAG;;;;;;;;;;;;6DAIxD,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;;;;;;8CAGpC,6LAAC;oCAAG,WAAU;oCAAiD,SAAS,IAAM,gBAAgB;8CAC3F,OAAO,YAAY,iBAClB,6LAAC;wCAAI,WAAU;kDACZ,OAAO,YAAY;;;;;+CAGtB;;;;;;8CAGJ,6LAAC;oCAAG,WAAU;oCAAmE,SAAS,IAAM,gBAAgB;8CAC7G,IAAI,KAAK,OAAO,UAAU,EAAE,kBAAkB;;;;;;8CAEjD,6LAAC;oCAAG,WAAU;8CACZ,cAAA,6LAAC;wCAAI,WAAU;wCAAa,SAAS,CAAC,IAAM,EAAE,eAAe;;0DAC3D,6LAAC;gDACC,SAAS,IAAM,aAAa;gDAC5B,WAAU;0DACX;;;;;;0DAGD,6LAAC;gDACC,SAAS,IAAM,eAAe;gDAC9B,WAAU;0DACX;;;;;;;;;;;;;;;;;;2BA/CE,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;AA0D9B;KAxGwB","debugId":null}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/components/RecipeForm.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Recipe } from '../types';\n\ninterface RecipeFormProps {\n  showForm: boolean;\n  newRecipe: Partial<Recipe>;\n  onToggleForm: () => void;\n  onUpdateRecipe: (updates: Partial<Recipe>) => void;\n  onSubmit: (e: React.FormEvent) => void;\n}\n\nexport default function RecipeForm({ \n  showForm, \n  newRecipe, \n  onToggleForm, \n  onUpdateRecipe, \n  onSubmit \n}: RecipeFormProps) {\n  if (!showForm) return null;\n\n  return (\n    <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow mb-6\">\n      <h2 className=\"text-lg sm:text-xl font-semibold mb-4\">Add New Recipe</h2>\n      <form onSubmit={onSubmit} className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n            Recipe Name *\n          </label>\n          <input\n            type=\"text\"\n            required\n            value={newRecipe.name || ''}\n            onChange={(e) => onUpdateRecipe({ name: e.target.value })}\n            className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            placeholder=\"e.g., Chicken Stir-fry\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n            Yield Portions\n          </label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            value={newRecipe.yield || 1}\n            onChange={(e) => onUpdateRecipe({ yield: parseInt(e.target.value) || 1 })}\n            className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n            Instructions\n          </label>\n          <textarea\n            value={newRecipe.instructions || ''}\n            onChange={(e) => onUpdateRecipe({ instructions: e.target.value })}\n            rows={4}\n            className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n            placeholder=\"Step-by-step cooking instructions...\"\n          />\n        </div>\n        <div className=\"flex gap-3\">\n          <button\n            type=\"submit\"\n            className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\"\n          >\n            Add Recipe\n          </button>\n          <button\n            type=\"button\"\n            onClick={onToggleForm}\n            className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAae,SAAS,WAAW,KAMjB;QANiB,EACjC,QAAQ,EACR,SAAS,EACT,YAAY,EACZ,cAAc,EACd,QAAQ,EACQ,GANiB;IAOjC,IAAI,CAAC,UAAU,OAAO;IAEtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAwC;;;;;;0BACtD,6LAAC;gBAAK,UAAU;gBAAU,WAAU;;kCAClC,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,6LAAC;gCACC,MAAK;gCACL,QAAQ;gCACR,OAAO,UAAU,IAAI,IAAI;gCACzB,UAAU,CAAC,IAAM,eAAe;wCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACvD,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAGhB,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,6LAAC;gCACC,MAAK;gCACL,KAAI;gCACJ,OAAO,UAAU,KAAK,IAAI;gCAC1B,UAAU,CAAC,IAAM,eAAe;wCAAE,OAAO,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;oCAAE;gCACvE,WAAU;;;;;;;;;;;;kCAGd,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAA+C;;;;;;0CAGhE,6LAAC;gCACC,OAAO,UAAU,YAAY,IAAI;gCACjC,UAAU,CAAC,IAAM,eAAe;wCAAE,cAAc,EAAE,MAAM,CAAC,KAAK;oCAAC;gCAC/D,MAAM;gCACN,WAAU;gCACV,aAAY;;;;;;;;;;;;kCAGhB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCACC,MAAK;gCACL,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAOX;KApEwB","debugId":null}},
    {"offset": {"line": 1882, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/components/BulkActionsBar.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface BulkActionsBarProps {\n  selectedCount: number;\n  onBulkDelete: () => void;\n  onClearSelection: () => void;\n}\n\nexport default function BulkActionsBar({ \n  selectedCount, \n  onBulkDelete, \n  onClearSelection \n}: BulkActionsBarProps) {\n  if (selectedCount === 0) return null;\n\n  return (\n    <div className=\"bg-gradient-to-r from-[#ef4444]/10 to-[#dc2626]/10 border border-[#ef4444]/30 p-4 rounded-xl mb-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-3\">\n            <span className=\"text-white font-bold text-sm\">{selectedCount}</span>\n          </div>\n          <div>\n            <h3 className=\"text-white font-semibold\">\n              {selectedCount} recipe{selectedCount > 1 ? 's' : ''} selected\n            </h3>\n            <p className=\"text-gray-400 text-sm\">Choose an action for the selected recipes</p>\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={onBulkDelete}\n            className=\"bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-2 rounded-lg hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n          >\n            🗑️ Delete Selected\n          </button>\n          <button\n            onClick={onClearSelection}\n            className=\"bg-[#2a2a2a] text-gray-300 px-4 py-2 rounded-lg hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n          >\n            Clear Selection\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAUe,SAAS,eAAe,KAIjB;QAJiB,EACrC,aAAa,EACb,YAAY,EACZ,gBAAgB,EACI,GAJiB;IAKrC,IAAI,kBAAkB,GAAG,OAAO;IAEhC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAK,WAAU;0CAAgC;;;;;;;;;;;sCAElD,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;;wCACX;wCAAc;wCAAQ,gBAAgB,IAAI,MAAM;wCAAG;;;;;;;8CAEtD,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;8BAGzC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KAtCwB","debugId":null}},
    {"offset": {"line": 2005, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport { supabase } from '@/lib/supabase';\nimport { PageSkeleton } from '@/components/ui/LoadingSkeleton';\nimport { useRecipeManagement } from './hooks/useRecipeManagement';\nimport { useAIInstructions } from './hooks/useAIInstructions';\nimport { Recipe, RecipeIngredient, COGSCalculation } from './types';\nimport RecipeCard from './components/RecipeCard';\nimport RecipeTable from './components/RecipeTable';\nimport RecipeForm from './components/RecipeForm';\nimport BulkActionsBar from './components/BulkActionsBar';\nimport RecipePreviewModal from './components/RecipePreviewModal';\n\nexport default function RecipesPageRefactored() {\n  const router = useRouter();\n  const {\n    recipes,\n    loading,\n    error,\n    recipePrices,\n    capitalizeRecipeName,\n    fetchRecipes,\n    fetchRecipeIngredients,\n    handleEditRecipe,\n    setError\n  } = useRecipeManagement();\n\n  const {\n    aiInstructions,\n    generatingInstructions,\n    generateAIInstructions\n  } = useAIInstructions();\n\n  // Form state\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newRecipe, setNewRecipe] = useState<Partial<Recipe>>({\n    name: '',\n    yield: 1,\n    yield_unit: 'servings',\n    instructions: '',\n  });\n\n  // Preview state\n  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);\n  const [recipeIngredients, setRecipeIngredients] = useState<RecipeIngredient[]>([]);\n  const [showPreview, setShowPreview] = useState(false);\n  const [previewYield, setPreviewYield] = useState<number>(1);\n\n  // Selection state\n  const [selectedRecipes, setSelectedRecipes] = useState<Set<string>>(new Set());\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [recipeToDelete, setRecipeToDelete] = useState<Recipe | null>(null);\n  const [showBulkDeleteConfirm, setShowBulkDeleteConfirm] = useState(false);\n\n  // Share state\n  const [showShareModal, setShowShareModal] = useState(false);\n  const [shareUrl, setShareUrl] = useState('');\n  const [shareLoading, setShareLoading] = useState(false);\n\n  // Success message state\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  // Helper functions\n  const formatQuantity = (quantity: number, unit: string) => {\n    const adjustedQuantity = previewYield / (selectedRecipe?.yield || 1) * quantity;\n    \n    // Smart conversions for common units\n    if (unit.toLowerCase() === 'gm' || unit.toLowerCase() === 'g' || unit.toLowerCase() === 'gram') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'kg',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    if (unit.toLowerCase() === 'ml' || unit.toLowerCase() === 'milliliter') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'L',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    // For smaller quantities, show more precision\n    if (adjustedQuantity < 1) {\n      return {\n        value: adjustedQuantity.toFixed(2),\n        unit: unit,\n        original: `${adjustedQuantity.toFixed(2)} ${unit}`\n      };\n    }\n    \n    // Default formatting\n    return {\n      value: adjustedQuantity.toFixed(1),\n      unit: unit,\n      original: `${adjustedQuantity.toFixed(1)} ${unit}`\n    };\n  };\n\n  // Event handlers\n  const handleAddRecipe = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const { error } = await supabase\n        .from('recipes')\n        .insert([newRecipe]);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setShowAddForm(false);\n        setNewRecipe({\n          name: '',\n          yield: 1,\n          yield_unit: 'servings',\n          instructions: '',\n        });\n        fetchRecipes();\n      }\n    } catch (err) {\n      setError('Failed to add recipe');\n    }\n  };\n\n  const handlePreviewRecipe = async (recipe: Recipe) => {\n    try {\n      console.log('🔍 DEBUG: Fetching ingredients for recipe:', recipe.name, recipe.id);\n      const ingredients = await fetchRecipeIngredients(recipe.id);\n      console.log('🔍 DEBUG: Fetched ingredients:', ingredients);\n      setSelectedRecipe(recipe);\n      setRecipeIngredients(ingredients);\n      setPreviewYield(recipe.yield); // Initialize with original yield\n      setShowPreview(true);\n      \n      // Generate AI instructions\n      await generateAIInstructions(recipe, ingredients);\n    } catch (err) {\n      console.error('❌ Error in handlePreviewRecipe:', err);\n      setError('Failed to load recipe preview');\n    }\n  };\n\n  const handleEditFromPreview = () => {\n    if (!selectedRecipe || !recipeIngredients.length) {\n      setError('No recipe data available for editing');\n      return;\n    }\n\n    try {\n      console.log('🔍 DEBUG: Recipe ingredients from preview:', recipeIngredients);\n      console.log('🔍 DEBUG: Selected recipe:', selectedRecipe);\n\n      // Convert already loaded recipe ingredients to COGSCalculation format\n      const calculations: COGSCalculation[] = recipeIngredients.map(ri => {\n        const ingredient = ri.ingredients;\n        const quantity = ri.quantity;\n        const costPerUnit = ingredient.cost_per_unit;\n        const totalCost = quantity * costPerUnit;\n\n        // Apply waste and yield adjustments\n        const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n        const yieldPercent = ingredient.yield_percentage || 100;\n        const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n        const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n        return {\n          recipeId: selectedRecipe.id,\n          ingredientId: ingredient.id,\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit,\n          totalCost: totalCost,\n          wasteAdjustedCost: wasteAdjustedCost,\n          yieldAdjustedCost: yieldAdjustedCost\n        };\n      });\n\n      console.log('🔍 DEBUG: Final calculations array:', calculations);\n\n      // Store data in sessionStorage for COGS page\n      sessionStorage.setItem('editingRecipe', JSON.stringify({\n        recipe: selectedRecipe,\n        recipeId: selectedRecipe.id, // Pass the specific recipe ID\n        calculations,\n        dishName: selectedRecipe.name,\n        dishPortions: selectedRecipe.yield,\n        dishNameLocked: true\n      }));\n\n      // Close the preview modal\n      setShowPreview(false);\n\n      // Navigate to COGS page\n      router.push('/webapp/cogs');\n    } catch (err) {\n      console.error('❌ Error in handleEditFromPreview:', err);\n      setError('Failed to load recipe for editing');\n    }\n  };\n\n  const handleDeleteRecipe = (recipe: Recipe) => {\n    setRecipeToDelete(recipe);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDeleteRecipe = async () => {\n    if (!recipeToDelete) return;\n\n    try {\n      // First delete all recipe ingredients\n      const { error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .delete()\n        .eq('recipe_id', recipeToDelete.id);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return;\n      }\n\n      // Then delete the recipe\n      const { error: recipeError } = await supabase\n        .from('recipes')\n        .delete()\n        .eq('id', recipeToDelete.id);\n\n      if (recipeError) {\n        setError(recipeError.message);\n        return;\n      }\n\n      // Refresh the recipes list\n      await fetchRecipes();\n      \n      // Show success message\n      setSuccessMessage(`Recipe \"${capitalizeRecipeName(recipeToDelete.name)}\" deleted successfully!`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n\n      // Close the confirmation modal\n      setShowDeleteConfirm(false);\n      setRecipeToDelete(null);\n\n    } catch (err) {\n      setError('Failed to delete recipe');\n    }\n  };\n\n  const cancelDeleteRecipe = () => {\n    setShowDeleteConfirm(false);\n    setRecipeToDelete(null);\n  };\n\n  // Multi-selection functions\n  const handleSelectRecipe = (recipeId: string) => {\n    setSelectedRecipes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(recipeId)) {\n        newSet.delete(recipeId);\n      } else {\n        newSet.add(recipeId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectedRecipes.size === recipes.length) {\n      setSelectedRecipes(new Set());\n    } else {\n      setSelectedRecipes(new Set(recipes.map(r => r.id)));\n    }\n  };\n\n  const handleBulkDelete = () => {\n    if (selectedRecipes.size === 0) return;\n    setShowBulkDeleteConfirm(true);\n  };\n\n  const confirmBulkDelete = async () => {\n    if (selectedRecipes.size === 0) return;\n\n    try {\n      const selectedRecipeIds = Array.from(selectedRecipes);\n      \n      // Delete all recipe ingredients for selected recipes\n      const { error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .delete()\n        .in('recipe_id', selectedRecipeIds);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return;\n      }\n\n      // Delete all selected recipes\n      const { error: recipesError } = await supabase\n        .from('recipes')\n        .delete()\n        .in('id', selectedRecipeIds);\n\n      if (recipesError) {\n        setError(recipesError.message);\n        return;\n      }\n\n      // Refresh the recipes list\n      await fetchRecipes();\n      \n      // Show success message\n      setSuccessMessage(`${selectedRecipes.size} recipe${selectedRecipes.size > 1 ? 's' : ''} deleted successfully!`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n\n      // Clear selection and close modal\n      setSelectedRecipes(new Set());\n      setShowBulkDeleteConfirm(false);\n\n    } catch (err) {\n      setError('Failed to delete recipes');\n    }\n  };\n\n  const cancelBulkDelete = () => {\n    setShowBulkDeleteConfirm(false);\n  };\n\n  const handleShareRecipe = async () => {\n    if (!selectedRecipe || !recipeIngredients.length) {\n      setError('No recipe data available for sharing');\n      return;\n    }\n\n    setShareLoading(true);\n    try {\n      // Create a compressed recipe data object\n      const recipeData = {\n        name: selectedRecipe.name,\n        yield: selectedRecipe.yield,\n        yield_unit: selectedRecipe.yield_unit,\n        instructions: selectedRecipe.instructions,\n        ingredients: recipeIngredients.map(ri => ({\n          name: ri.ingredients.ingredient_name,\n          quantity: ri.quantity,\n          unit: ri.unit\n        })),\n        aiInstructions: aiInstructions,\n        created_at: selectedRecipe.created_at,\n        shared_at: new Date().toISOString()\n      };\n\n      // Call the recipe share API\n      const response = await fetch('/api/recipe-share', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          recipeData,\n          userId: 'user-123' // You can get this from auth context\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create share link');\n      }\n\n      const result = await response.json();\n      setShareUrl(result.shareUrl);\n      setShowShareModal(true);\n    } catch (err) {\n      setError('Failed to share recipe');\n    } finally {\n      setShareLoading(false);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  if (loading) {\n    return <PageSkeleton />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Image\n              src=\"/images/prepflow-logo.png\"\n              alt=\"PrepFlow Logo\"\n              width={40}\n              height={40}\n              className=\"rounded-lg\"\n              priority\n            />\n            <h1 className=\"text-4xl font-bold text-white\">\n              📖 Recipe Book\n            </h1>\n          </div>\n          <p className=\"text-gray-400\">Manage your saved recipes and create new ones</p>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-wrap gap-3 mb-8\">\n          <button\n            onClick={() => setShowAddForm(!showAddForm)}\n            className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            {showAddForm ? 'Cancel' : '+ Add Manual Recipe'}\n          </button>\n          <a\n            href=\"/webapp/cogs\"\n            className=\"bg-gradient-to-r from-[#3B82F6] to-[#29E7CD] text-white px-6 py-3 rounded-2xl hover:from-[#3B82F6]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            Create Recipe from COGS\n          </a>\n          <button\n            onClick={() => {\n              setLoading(true);\n              fetchRecipes();\n            }}\n            className=\"bg-gradient-to-r from-[#D925C7] to-[#3B82F6] text-white px-6 py-3 rounded-2xl hover:from-[#D925C7]/80 hover:to-[#3B82F6]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            🔄 Refresh Recipes\n          </button>\n        </div>\n\n        {/* Recipe Book Description */}\n        <div className=\"bg-gradient-to-br from-[#29E7CD]/10 to-[#D925C7]/10 border border-[#29E7CD]/30 p-4 sm:p-6 rounded-xl mb-6\">\n          <h2 className=\"text-lg font-semibold text-white mb-2\">How Recipe Book Works</h2>\n          <div className=\"grid md:grid-cols-2 gap-4 text-sm text-gray-300\">\n            <div>\n              <h3 className=\"font-medium text-[#3B82F6] mb-2\">✍️ Manual Recipes</h3>\n              <p>Add recipes manually with instructions and portion counts. Perfect for documenting cooking methods and procedures.</p>\n            </div>\n            <div>\n              <h3 className=\"font-medium text-[#29E7CD] mb-2\">📊 From COGS Calculations</h3>\n              <p>Create cost calculations in the COGS screen, then save them as recipes. These recipes include all ingredient costs and portion calculations.</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Bulk Actions Bar */}\n        <BulkActionsBar\n          selectedCount={selectedRecipes.size}\n          onBulkDelete={handleBulkDelete}\n          onClearSelection={() => setSelectedRecipes(new Set())}\n        />\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6\">\n            {error}\n          </div>\n        )}\n\n        {/* Success Message */}\n        {successMessage && (\n          <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6 flex items-center\">\n            <div className=\"flex items-center\">\n              <svg className=\"w-5 h-5 text-green-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"font-medium\">{successMessage}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Recipe Form */}\n        <RecipeForm\n          showForm={showAddForm}\n          newRecipe={newRecipe}\n          onToggleForm={() => setShowAddForm(!showAddForm)}\n          onUpdateRecipe={setNewRecipe}\n          onSubmit={handleAddRecipe}\n        />\n\n        {/* Recipes List */}\n        <div className=\"bg-[#1f1f1f] rounded-lg shadow overflow-hidden\">\n          <div className=\"sticky top-0 z-10 bg-[#1f1f1f] px-4 sm:px-6 py-4 border-b border-[#2a2a2a]\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-lg font-semibold text-white\">\n                Recipes ({recipes.length})\n              </h2>\n              {selectedRecipes.size > 0 && (\n                <div className=\"flex items-center\">\n                  <div className=\"w-6 h-6 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-2\">\n                    <span className=\"text-white font-bold text-xs\">{selectedRecipes.size}</span>\n                  </div>\n                  <span className=\"text-sm text-gray-300\">\n                    {selectedRecipes.size} selected\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Mobile Card Layout */}\n          <div className=\"block md:hidden\">\n            <div className=\"divide-y divide-[#2a2a2a]\">\n              {recipes.map((recipe) => (\n                <RecipeCard\n                  key={recipe.id}\n                  recipe={recipe}\n                  recipePrices={recipePrices}\n                  selectedRecipes={selectedRecipes}\n                  onSelectRecipe={handleSelectRecipe}\n                  onPreviewRecipe={handlePreviewRecipe}\n                  onEditRecipe={handleEditRecipe}\n                  onDeleteRecipe={handleDeleteRecipe}\n                  capitalizeRecipeName={capitalizeRecipeName}\n                />\n              ))}\n            </div>\n          </div>\n\n          {/* Desktop Table Layout */}\n          <RecipeTable\n            recipes={recipes}\n            recipePrices={recipePrices}\n            selectedRecipes={selectedRecipes}\n            onSelectAll={handleSelectAll}\n            onSelectRecipe={handleSelectRecipe}\n            onPreviewRecipe={handlePreviewRecipe}\n            onEditRecipe={handleEditRecipe}\n            onDeleteRecipe={handleDeleteRecipe}\n            capitalizeRecipeName={capitalizeRecipeName}\n          />\n        </div>\n\n        {/* Empty State */}\n        {recipes.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 text-6xl mb-4\">🍳</div>\n            <h3 className=\"text-lg font-medium text-white mb-2\">No recipes yet</h3>\n            <p className=\"text-gray-500 mb-4\">\n              Start by adding your first recipe to begin managing your kitchen costs.\n            </p>\n            <button\n              onClick={() => setShowAddForm(true)}\n              className=\"bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-colors\"\n            >\n              Add Your First Recipe\n            </button>\n          </div>\n        )}\n\n        {/* Recipe Preview Modal */}\n        <RecipePreviewModal\n          showPreview={showPreview}\n          selectedRecipe={selectedRecipe}\n          recipeIngredients={recipeIngredients}\n          aiInstructions={aiInstructions}\n          generatingInstructions={generatingInstructions}\n          previewYield={previewYield}\n          shareLoading={shareLoading}\n          onClose={() => setShowPreview(false)}\n          onEditFromPreview={handleEditFromPreview}\n          onShareRecipe={handleShareRecipe}\n          onPrint={handlePrint}\n          onUpdatePreviewYield={setPreviewYield}\n          capitalizeRecipeName={capitalizeRecipeName}\n          formatQuantity={formatQuantity}\n        />\n\n        {/* Delete Confirmation Modal */}\n        {showDeleteConfirm && recipeToDelete && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-md w-full border border-[#2a2a2a]\">\n              <div className=\"p-6 border-b border-[#2a2a2a]\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-4\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">Delete Recipe</h3>\n                    <p className=\"text-gray-400 text-sm\">This action cannot be undone</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <p className=\"text-gray-300 mb-6\">\n                  Are you sure you want to delete <span className=\"font-semibold text-white\">\"{capitalizeRecipeName(recipeToDelete.name)}\"</span>? \n                  This will permanently remove the recipe and all its ingredients from your Recipe Book.\n                </p>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={cancelDeleteRecipe}\n                    className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-4 py-3 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={confirmDeleteRecipe}\n                    className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-3 rounded-xl hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    Delete Recipe\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Bulk Delete Confirmation Modal */}\n        {showBulkDeleteConfirm && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-md w-full border border-[#2a2a2a]\">\n              <div className=\"p-6 border-b border-[#2a2a2a]\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-4\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">Delete Multiple Recipes</h3>\n                    <p className=\"text-gray-400 text-sm\">This action cannot be undone</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <p className=\"text-gray-300 mb-6\">\n                  Are you sure you want to delete <span className=\"font-semibold text-white\">{selectedRecipes.size} recipe{selectedRecipes.size > 1 ? 's' : ''}</span>? \n                  This will permanently remove all selected recipes and their ingredients from your Recipe Book.\n                </p>\n                <div className=\"bg-[#0a0a0a] rounded-lg p-4 mb-6 max-h-32 overflow-y-auto\">\n                  <h4 className=\"text-sm font-medium text-white mb-2\">Selected Recipes:</h4>\n                  <div className=\"space-y-1\">\n                    {Array.from(selectedRecipes).map(recipeId => {\n                      const recipe = recipes.find(r => r.id === recipeId);\n                      return recipe ? (\n                        <div key={recipeId} className=\"text-xs text-gray-400\">• {capitalizeRecipeName(recipe.name)}</div>\n                      ) : null;\n                    })}\n                  </div>\n                </div>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={cancelBulkDelete}\n                    className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-4 py-3 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={confirmBulkDelete}\n                    className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-3 rounded-xl hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    Delete {selectedRecipes.size} Recipe{selectedRecipes.size > 1 ? 's' : ''}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}