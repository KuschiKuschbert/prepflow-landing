{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/unit-conversion.ts"],"sourcesContent":["// Unit conversion utilities for ingredient management\n\nexport interface ConversionResult {\n  conversionFactor: number;\n  isValid: boolean;\n  error?: string;\n}\n\n// Common unit conversions\nconst CONVERSION_FACTORS: Record<string, Record<string, number>> = {\n  // Weight conversions (base unit: grams)\n  'g': { 'g': 1, 'kg': 0.001, 'oz': 0.035274, 'lb': 0.002205 },\n  'kg': { 'g': 1000, 'kg': 1, 'oz': 35.274, 'lb': 2.205 },\n  'oz': { 'g': 28.3495, 'kg': 0.0283495, 'oz': 1, 'lb': 0.0625 },\n  'lb': { 'g': 453.592, 'kg': 0.453592, 'oz': 16, 'lb': 1 },\n  \n  // Volume conversions (base unit: milliliters)\n  'ml': { 'ml': 1, 'l': 0.001, 'tsp': 0.202884, 'tbsp': 0.067628, 'cup': 0.004227 },\n  'l': { 'ml': 1000, 'l': 1, 'tsp': 202.884, 'tbsp': 67.628, 'cup': 4.227 },\n  'tsp': { 'ml': 4.92892, 'l': 0.00492892, 'tsp': 1, 'tbsp': 0.333333, 'cup': 0.0208333 },\n  'tbsp': { 'ml': 14.7868, 'l': 0.0147868, 'tsp': 3, 'tbsp': 1, 'cup': 0.0625 },\n  'cup': { 'ml': 236.588, 'l': 0.236588, 'tsp': 48, 'tbsp': 16, 'cup': 1 },\n  \n  // Piece conversions (base unit: pieces)\n  'pc': { 'pc': 1, 'box': 0.01, 'pack': 0.1, 'bag': 0.05, 'bottle': 0.1, 'can': 0.1 },\n  'box': { 'pc': 100, 'box': 1, 'pack': 10, 'bag': 5, 'bottle': 10, 'can': 10 },\n  'pack': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'bag': { 'pc': 20, 'box': 0.2, 'pack': 2, 'bag': 1, 'bottle': 2, 'can': 2 },\n  'bottle': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 },\n  'can': { 'pc': 10, 'box': 0.1, 'pack': 1, 'bag': 0.5, 'bottle': 1, 'can': 1 }\n};\n\nexport function convertUnit(amount: number, fromUnit: string, toUnit: string): ConversionResult {\n  if (!fromUnit || !toUnit) {\n    return { conversionFactor: 1, isValid: false, error: 'Unit not specified' };\n  }\n\n  // Normalize units - handle common variations\n  const normalizeUnit = (unit: string): string => {\n    const normalized = unit.toLowerCase().trim();\n    // Handle common unit variations\n    if (normalized === 'gm') return 'g';\n    if (normalized === 'ml') return 'ml';\n    if (normalized === 'pc') return 'pc';\n    return normalized;\n  };\n\n  const from = normalizeUnit(fromUnit);\n  const to = normalizeUnit(toUnit);\n\n  if (from === to) {\n    return { conversionFactor: 1, isValid: true };\n  }\n\n  const fromFactors = CONVERSION_FACTORS[from];\n  if (!fromFactors) {\n    return { conversionFactor: 1, isValid: false, error: `Unknown unit: ${fromUnit}` };\n  }\n\n  const conversionFactor = fromFactors[to];\n  if (conversionFactor === undefined) {\n    return { conversionFactor: 1, isValid: false, error: `Cannot convert from ${fromUnit} to ${toUnit}` };\n  }\n\n  return { conversionFactor, isValid: true };\n}\n\nexport function convertIngredientCost(\n  cost: number, \n  fromUnit: string, \n  toUnit: string, \n  ingredientName: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit);\n  if (!conversion.isValid) {\n    // Only log unique conversion errors to reduce console spam\n    const errorKey = `${fromUnit}-${toUnit}`;\n    if (!conversionErrors.has(errorKey)) {\n      console.warn(`Conversion failed for ${ingredientName}: ${conversion.error}`);\n      conversionErrors.add(errorKey);\n    }\n    return cost;\n  }\n  return cost * conversion.conversionFactor;\n}\n\n// Track conversion errors to prevent spam\nconst conversionErrors = new Set<string>();\n\nexport function isVolumeUnit(unit: string): boolean {\n  const volumeUnits = ['ml', 'l', 'tsp', 'tbsp', 'cup'];\n  return volumeUnits.includes(unit.toLowerCase());\n}\n\nexport function isWeightUnit(unit: string): boolean {\n  const weightUnits = ['g', 'kg', 'oz', 'lb'];\n  return weightUnits.includes(unit.toLowerCase());\n}\n\nexport function getAllUnits(): string[] {\n  return Object.keys(CONVERSION_FACTORS);\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/ingredients/components/IngredientForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { formatIngredientName, formatBrandName, formatSupplierName, formatStorageLocation, formatTextInput } from '@/lib/text-utils';\nimport { convertUnit } from '@/lib/unit-conversion';\n\ninterface Ingredient {\n  id: string;\n  ingredient_name: string;\n  brand?: string;\n  pack_size?: string;\n  pack_size_unit?: string;\n  pack_price?: number;\n  unit?: string;\n  cost_per_unit: number;\n  cost_per_unit_as_purchased?: number;\n  cost_per_unit_incl_trim?: number;\n  trim_peel_waste_percentage?: number;\n  yield_percentage?: number;\n  supplier?: string;\n  product_code?: string;\n  storage_location?: string;\n  min_stock_level?: number;\n  current_stock?: number;\n  created_at?: string;\n  updated_at?: string;\n}\n\ninterface Supplier {\n  id: string;\n  name: string;\n  created_at: string;\n}\n\ninterface IngredientFormProps {\n  ingredient?: Ingredient | null;\n  suppliers: Supplier[];\n  availableUnits: string[];\n  onSave: (ingredient: Partial<Ingredient>) => Promise<void>;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport default function IngredientForm({ \n  ingredient, \n  suppliers, \n  availableUnits, \n  onSave, \n  onCancel, \n  loading = false \n}: IngredientFormProps) {\n  const { t } = useTranslation();\n  \n  const [formData, setFormData] = useState<Partial<Ingredient>>({\n    ingredient_name: '',\n    brand: '',\n    pack_size: '',\n    pack_size_unit: 'GM',\n    pack_price: 0,\n    unit: 'GM',\n    cost_per_unit: 0,\n    cost_per_unit_as_purchased: 0,\n    cost_per_unit_incl_trim: 0,\n    trim_peel_waste_percentage: 0,\n    yield_percentage: 100,\n    supplier: '',\n    product_code: '',\n    storage_location: '',\n    min_stock_level: 0,\n    current_stock: 0,\n    ...ingredient\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Calculate cost per unit from pack price and pack size\n  const calculateCostPerUnit = (packPrice: number, packSize: number, packSizeUnit: string, targetUnit: string): number => {\n    if (packPrice === 0 || packSize === 0) return 0;\n    \n    const conversion = convertUnit(1, packSizeUnit, targetUnit);\n    const packSizeInTargetUnit = packSize * conversion.conversionFactor;\n    \n    return packPrice / packSizeInTargetUnit;\n  };\n\n  // Auto-calculate cost per unit when pack price or pack size changes\n  const updateCostPerUnit = () => {\n    if (formData.pack_price && formData.pack_size && formData.pack_size_unit && formData.unit) {\n      const calculatedCost = calculateCostPerUnit(\n        formData.pack_price,\n        parseFloat(formData.pack_size),\n        formData.pack_size_unit,\n        formData.unit\n      );\n      setFormData(prev => ({\n        ...prev,\n        cost_per_unit: calculatedCost,\n        cost_per_unit_as_purchased: calculatedCost,\n        cost_per_unit_incl_trim: calculatedCost\n      }));\n    }\n  };\n\n  const handleInputChange = (field: keyof Ingredient, value: string | number) => {\n    const formattedValue = typeof value === 'string' ? formatTextInput(value) : value;\n    \n    setFormData(prev => ({\n      ...prev,\n      [field]: formattedValue\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n\n    // Auto-calculate cost per unit for relevant fields\n    if (['pack_price', 'pack_size', 'pack_size_unit', 'unit'].includes(field)) {\n      setTimeout(updateCostPerUnit, 100);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.ingredient_name?.trim()) {\n      newErrors.ingredient_name = 'Ingredient name is required';\n    }\n\n    if (!formData.pack_price || formData.pack_price <= 0) {\n      newErrors.pack_price = 'Pack price must be greater than 0';\n    }\n\n    if (!formData.pack_size || parseFloat(formData.pack_size) <= 0) {\n      newErrors.pack_size = 'Pack size must be greater than 0';\n    }\n\n    if (!formData.unit) {\n      newErrors.unit = 'Unit is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving ingredient:', error);\n    }\n  };\n\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl p-6 border border-[#2a2a2a]\">\n      <h2 className=\"text-2xl font-bold text-white mb-6\">\n        {ingredient ? 'Edit Ingredient' : 'Add New Ingredient'}\n      </h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Basic Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Ingredient Name *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.ingredient_name || ''}\n              onChange={(e) => handleInputChange('ingredient_name', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Tomatoes\"\n              required\n            />\n            {errors.ingredient_name && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.ingredient_name}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Brand\n            </label>\n            <input\n              type=\"text\"\n              value={formData.brand || ''}\n              onChange={(e) => handleInputChange('brand', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coles\"\n            />\n          </div>\n        </div>\n\n        {/* Pack Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Size *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.pack_size || ''}\n              onChange={(e) => handleInputChange('pack_size', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 5\"\n              required\n            />\n            {errors.pack_size && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.pack_size}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Size Unit\n            </label>\n            <select\n              value={formData.pack_size_unit || 'GM'}\n              onChange={(e) => handleInputChange('pack_size_unit', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            >\n              {availableUnits.map(unit => (\n                <option key={unit} value={unit}>{unit}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Pack Price *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.pack_price || ''}\n              onChange={(e) => handleInputChange('pack_price', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 12.50\"\n              required\n            />\n            {errors.pack_price && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.pack_price}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Cost Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Cost Per Unit *\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.cost_per_unit || ''}\n              onChange={(e) => handleInputChange('cost_per_unit', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"Auto-calculated\"\n              required\n            />\n            {errors.cost_per_unit && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.cost_per_unit}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Unit *\n            </label>\n            <select\n              value={formData.unit || 'GM'}\n              onChange={(e) => handleInputChange('unit', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              required\n            >\n              {availableUnits.map(unit => (\n                <option key={unit} value={unit}>{unit}</option>\n              ))}\n            </select>\n            {errors.unit && (\n              <p className=\"text-red-400 text-sm mt-1\">{errors.unit}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Additional Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Supplier\n            </label>\n            <input\n              type=\"text\"\n              value={formData.supplier || ''}\n              onChange={(e) => handleInputChange('supplier', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coles\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Storage Location\n            </label>\n            <input\n              type=\"text\"\n              value={formData.storage_location || ''}\n              onChange={(e) => handleInputChange('storage_location', e.target.value)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., Coolroom\"\n            />\n          </div>\n        </div>\n\n        {/* Waste and Yield */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Trim/Peel Waste (%)\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              value={formData.trim_peel_waste_percentage || 0}\n              onChange={(e) => handleInputChange('trim_peel_waste_percentage', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 10\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Yield (%)\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              value={formData.yield_percentage || 100}\n              onChange={(e) => handleInputChange('yield_percentage', parseFloat(e.target.value) || 100)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 90\"\n            />\n          </div>\n        </div>\n\n        {/* Stock Information */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Min Stock Level\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={formData.min_stock_level || 0}\n              onChange={(e) => handleInputChange('min_stock_level', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 5\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n              Current Stock\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={formData.current_stock || 0}\n              onChange={(e) => handleInputChange('current_stock', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white placeholder-gray-400 focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n              placeholder=\"e.g., 10\"\n            />\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex gap-4 pt-6\">\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-6 py-3 rounded-2xl font-semibold hover:shadow-lg hover:shadow-[#29E7CD]/25 transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {loading ? 'Saving...' : (ingredient ? 'Update Ingredient' : 'Add Ingredient')}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"flex-1 bg-[#2a2a2a] text-white px-6 py-3 rounded-2xl font-semibold hover:bg-[#3a3a3a] transition-all duration-300\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}