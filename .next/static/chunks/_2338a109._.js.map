{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// Client-side Supabase client\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\n// Server-side Supabase client with service role key (only available on server)\nexport function createSupabaseAdmin() {\n  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\n\n  if (!serviceRoleKey) {\n    throw new Error('Missing SUPABASE_SERVICE_ROLE_KEY environment variable.')\n  }\n\n  if (!supabaseUrl) {\n    throw new Error('Missing NEXT_PUBLIC_SUPABASE_URL environment variable.')\n  }\n\n  return createClient(supabaseUrl, serviceRoleKey)\n}\n\n// For backward compatibility, create admin client only on server-side\nexport const supabaseAdmin = typeof window === 'undefined' ? createSupabaseAdmin() : null\n"],"names":[],"mappings":";;;;;AAGoB;AAHpB;;AAEA,8BAA8B;AAC9B,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAG3C,SAAS;IACd,MAAM,iBAAiB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,yBAAyB;IAE5D,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA;;IAIA,OAAO,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC;AAGO,MAAM,gBAAgB,sCAAgC,0BAAwB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/unit-conversion.ts"],"sourcesContent":["// Comprehensive Unit Conversion System for PrepFlow WebApp\n\nexport interface ConversionResult {\n  convertedValue: number;\n  convertedUnit: string;\n  originalValue: number;\n  originalUnit: string;\n  conversionFactor: number;\n}\n\n// Volume to Volume conversions (base unit: ml)\nconst volumeConversions: Record<string, number> = {\n  'ml': 1,\n  'milliliter': 1,\n  'l': 1000,\n  'liter': 1000,\n  'litre': 1000,\n  'tsp': 5,\n  'teaspoon': 5,\n  'tbsp': 15,\n  'tablespoon': 15,\n  'cup': 240,\n  'cups': 240,\n  'fl oz': 30,\n  'fluid ounce': 30,\n  'pint': 480,\n  'quart': 960,\n  'gallon': 3840\n};\n\n// Weight to Weight conversions (base unit: g)\nconst weightConversions: Record<string, number> = {\n  'g': 1,\n  'gm': 1,\n  'gram': 1,\n  'grams': 1,\n  'kg': 1000,\n  'kilogram': 1000,\n  'oz': 28.35,\n  'ounce': 28.35,\n  'lb': 453.6,\n  'pound': 453.6,\n  'mg': 0.001,\n  'milligram': 0.001\n};\n\n// Common ingredient densities (grams per ml) for volume to weight conversion\nconst densities: Record<string, number> = {\n  // Liquids\n  'water': 1.0,\n  'milk': 1.03,\n  'cream': 1.01,\n  'oil': 0.92,\n  'olive oil': 0.92,\n  'vegetable oil': 0.92,\n  'vinegar': 1.01,\n  'honey': 1.42,\n  'syrup': 1.33,\n  \n  // Flours and powders\n  'flour': 0.59,\n  'all-purpose flour': 0.59,\n  'bread flour': 0.59,\n  'cake flour': 0.59,\n  'sugar': 0.85,\n  'white sugar': 0.85,\n  'brown sugar': 0.8,\n  'powdered sugar': 0.6,\n  'cocoa powder': 0.4,\n  'baking powder': 0.6,\n  'baking soda': 0.87,\n  'salt': 1.2,\n  'cornstarch': 0.6,\n  \n  // Nuts and seeds\n  'almonds': 0.6,\n  'walnuts': 0.65,\n  'pecans': 0.7,\n  'peanuts': 0.6,\n  'sesame seeds': 0.6,\n  'sunflower seeds': 0.5,\n  \n  // Dairy\n  'butter': 0.91,\n  'cheese': 1.1,\n  'cream cheese': 1.0,\n  'yogurt': 1.03,\n  \n  // Default density for unknown ingredients\n  'default': 0.8\n};\n\n/**\n * Get density for an ingredient\n */\nexport function getIngredientDensity(ingredientName: string): number {\n  if (!ingredientName) return densities.default;\n  \n  const lowerIngredient = ingredientName.toLowerCase();\n  \n  // Check for exact matches first\n  if (densities[lowerIngredient]) {\n    return densities[lowerIngredient];\n  }\n  \n  // Check for partial matches\n  for (const [key, density] of Object.entries(densities)) {\n    if (lowerIngredient.includes(key) || key.includes(lowerIngredient)) {\n      return density;\n    }\n  }\n  \n  return densities.default;\n}\n\n/**\n * Check if a unit is a volume unit\n */\nexport function isVolumeUnit(unit: string): boolean {\n  const normalizedUnit = unit.toLowerCase().trim();\n  return normalizedUnit in volumeConversions;\n}\n\n/**\n * Check if a unit is a weight unit\n */\nexport function isWeightUnit(unit: string): boolean {\n  const normalizedUnit = unit.toLowerCase().trim();\n  return normalizedUnit in weightConversions;\n}\n\n/**\n * Convert between units (volume to volume, weight to weight, or volume to weight)\n */\nexport function convertUnit(\n  value: number, \n  fromUnit: string, \n  toUnit: string, \n  ingredientName?: string\n): ConversionResult {\n  const from = fromUnit.toLowerCase().trim();\n  const to = toUnit.toLowerCase().trim();\n  \n  // If same unit, return original value\n  if (from === to) {\n    return {\n      convertedValue: value,\n      convertedUnit: toUnit,\n      originalValue: value,\n      originalUnit: fromUnit,\n      conversionFactor: 1\n    };\n  }\n  \n  const isFromVolume = isVolumeUnit(from);\n  const isToVolume = isVolumeUnit(to);\n  const isFromWeight = isWeightUnit(from);\n  const isToWeight = isWeightUnit(to);\n  \n  let convertedValue: number;\n  let conversionFactor: number;\n  \n  if (isFromVolume && isToVolume) {\n    // Volume to Volume conversion\n    const fromMl = value * volumeConversions[from];\n    convertedValue = fromMl / volumeConversions[to];\n    conversionFactor = volumeConversions[from] / volumeConversions[to];\n  } else if (isFromWeight && isToWeight) {\n    // Weight to Weight conversion\n    const fromGrams = value * weightConversions[from];\n    convertedValue = fromGrams / weightConversions[to];\n    conversionFactor = weightConversions[from] / weightConversions[to];\n  } else if (isFromVolume && isToWeight) {\n    // Volume to Weight conversion\n    const density = getIngredientDensity(ingredientName || '');\n    const fromMl = value * volumeConversions[from];\n    const grams = fromMl * density;\n    convertedValue = grams / weightConversions[to];\n    conversionFactor = (volumeConversions[from] * density) / weightConversions[to];\n  } else if (isFromWeight && isToVolume) {\n    // Weight to Volume conversion\n    const density = getIngredientDensity(ingredientName || '');\n    const fromGrams = value * weightConversions[from];\n    const ml = fromGrams / density;\n    convertedValue = ml / volumeConversions[to];\n    conversionFactor = weightConversions[from] / (density * volumeConversions[to]);\n  } else {\n    // Unknown units - return original value\n    return {\n      convertedValue: value,\n      convertedUnit: toUnit,\n      originalValue: value,\n      originalUnit: fromUnit,\n      conversionFactor: 1\n    };\n  }\n  \n  return {\n    convertedValue,\n    convertedUnit: toUnit,\n    originalValue: value,\n    originalUnit: fromUnit,\n    conversionFactor\n  };\n}\n\n/**\n * Convert ingredient cost from one unit to another\n */\nexport function convertIngredientCost(\n  costPerUnit: number,\n  fromUnit: string,\n  toUnit: string,\n  ingredientName?: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit, ingredientName);\n  return costPerUnit / conversion.conversionFactor;\n}\n\n/**\n * Format quantity with smart unit conversion for display\n */\nexport function formatQuantityWithConversion(\n  quantity: number,\n  unit: string,\n  targetUnit?: string\n): { value: string; unit: string; original?: string } {\n  if (!targetUnit || unit.toLowerCase() === targetUnit.toLowerCase()) {\n    return { value: quantity.toFixed(2), unit };\n  }\n  \n  const conversion = convertUnit(quantity, unit, targetUnit);\n  \n  return {\n    value: conversion.convertedValue.toFixed(2),\n    unit: targetUnit,\n    original: `${quantity} ${unit}`\n  };\n}\n\n/**\n * Get all available units\n */\nexport function getAllUnits(): { volume: string[]; weight: string[] } {\n  return {\n    volume: Object.keys(volumeConversions),\n    weight: Object.keys(weightConversions)\n  };\n}\n\n/**\n * Get conversion factor between two units\n */\nexport function getConversionFactor(\n  fromUnit: string,\n  toUnit: string,\n  ingredientName?: string\n): number {\n  const conversion = convertUnit(1, fromUnit, toUnit, ingredientName);\n  return conversion.conversionFactor;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/lib/text-utils.ts"],"sourcesContent":["/**\n * Text utility functions for consistent formatting across the webapp\n */\n\n/**\n * Converts text to proper case with cooking-specific rules\n * Handles common cooking terms and maintains professional formatting\n * \n * @param text - The text to format\n * @returns Properly formatted text\n * \n * @example\n * toProperCase('fresh tomatoes and herbs') // 'Fresh Tomatoes and Herbs'\n * toProperCase('salt and pepper') // 'Salt and Pepper'\n * toProperCase('olive oil') // 'Olive Oil'\n */\nexport function toProperCase(text: string | null | undefined): string {\n  if (!text) return '';\n  \n  // Split by spaces and capitalize each word\n  return text\n    .split(' ')\n    .map(word => {\n      // Handle special cases for common cooking terms\n      const lowerWord = word.toLowerCase();\n      if (lowerWord === 'and' || lowerWord === 'or' || lowerWord === 'the' || \n          lowerWord === 'of' || lowerWord === 'in' || lowerWord === 'with' ||\n          lowerWord === 'for' || lowerWord === 'to' || lowerWord === 'from') {\n        return lowerWord;\n      }\n      // Capitalize first letter of each word\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    })\n    .join(' ');\n}\n\n/**\n * Converts text to title case (all words capitalized)\n * Useful for names, titles, and formal text\n * \n * @param text - The text to format\n * @returns Title case formatted text\n * \n * @example\n * toTitleCase('john smith') // 'John Smith'\n * toTitleCase('recipe book') // 'Recipe Book'\n */\nexport function toTitleCase(text: string | null | undefined): string {\n  if (!text) return '';\n  \n  return text\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\n/**\n * Converts text to sentence case (first word capitalized)\n * Useful for descriptions and general text\n * \n * @param text - The text to format\n * @returns Sentence case formatted text\n * \n * @example\n * toSentenceCase('this is a description') // 'This is a description'\n */\nexport function toSentenceCase(text: string | null | undefined): string {\n  if (!text) return '';\n  \n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n}\n\n/**\n * Formats ingredient names with proper casing\n * Specialized for cooking ingredients with common terms\n * \n * @param ingredientName - The ingredient name to format\n * @returns Properly formatted ingredient name\n */\nexport function formatIngredientName(ingredientName: string | null | undefined): string {\n  return toProperCase(ingredientName);\n}\n\n/**\n * Formats recipe names with proper casing\n * Specialized for recipe titles\n * \n * @param recipeName - The recipe name to format\n * @returns Properly formatted recipe name\n */\nexport function formatRecipeName(recipeName: string | null | undefined): string {\n  return toProperCase(recipeName);\n}\n\n/**\n * Formats brand names with proper casing\n * \n * @param brandName - The brand name to format\n * @returns Properly formatted brand name\n */\nexport function formatBrandName(brandName: string | null | undefined): string {\n  return toProperCase(brandName);\n}\n\n/**\n * Formats supplier names with proper casing\n * \n * @param supplierName - The supplier name to format\n * @returns Properly formatted supplier name\n */\nexport function formatSupplierName(supplierName: string | null | undefined): string {\n  return toProperCase(supplierName);\n}\n\n/**\n * Formats storage location names with proper casing\n * \n * @param locationName - The storage location to format\n * @returns Properly formatted storage location\n */\nexport function formatStorageLocation(locationName: string | null | undefined): string {\n  return toProperCase(locationName);\n}\n\n/**\n * Formats dish names with proper casing\n * \n * @param dishName - The dish name to format\n * @returns Properly formatted dish name\n */\nexport function formatDishName(dishName: string | null | undefined): string {\n  return toProperCase(dishName);\n}\n\n/**\n * Formats any general text input with proper casing\n * Default formatter for most text inputs\n * \n * @param text - The text to format\n * @returns Properly formatted text\n */\nexport function formatTextInput(text: string | null | undefined): string {\n  return toProperCase(text);\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;;;;;;;;;CAWC;;;;;;;;;;;;AACM,SAAS,aAAa,IAA+B;IAC1D,IAAI,CAAC,MAAM,OAAO;IAElB,2CAA2C;IAC3C,OAAO,KACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAA;QACH,gDAAgD;QAChD,MAAM,YAAY,KAAK,WAAW;QAClC,IAAI,cAAc,SAAS,cAAc,QAAQ,cAAc,SAC3D,cAAc,QAAQ,cAAc,QAAQ,cAAc,UAC1D,cAAc,SAAS,cAAc,QAAQ,cAAc,QAAQ;YACrE,OAAO;QACT;QACA,uCAAuC;QACvC,OAAO,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW;IACjE,GACC,IAAI,CAAC;AACV;AAaO,SAAS,YAAY,IAA+B;IACzD,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW,IACpE,IAAI,CAAC;AACV;AAYO,SAAS,eAAe,IAA+B;IAC5D,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,GAAG,WAAW;AACjE;AASO,SAAS,qBAAqB,cAAyC;IAC5E,OAAO,aAAa;AACtB;AASO,SAAS,iBAAiB,UAAqC;IACpE,OAAO,aAAa;AACtB;AAQO,SAAS,gBAAgB,SAAoC;IAClE,OAAO,aAAa;AACtB;AAQO,SAAS,mBAAmB,YAAuC;IACxE,OAAO,aAAa;AACtB;AAQO,SAAS,sBAAsB,YAAuC;IAC3E,OAAO,aAAa;AACtB;AAQO,SAAS,eAAe,QAAmC;IAChE,OAAO,aAAa;AACtB;AASO,SAAS,gBAAgB,IAA+B;IAC7D,OAAO,aAAa;AACtB","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/recipes/page.tsx"],"sourcesContent":["'use client';\n\nimport { supabase } from '@/lib/supabase';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport { convertIngredientCost } from '@/lib/unit-conversion';\nimport { formatRecipeName } from '@/lib/text-utils';\n\ninterface Recipe {\n  id: string;\n  name: string;\n  yield: number;\n  yield_unit: string;\n  instructions?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface RecipeIngredient {\n  id: string;\n  recipe_id: string;\n  ingredient_id: string;\n  quantity: number;\n  unit: string;\n  ingredients: {\n    id: string;\n    ingredient_name: string;\n    cost_per_unit: number;\n    unit: string;\n    trim_peel_waste_percentage: number;\n    yield_percentage: number;\n  };\n}\n\ninterface COGSCalculation {\n  recipeId: string;\n  ingredientId: string;\n  ingredientName: string;\n  quantity: number;\n  unit: string;\n  costPerUnit: number;\n  totalCost: number;\n  wasteAdjustedCost: number;\n  yieldAdjustedCost: number;\n}\n\nexport default function RecipesPage() {\n  const router = useRouter();\n  const [recipes, setRecipes] = useState<Recipe[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Use centralized formatting utility\n  const capitalizeRecipeName = formatRecipeName;\n\n  // Calculate recommended selling price for a recipe\n  const calculateRecommendedPrice = (recipe: Recipe, ingredients: RecipeIngredient[]) => {\n    if (!ingredients || ingredients.length === 0) return null;\n\n    // Calculate total cost per serving\n    let totalCostPerServing = 0;\n    \n    ingredients.forEach(ri => {\n      const ingredient = ri.ingredients;\n      const quantity = ri.quantity;\n      // Convert cost to the unit being used in the recipe\n      const baseCostPerUnit = ingredient.cost_per_unit;\n      const costPerUnit = convertIngredientCost(\n        baseCostPerUnit,\n        ingredient.unit || 'g',\n        ri.unit || 'g',\n        ingredient.ingredient_name\n      );\n      const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n      const yieldPercent = ingredient.yield_percentage || 100;\n      \n      // Calculate cost with waste and yield adjustments\n      const baseCost = quantity * costPerUnit;\n      const wasteAdjustedCost = baseCost * (1 + wastePercent / 100);\n      const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n      \n      totalCostPerServing += yieldAdjustedCost;\n    });\n\n    // Apply 30% food cost target (industry standard)\n    const targetFoodCostPercent = 30;\n    const recommendedPrice = totalCostPerServing / (targetFoodCostPercent / 100);\n    \n    // Apply charm pricing (round to nearest .95)\n    const charmPrice = Math.floor(recommendedPrice) + 0.95;\n    \n    return {\n      costPerServing: totalCostPerServing,\n      recommendedPrice: charmPrice,\n      foodCostPercent: (totalCostPerServing / charmPrice) * 100\n    };\n  };\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newRecipe, setNewRecipe] = useState<Partial<Recipe>>({\n    name: '',\n    yield: 1,\n    yield_unit: 'servings',\n    instructions: '',\n  });\n  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);\n  const [recipeIngredients, setRecipeIngredients] = useState<RecipeIngredient[]>([]);\n  const [showPreview, setShowPreview] = useState(false);\n  const [aiInstructions, setAiInstructions] = useState<string>('');\n  const [generatingInstructions, setGeneratingInstructions] = useState(false);\n  const [previewYield, setPreviewYield] = useState<number>(1);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [recipeToDelete, setRecipeToDelete] = useState<Recipe | null>(null);\n  const [selectedRecipes, setSelectedRecipes] = useState<Set<string>>(new Set());\n  const [showBulkDeleteConfirm, setShowBulkDeleteConfirm] = useState(false);\n  const [recipePrices, setRecipePrices] = useState<Record<string, {costPerServing: number, recommendedPrice: number, foodCostPercent: number}>>({});\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  // Listen for ingredient price changes and update recipe prices automatically\n  useEffect(() => {\n    if (recipes.length === 0) return;\n\n    // Subscribe to ingredient table changes\n    const subscription = supabase\n      .channel('ingredient-price-changes')\n      .on('postgres_changes', \n        { \n          event: 'UPDATE', \n          schema: 'public', \n          table: 'ingredients',\n          filter: 'cost_per_unit=neq.null' // Only trigger on cost_per_unit changes\n        }, \n        (payload) => {\n          console.log('Ingredient price changed:', payload);\n          // Refresh recipe prices when any ingredient price changes\n          refreshRecipePrices();\n        }\n      )\n      .subscribe();\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [recipes]);\n\n  const fetchRecipes = async () => {\n    try {\n      const { data: recipesData, error: recipesError } = await supabase\n        .from('recipes')\n        .select('*')\n        .order('name');\n\n      if (recipesError) {\n        setError(recipesError.message);\n      } else {\n        setRecipes(recipesData || []);\n        \n        // Calculate prices for each recipe\n        await calculateAllRecipePrices(recipesData || []);\n      }\n    } catch (err) {\n      setError('Failed to fetch recipes');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Calculate prices for all recipes\n  const calculateAllRecipePrices = async (recipesData: Recipe[]) => {\n    const prices: Record<string, {costPerServing: number, recommendedPrice: number, foodCostPercent: number}> = {};\n    \n    for (const recipe of recipesData) {\n      try {\n        const ingredients = await fetchRecipeIngredients(recipe.id);\n        const priceData = calculateRecommendedPrice(recipe, ingredients);\n        if (priceData) {\n          prices[recipe.id] = priceData;\n        }\n      } catch (err) {\n        console.log(`Failed to calculate price for recipe ${recipe.id}:`, err);\n      }\n    }\n    \n    setRecipePrices(prices);\n  };\n\n  // Refresh recipe prices (for auto-updates)\n  const refreshRecipePrices = async () => {\n    if (recipes.length === 0) return;\n    \n    try {\n      await calculateAllRecipePrices(recipes);\n    } catch (err) {\n      console.log('Failed to refresh recipe prices:', err);\n    }\n  };\n\n  const fetchRecipeIngredients = async (recipeId: string) => {\n    try {\n      const { data: ingredientsData, error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .select(`\n          id,\n          recipe_id,\n          ingredient_id,\n          quantity,\n          unit,\n          ingredients (\n            id,\n            ingredient_name,\n            cost_per_unit,\n            unit,\n            trim_peel_waste_percentage,\n            yield_percentage\n          )\n        `)\n        .eq('recipe_id', recipeId);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return [];\n      }\n\n      return (ingredientsData || []) as unknown as RecipeIngredient[];\n    } catch (err) {\n      setError('Failed to fetch recipe ingredients');\n      return [];\n    }\n  };\n\n  const handleAddRecipe = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const { error } = await supabase\n        .from('recipes')\n        .insert([newRecipe]);\n\n      if (error) {\n        setError(error.message);\n      } else {\n        setShowAddForm(false);\n        setNewRecipe({\n          name: '',\n          yield: 1,\n          yield_unit: 'servings',\n          instructions: '',\n        });\n        fetchRecipes();\n      }\n    } catch (err) {\n      setError('Failed to add recipe');\n    }\n  };\n\n  const handleEditRecipe = async (recipe: Recipe) => {\n    try {\n      // Fetch recipe ingredients\n      const ingredients = await fetchRecipeIngredients(recipe.id);\n      \n      // Convert to COGSCalculation format\n      const calculations: COGSCalculation[] = ingredients.map(ri => {\n        const ingredient = ri.ingredients;\n        const quantity = ri.quantity;\n        const costPerUnit = ingredient.cost_per_unit;\n        const totalCost = quantity * costPerUnit;\n\n        // Apply waste and yield adjustments\n        const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n        const yieldPercent = ingredient.yield_percentage || 100;\n        const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n        const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n        return {\n          recipeId: recipe.id,\n          ingredientId: ingredient.id,\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit,\n          totalCost: totalCost,\n          wasteAdjustedCost: wasteAdjustedCost,\n          yieldAdjustedCost: yieldAdjustedCost\n        };\n      });\n\n      // Store data in sessionStorage for COGS page\n      sessionStorage.setItem('editingRecipe', JSON.stringify({\n        recipe,\n        calculations,\n        dishName: recipe.name,\n        dishPortions: recipe.yield,\n        dishNameLocked: true\n      }));\n\n      // Navigate to COGS page\n      router.push('/webapp/cogs');\n    } catch (err) {\n      setError('Failed to load recipe for editing');\n    }\n  };\n\n  const handleEditFromPreview = () => {\n    if (!selectedRecipe || !recipeIngredients.length) {\n      setError('No recipe data available for editing');\n      return;\n    }\n\n    try {\n      console.log('🔍 DEBUG: Recipe ingredients from preview:', recipeIngredients);\n      console.log('🔍 DEBUG: Selected recipe:', selectedRecipe);\n\n      // Convert already loaded recipe ingredients to COGSCalculation format\n      const calculations: COGSCalculation[] = recipeIngredients.map(ri => {\n        const ingredient = ri.ingredients;\n        const quantity = ri.quantity;\n        const costPerUnit = ingredient.cost_per_unit;\n        const totalCost = quantity * costPerUnit;\n\n        // Apply waste and yield adjustments\n        const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n        const yieldPercent = ingredient.yield_percentage || 100;\n        const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n        const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n        console.log('🔍 DEBUG: Converting ingredient:', {\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit\n        });\n\n        return {\n          recipeId: selectedRecipe.id,\n          ingredientId: ingredient.id,\n          ingredientName: ingredient.ingredient_name,\n          quantity: quantity,\n          unit: ri.unit,\n          costPerUnit: costPerUnit,\n          totalCost: totalCost,\n          wasteAdjustedCost: wasteAdjustedCost,\n          yieldAdjustedCost: yieldAdjustedCost\n        };\n      });\n\n      console.log('🔍 DEBUG: Final calculations array:', calculations);\n\n      // Store data in sessionStorage for COGS page\n      sessionStorage.setItem('editingRecipe', JSON.stringify({\n        recipe: selectedRecipe,\n        recipeId: selectedRecipe.id, // Pass the specific recipe ID\n        calculations,\n        dishName: selectedRecipe.name,\n        dishPortions: selectedRecipe.yield,\n        dishNameLocked: true\n      }));\n\n      // Close the preview modal\n      setShowPreview(false);\n\n      // Navigate to COGS page\n      router.push('/webapp/cogs');\n    } catch (err) {\n      console.error('❌ Error in handleEditFromPreview:', err);\n      setError('Failed to load recipe for editing');\n    }\n  };\n\n  const handlePreviewRecipe = async (recipe: Recipe) => {\n    try {\n      console.log('🔍 DEBUG: Fetching ingredients for recipe:', recipe.name, recipe.id);\n      const ingredients = await fetchRecipeIngredients(recipe.id);\n      console.log('🔍 DEBUG: Fetched ingredients:', ingredients);\n      setSelectedRecipe(recipe);\n      setRecipeIngredients(ingredients);\n      setPreviewYield(recipe.yield); // Initialize with original yield\n      setShowPreview(true);\n      \n      // Generate AI instructions\n      await generateAIInstructions(recipe, ingredients);\n    } catch (err) {\n      console.error('❌ Error in handlePreviewRecipe:', err);\n      setError('Failed to load recipe preview');\n    }\n  };\n\n  const calculateTotalCost = () => {\n    return recipeIngredients.reduce((total, ri) => {\n      const ingredient = ri.ingredients;\n      const quantity = ri.quantity;\n      const costPerUnit = ingredient.cost_per_unit;\n      const totalCost = quantity * costPerUnit;\n\n      // Apply waste and yield adjustments\n      const wastePercent = ingredient.trim_peel_waste_percentage || 0;\n      const yieldPercent = ingredient.yield_percentage || 100;\n      const wasteAdjustedCost = totalCost * (1 + wastePercent / 100);\n      const yieldAdjustedCost = wasteAdjustedCost / (yieldPercent / 100);\n\n      return total + yieldAdjustedCost;\n    }, 0);\n  };\n\n  const calculateAdjustedQuantity = (originalQuantity: number) => {\n    if (!selectedRecipe) return originalQuantity;\n    const multiplier = previewYield / selectedRecipe.yield;\n    return originalQuantity * multiplier;\n  };\n\n  const formatQuantity = (quantity: number, unit: string) => {\n    const adjustedQuantity = calculateAdjustedQuantity(quantity);\n    \n    // Smart conversions for common units\n    if (unit.toLowerCase() === 'gm' || unit.toLowerCase() === 'g' || unit.toLowerCase() === 'gram') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'kg',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    if (unit.toLowerCase() === 'ml' || unit.toLowerCase() === 'milliliter') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'L',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    if (unit.toLowerCase() === 'mg' || unit.toLowerCase() === 'milligram') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'g',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    if (unit.toLowerCase() === 'kg' || unit.toLowerCase() === 'kilogram') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'tonne',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    if (unit.toLowerCase() === 'l' || unit.toLowerCase() === 'liter' || unit.toLowerCase() === 'litre') {\n      if (adjustedQuantity >= 1000) {\n        return {\n          value: (adjustedQuantity / 1000).toFixed(1),\n          unit: 'kL',\n          original: `${adjustedQuantity.toFixed(1)} ${unit}`\n        };\n      }\n    }\n    \n    // For smaller quantities, show more precision\n    if (adjustedQuantity < 1) {\n      return {\n        value: adjustedQuantity.toFixed(2),\n        unit: unit,\n        original: `${adjustedQuantity.toFixed(2)} ${unit}`\n      };\n    }\n    \n    // Default formatting\n    return {\n      value: adjustedQuantity.toFixed(1),\n      unit: unit,\n      original: `${adjustedQuantity.toFixed(1)} ${unit}`\n    };\n  };\n\n  const generateAIInstructions = async (recipe: Recipe, ingredients: RecipeIngredient[]) => {\n    console.log('🤖 DEBUG: Generating AI instructions for:', recipe.name);\n    console.log('🤖 DEBUG: Ingredients:', ingredients);\n    setGeneratingInstructions(true);\n    try {\n      // Analyze ingredients to determine cooking method\n      const ingredientNames = ingredients.map(ri => ri.ingredients.ingredient_name.toLowerCase());\n      console.log('🤖 DEBUG: Ingredient names:', ingredientNames);\n      const hasProtein = ingredientNames.some(name => \n        name.includes('beef') || name.includes('chicken') || name.includes('pork') || \n        name.includes('fish') || name.includes('lamb') || name.includes('mince')\n      );\n      const hasVegetables = ingredientNames.some(name => \n        name.includes('carrot') || name.includes('onion') || name.includes('garlic') ||\n        name.includes('tomato') || name.includes('pepper') || name.includes('celery')\n      );\n      const hasDairy = ingredientNames.some(name => \n        name.includes('cheese') || name.includes('milk') || name.includes('cream') ||\n        name.includes('butter') || name.includes('yogurt')\n      );\n      const hasGrains = ingredientNames.some(name => \n        name.includes('rice') || name.includes('pasta') || name.includes('bread') ||\n        name.includes('flour') || name.includes('quinoa')\n      );\n\n      // Determine recipe type and cooking method\n      let recipeType = 'general';\n      let cookingMethod = 'stovetop';\n      let primaryTechnique = 'sautéing';\n\n      if (recipe.name.toLowerCase().includes('burger') || recipe.name.toLowerCase().includes('patty')) {\n        recipeType = 'burger';\n        cookingMethod = 'grill/pan';\n        primaryTechnique = 'grilling/pan-frying';\n      } else if (recipe.name.toLowerCase().includes('soup') || recipe.name.toLowerCase().includes('stew')) {\n        recipeType = 'soup';\n        cookingMethod = 'stovetop';\n        primaryTechnique = 'simmering';\n      } else if (recipe.name.toLowerCase().includes('salad')) {\n        recipeType = 'salad';\n        cookingMethod = 'cold prep';\n        primaryTechnique = 'mixing';\n      } else if (recipe.name.toLowerCase().includes('pasta') || recipe.name.toLowerCase().includes('noodle')) {\n        recipeType = 'pasta';\n        cookingMethod = 'stovetop';\n        primaryTechnique = 'boiling/sautéing';\n      }\n\n      // Generate specific instructions based on recipe analysis\n      let generatedInstructions = '';\n\n      if (recipeType === 'burger') {\n        generatedInstructions = `**Burger Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and equipment\n2. Prepare work station with cutting board, knives, and mixing bowls\n3. Preheat ${cookingMethod === 'grill/pan' ? 'grill or large skillet' : 'cooking surface'} to medium-high heat\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('mince')\n)?.ingredients.ingredient_name || 'main protein'} - season and form into patties` : ''}\n${hasVegetables ? `2. Prep vegetables: Wash, peel, and chop all vegetables as needed` : ''}\n${hasDairy ? `3. Prepare dairy: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('cheese')\n)?.ingredients.ingredient_name || 'cheese'} - slice or grate as needed` : ''}\n\n**Cooking Method:**\n1. Heat cooking surface to medium-high (375°F/190°C)\n2. ${hasProtein ? 'Cook protein patties for 4-5 minutes per side for medium doneness' : 'Cook main ingredients'}\n3. ${hasVegetables ? 'Sauté vegetables until tender-crisp' : 'Cook vegetables as needed'}\n4. ${hasDairy ? 'Add cheese in final 1-2 minutes of cooking' : 'Add finishing ingredients'}\n\n**Assembly & Service:**\n1. Toast buns if desired\n2. Layer ingredients: protein, vegetables, condiments\n3. Serve immediately while hot\n4. Yield: ${recipe.yield} ${recipe.yield_unit}\n\n**Professional Tips:**\n- Maintain consistent heat for even cooking\n- Don't press patties while cooking\n- Let meat rest 2-3 minutes before serving\n- Keep ingredients warm during assembly`;\n\n      } else if (recipeType === 'soup') {\n        generatedInstructions = `**Soup Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and large pot\n2. Prepare cutting board and sharp knives\n3. Have stock or broth ready at room temperature\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: Cut ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('chicken')\n)?.ingredients.ingredient_name || 'protein'} into bite-sized pieces` : ''}\n${hasVegetables ? `2. Prep vegetables: Dice aromatics (onions, carrots, celery) uniformly` : ''}\n${hasGrains ? `3. Prepare grains: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('rice') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('pasta')\n)?.ingredients.ingredient_name || 'grains'} - rinse if needed` : ''}\n\n**Cooking Method:**\n1. Heat large pot over medium heat\n2. ${hasProtein ? 'Sear protein until browned, remove and set aside' : 'Start with aromatics'}\n3. ${hasVegetables ? 'Sauté vegetables until softened (5-7 minutes)' : 'Cook base ingredients'}\n4. Add liquid and bring to boil, then reduce to simmer\n5. ${hasProtein ? 'Return protein to pot' : 'Add main ingredients'}\n6. Simmer until all ingredients are tender (20-30 minutes)\n\n**Final Steps:**\n1. Taste and adjust seasoning\n2. Skim any excess fat from surface\n3. Serve hot with garnishes\n4. Yield: ${recipe.yield} ${recipe.yield_unit}\n\n**Professional Tips:**\n- Build layers of flavor (sauté aromatics first)\n- Simmer gently to avoid breaking ingredients\n- Taste frequently and adjust seasoning\n- Cool quickly if storing`;\n\n      } else {\n        // General recipe instructions\n        generatedInstructions = `**${recipe.name} Preparation:**\n\n**Mise en Place:**\n1. Gather all ingredients and equipment\n2. Prepare work station with cutting board and knives\n3. Preheat cooking equipment as needed\n\n**Ingredient Prep:**\n${hasProtein ? `1. Prepare protein: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('beef') || \n  ri.ingredients.ingredient_name.toLowerCase().includes('chicken') ||\n  ri.ingredients.ingredient_name.toLowerCase().includes('mince')\n)?.ingredients.ingredient_name || 'main protein'} - cut, season, or prepare as needed` : ''}\n${hasVegetables ? `2. Prep vegetables: Wash, peel, and cut vegetables uniformly` : ''}\n${hasDairy ? `3. Prepare dairy: ${ingredients.find(ri => \n  ri.ingredients.ingredient_name.toLowerCase().includes('cheese') ||\n  ri.ingredients.ingredient_name.toLowerCase().includes('milk')\n)?.ingredients.ingredient_name || 'dairy products'} - prepare as needed` : ''}\n\n**Cooking Method:**\n1. Heat cooking surface to appropriate temperature\n2. ${hasProtein ? 'Cook protein first, then remove and set aside' : 'Start with base ingredients'}\n3. ${hasVegetables ? 'Cook vegetables until desired doneness' : 'Cook main ingredients'}\n4. ${hasProtein ? 'Return protein to pan' : 'Combine all ingredients'}\n5. Season and finish cooking\n\n**Final Steps:**\n1. Taste and adjust seasoning\n2. Plate attractively for ${recipe.yield} ${recipe.yield_unit}\n3. Serve immediately while hot\n\n**Professional Tips:**\n- Maintain consistent heat throughout cooking\n- Use proper knife skills for uniform cuts\n- Keep work area clean and organized\n- Taste frequently and adjust seasoning`;\n      }\n\n      console.log('🤖 DEBUG: Generated instructions:', generatedInstructions);\n      setAiInstructions(generatedInstructions);\n      console.log('🤖 DEBUG: AI instructions state set');\n    } catch (err) {\n      console.error('🤖 DEBUG: Error generating instructions:', err);\n      setError('Failed to generate cooking instructions');\n    } finally {\n      setGeneratingInstructions(false);\n    }\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleDeleteRecipe = (recipe: Recipe) => {\n    setRecipeToDelete(recipe);\n    setShowDeleteConfirm(true);\n  };\n\n  const confirmDeleteRecipe = async () => {\n    if (!recipeToDelete) return;\n\n    try {\n      // First delete all recipe ingredients\n      const { error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .delete()\n        .eq('recipe_id', recipeToDelete.id);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return;\n      }\n\n      // Then delete the recipe\n      const { error: recipeError } = await supabase\n        .from('recipes')\n        .delete()\n        .eq('id', recipeToDelete.id);\n\n      if (recipeError) {\n        setError(recipeError.message);\n        return;\n      }\n\n      // Refresh the recipes list\n      await fetchRecipes();\n      \n      // Show success message\n      setSuccessMessage(`Recipe \"${capitalizeRecipeName(recipeToDelete.name)}\" deleted successfully!`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n\n      // Close the confirmation modal\n      setShowDeleteConfirm(false);\n      setRecipeToDelete(null);\n\n    } catch (err) {\n      setError('Failed to delete recipe');\n    }\n  };\n\n  const cancelDeleteRecipe = () => {\n    setShowDeleteConfirm(false);\n    setRecipeToDelete(null);\n  };\n\n  // Multi-selection functions\n  const handleSelectRecipe = (recipeId: string) => {\n    setSelectedRecipes(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(recipeId)) {\n        newSet.delete(recipeId);\n      } else {\n        newSet.add(recipeId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectedRecipes.size === recipes.length) {\n      setSelectedRecipes(new Set());\n    } else {\n      setSelectedRecipes(new Set(recipes.map(r => r.id)));\n    }\n  };\n\n  const handleBulkDelete = () => {\n    if (selectedRecipes.size === 0) return;\n    setShowBulkDeleteConfirm(true);\n  };\n\n  const confirmBulkDelete = async () => {\n    if (selectedRecipes.size === 0) return;\n\n    try {\n      const selectedRecipeIds = Array.from(selectedRecipes);\n      \n      // Delete all recipe ingredients for selected recipes\n      const { error: ingredientsError } = await supabase\n        .from('recipe_ingredients')\n        .delete()\n        .in('recipe_id', selectedRecipeIds);\n\n      if (ingredientsError) {\n        setError(ingredientsError.message);\n        return;\n      }\n\n      // Delete all selected recipes\n      const { error: recipesError } = await supabase\n        .from('recipes')\n        .delete()\n        .in('id', selectedRecipeIds);\n\n      if (recipesError) {\n        setError(recipesError.message);\n        return;\n      }\n\n      // Refresh the recipes list\n      await fetchRecipes();\n      \n      // Show success message\n      setSuccessMessage(`${selectedRecipes.size} recipe${selectedRecipes.size > 1 ? 's' : ''} deleted successfully!`);\n      setTimeout(() => setSuccessMessage(null), 3000);\n\n      // Clear selection and close modal\n      setSelectedRecipes(new Set());\n      setShowBulkDeleteConfirm(false);\n\n    } catch (err) {\n      setError('Failed to delete recipes');\n    }\n  };\n\n  const cancelBulkDelete = () => {\n    setShowBulkDeleteConfirm(false);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/2 mb-8\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n                  <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-3/4 mb-3\"></div>\n                  <div className=\"h-3 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Image\n              src=\"/images/prepflow-logo.png\"\n              alt=\"PrepFlow Logo\"\n              width={40}\n              height={40}\n              className=\"rounded-lg\"\n              priority\n            />\n            <h1 className=\"text-4xl font-bold text-white\">\n            📖 Recipe Book\n          </h1>\n          </div>\n          <p className=\"text-gray-400\">Manage your saved recipes and create new ones</p>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-wrap gap-3 mb-8\">\n          <button\n            onClick={() => setShowAddForm(!showAddForm)}\n            className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-white px-6 py-3 rounded-2xl hover:from-[#29E7CD]/80 hover:to-[#D925C7]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            {showAddForm ? 'Cancel' : '+ Add Manual Recipe'}\n          </button>\n          <a\n            href=\"/webapp/cogs\"\n            className=\"bg-gradient-to-r from-[#3B82F6] to-[#29E7CD] text-white px-6 py-3 rounded-2xl hover:from-[#3B82F6]/80 hover:to-[#29E7CD]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            Create Recipe from COGS\n          </a>\n          <button\n            onClick={() => {\n              setLoading(true);\n              fetchRecipes();\n            }}\n            className=\"bg-gradient-to-r from-[#D925C7] to-[#3B82F6] text-white px-6 py-3 rounded-2xl hover:from-[#D925C7]/80 hover:to-[#3B82F6]/80 transition-all duration-200 shadow-lg hover:shadow-xl font-medium\"\n          >\n            🔄 Refresh Recipes\n          </button>\n        </div>\n\n      {/* Recipe Book Description */}\n      <div className=\"bg-gradient-to-br from-[#29E7CD]/10 to-[#D925C7]/10 border border-[#29E7CD]/30 p-4 sm:p-6 rounded-xl mb-6\">\n        <h2 className=\"text-lg font-semibold text-white mb-2\">How Recipe Book Works</h2>\n        <div className=\"grid md:grid-cols-2 gap-4 text-sm text-gray-300\">\n            <div>\n              <h3 className=\"font-medium text-[#3B82F6] mb-2\">✍️ Manual Recipes</h3>\n              <p>Add recipes manually with instructions and portion counts. Perfect for documenting cooking methods and procedures.</p>\n            </div>\n          <div>\n            <h3 className=\"font-medium text-[#29E7CD] mb-2\">📊 From COGS Calculations</h3>\n            <p>Create cost calculations in the COGS screen, then save them as recipes. These recipes include all ingredient costs and portion calculations.</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Bulk Actions Bar */}\n        {selectedRecipes.size > 0 && (\n          <div className=\"bg-gradient-to-r from-[#ef4444]/10 to-[#dc2626]/10 border border-[#ef4444]/30 p-4 rounded-xl mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-3\">\n                  <span className=\"text-white font-bold text-sm\">{selectedRecipes.size}</span>\n          </div>\n          <div>\n                  <h3 className=\"text-white font-semibold\">\n                    {selectedRecipes.size} recipe{selectedRecipes.size > 1 ? 's' : ''} selected\n                  </h3>\n                  <p className=\"text-gray-400 text-sm\">Choose an action for the selected recipes</p>\n          </div>\n        </div>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={handleBulkDelete}\n                  className=\"bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-2 rounded-lg hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                >\n                  🗑️ Delete Selected\n                </button>\n                <button\n                  onClick={() => setSelectedRecipes(new Set())}\n                  className=\"bg-[#2a2a2a] text-gray-300 px-4 py-2 rounded-lg hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n                >\n                  Clear Selection\n                </button>\n      </div>\n            </div>\n          </div>\n        )}\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-6\">\n          {error}\n        </div>\n      )}\n\n        {successMessage && (\n          <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-6 flex items-center\">\n            <div className=\"flex items-center\">\n              <svg className=\"w-5 h-5 text-green-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"font-medium\">{successMessage}</span>\n            </div>\n        </div>\n      )}\n\n      {showAddForm && (\n        <div className=\"bg-[#1f1f1f] p-4 sm:p-6 rounded-lg shadow mb-6\">\n          <h2 className=\"text-lg sm:text-xl font-semibold mb-4\">Add New Recipe</h2>\n          <form onSubmit={handleAddRecipe} className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Recipe Name *\n              </label>\n              <input\n                type=\"text\"\n                required\n                value={newRecipe.name}\n                onChange={(e) => setNewRecipe({ ...newRecipe, name: e.target.value })}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n                placeholder=\"e.g., Chicken Stir-fry\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Yield Portions\n              </label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                  value={newRecipe.yield}\n                  onChange={(e) => setNewRecipe({ ...newRecipe, yield: parseInt(e.target.value) })}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Instructions\n              </label>\n              <textarea\n                value={newRecipe.instructions}\n                onChange={(e) => setNewRecipe({ ...newRecipe, instructions: e.target.value })}\n                rows={4}\n                className=\"w-full px-3 py-2 border border-[#2a2a2a] rounded-md focus:outline-none focus:ring-2 focus:ring-[#29E7CD]\"\n                placeholder=\"Step-by-step cooking instructions...\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Add Recipe\n            </button>\n          </form>\n        </div>\n      )}\n\n        {/* Recipes List */}\n      <div className=\"bg-[#1f1f1f] rounded-lg shadow overflow-hidden\">\n          <div className=\"sticky top-0 z-10 bg-[#1f1f1f] px-4 sm:px-6 py-4 border-b border-[#2a2a2a]\">\n            <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-lg font-semibold text-white\">\n            Recipes ({recipes.length})\n          </h2>\n              {selectedRecipes.size > 0 && (\n                <div className=\"flex items-center\">\n                  <div className=\"w-6 h-6 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-2\">\n                    <span className=\"text-white font-bold text-xs\">{selectedRecipes.size}</span>\n                  </div>\n                  <span className=\"text-sm text-gray-300\">\n                    {selectedRecipes.size} selected\n                  </span>\n                </div>\n              )}\n            </div>\n        </div>\n        \n        {/* Mobile Card Layout */}\n        <div className=\"block md:hidden\">\n            <div className=\"divide-y divide-[#2a2a2a]\">\n            {recipes.map((recipe) => (\n                <div key={recipe.id} className=\"p-4 hover:bg-[#2a2a2a]/20 transition-colors\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRecipes.has(recipe.id)}\n                        onChange={() => handleSelectRecipe(recipe.id)}\n                        className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2 mr-3\"\n                      />\n                      <h3 className=\"text-sm font-medium text-white cursor-pointer\" onClick={() => handlePreviewRecipe(recipe)}>\n                    {capitalizeRecipeName(recipe.name)}\n                  </h3>\n                    </div>\n                  <span className=\"text-xs text-gray-500\">\n                    {new Date(recipe.created_at).toLocaleDateString()}\n                  </span>\n                </div>\n                \n                  <div className=\"space-y-1 text-xs text-gray-500 mb-3 ml-7\">\n                  <div>\n                      <span className=\"font-medium\">Recommended Price:</span> \n                      {recipePrices[recipe.id] ? (\n                        <span className=\"text-white font-semibold ml-1\">\n                          ${recipePrices[recipe.id].recommendedPrice.toFixed(2)}\n                        </span>\n                      ) : (\n                        <span className=\"text-gray-500 ml-1\">Calculating...</span>\n                      )}\n                  </div>\n                  {recipePrices[recipe.id] && (\n                    <div>\n                      <span className=\"font-medium\">Food Cost:</span> \n                      <span className=\"text-gray-400 ml-1\">\n                        {recipePrices[recipe.id].foodCostPercent.toFixed(1)}%\n                      </span>\n                    </div>\n                  )}\n                  {recipe.instructions && (\n                    <div>\n                      <span className=\"font-medium\">Instructions:</span>\n                      <p className=\"mt-1 text-gray-400 line-clamp-2\">\n                        {recipe.instructions}\n                      </p>\n                    </div>\n                  )}\n                </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex gap-2 ml-7\">\n                    <button\n                      onClick={() => handleEditRecipe(recipe)}\n                      className=\"flex-1 bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-3 py-2 rounded-lg text-xs font-medium hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200\"\n                    >\n                      ✏️ Edit in COGS\n                    </button>\n                    <button\n                      onClick={() => handleDeleteRecipe(recipe)}\n                      className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-3 py-2 rounded-lg text-xs font-medium hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200\"\n                    >\n                      🗑️ Delete\n                    </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Desktop Table Layout */}\n        <div className=\"hidden md:block overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-[#2a2a2a]\">\n              <thead className=\"sticky top-0 z-10 bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRecipes.size === recipes.length && recipes.length > 0}\n                        onChange={handleSelectAll}\n                        className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                      />\n                      <span className=\"ml-2\">Select</span>\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Name\n                </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    Recommended Price\n                </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Instructions\n                </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                  Created\n                </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\n                    Actions\n                </th>\n              </tr>\n            </thead>\n              <tbody className=\"bg-[#1f1f1f] divide-y divide-[#2a2a2a]\">\n              {recipes.map((recipe) => (\n                  <tr key={recipe.id} className=\"hover:bg-[#2a2a2a]/20 transition-colors\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\" onClick={(e) => e.stopPropagation()}>\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRecipes.has(recipe.id)}\n                        onChange={() => handleSelectRecipe(recipe.id)}\n                        className=\"w-4 h-4 text-[#29E7CD] bg-[#0a0a0a] border-[#2a2a2a] rounded focus:ring-[#29E7CD] focus:ring-2\"\n                      />\n                  </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white cursor-pointer\" onClick={() => handlePreviewRecipe(recipe)}>\n                    {capitalizeRecipeName(recipe.name)}\n                  </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 cursor-pointer\" onClick={() => handlePreviewRecipe(recipe)}>\n                      {recipePrices[recipe.id] ? (\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-white font-semibold\">${recipePrices[recipe.id].recommendedPrice.toFixed(2)}</span>\n                          <span className=\"text-xs text-gray-400\">\n                            {recipePrices[recipe.id].foodCostPercent.toFixed(1)}% food cost\n                          </span>\n                        </div>\n                      ) : (\n                        <span className=\"text-gray-500\">Calculating...</span>\n                      )}\n                  </td>\n                    <td className=\"px-6 py-4 text-sm text-gray-300 cursor-pointer\" onClick={() => handlePreviewRecipe(recipe)}>\n                    {recipe.instructions ? (\n                      <div className=\"max-w-xs truncate\">\n                        {recipe.instructions}\n                      </div>\n                    ) : (\n                      '-'\n                    )}\n                  </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300 cursor-pointer\" onClick={() => handlePreviewRecipe(recipe)}>\n                    {new Date(recipe.created_at).toLocaleDateString()}\n                  </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-300\">\n                      <div className=\"flex gap-2\" onClick={(e) => e.stopPropagation()}>\n                        <button\n                          onClick={() => handleEditRecipe(recipe)}\n                          className=\"bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-3 py-1 rounded-lg text-xs font-medium hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200\"\n                        >\n                          ✏️ Edit\n                        </button>\n                        <button\n                          onClick={() => handleDeleteRecipe(recipe)}\n                          className=\"bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-3 py-1 rounded-lg text-xs font-medium hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200\"\n                        >\n                          🗑️ Delete\n                        </button>\n                      </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {recipes.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-gray-400 text-6xl mb-4\">🍳</div>\n          <h3 className=\"text-lg font-medium text-white mb-2\">No recipes yet</h3>\n          <p className=\"text-gray-500 mb-4\">\n            Start by adding your first recipe to begin managing your kitchen costs.\n          </p>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-4 py-2 rounded-lg hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-colors\"\n          >\n            Add Your First Recipe\n          </button>\n        </div>\n      )}\n\n        {/* Recipe Preview Modal */}\n        {showPreview && selectedRecipe && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              {/* Header */}\n              <div className=\"p-6 border-b border-[#2a2a2a]\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-2xl font-bold text-white mb-2\">{capitalizeRecipeName(selectedRecipe.name)}</h2>\n                    \n                    {/* Yield Adjustment Section */}\n                    <div className=\"flex items-center gap-4 mb-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-gray-400 text-sm\">Original Yield:</span>\n                        <span className=\"text-white font-medium\">{selectedRecipe.yield} {selectedRecipe.yield_unit}</span>\n      </div>\n                      \n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-gray-400 text-sm\">Adjust for:</span>\n                        <div className=\"flex items-center gap-2\">\n                          <button\n                            onClick={() => setPreviewYield(Math.max(1, previewYield - 1))}\n                            className=\"bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white w-8 h-8 rounded-lg flex items-center justify-center text-sm font-medium transition-colors\"\n                          >\n                            −\n                          </button>\n                          <input\n                            type=\"number\"\n                            value={previewYield}\n                            onChange={(e) => setPreviewYield(Math.max(1, parseInt(e.target.value) || 1))}\n                            className=\"bg-[#0a0a0a] border border-[#2a2a2a] text-white text-center w-16 h-8 rounded-lg text-sm font-medium focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                            min=\"1\"\n                          />\n                          <button\n                            onClick={() => setPreviewYield(previewYield + 1)}\n                            className=\"bg-[#2a2a2a] hover:bg-[#3a3a3a] text-white w-8 h-8 rounded-lg flex items-center justify-center text-sm font-medium transition-colors\"\n                          >\n                            +\n                          </button>\n    </div>\n                        <span className=\"text-white font-medium\">{selectedRecipe.yield_unit}</span>\n                      </div>\n                      \n                      {previewYield !== selectedRecipe.yield && (\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-xs text-gray-400\">Scale:</span>\n                          <span className={`text-sm font-medium ${previewYield > selectedRecipe.yield ? 'text-[#29E7CD]' : 'text-[#3B82F6]'}`}>\n                            {previewYield > selectedRecipe.yield ? '+' : ''}{((previewYield / selectedRecipe.yield - 1) * 100).toFixed(0)}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => handleEditFromPreview()}\n                      className=\"bg-gradient-to-r from-[#29E7CD] to-[#3B82F6] text-white px-4 py-2 rounded-lg text-sm font-medium hover:from-[#29E7CD]/80 hover:to-[#3B82F6]/80 transition-all duration-200\"\n                    >\n                      ✏️ Edit Recipe\n                    </button>\n                    <button\n                      onClick={handlePrint}\n                      className=\"bg-gradient-to-r from-[#D925C7] to-[#29E7CD] text-white px-4 py-2 rounded-lg text-sm font-medium hover:from-[#D925C7]/80 hover:to-[#29E7CD]/80 transition-all duration-200\"\n                    >\n                      🖨️ Print\n                    </button>\n                    <button\n                      onClick={() => setShowPreview(false)}\n                      className=\"bg-gray-600 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors\"\n                    >\n                      ✕ Close\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Content */}\n              <div className=\"p-6\">\n                {/* Ingredients */}\n                <div className=\"mb-6\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n                    <span className=\"text-2xl\">📋</span>\n                    Ingredients\n                    <span className=\"text-sm font-normal text-gray-400 ml-2\">\n                      ({recipeIngredients.length} item{recipeIngredients.length !== 1 ? 's' : ''})\n                    </span>\n                  </h3>\n                  \n                  <div className=\"bg-[#0a0a0a] rounded-xl border border-[#2a2a2a]/50 overflow-hidden\">\n                    {/* Header */}\n                    <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-4 py-3 border-b border-[#2a2a2a]/50\">\n                      <div className=\"grid grid-cols-12 gap-4 text-sm font-medium text-gray-300\">\n                        <div className=\"col-span-1 text-center\">#</div>\n                        <div className=\"col-span-8\">Ingredient</div>\n                        <div className=\"col-span-3 text-center\">Quantity</div>\n                      </div>\n                    </div>\n                    \n                    {/* Ingredients List */}\n                    <div className=\"divide-y divide-[#2a2a2a]/30\">\n                      {recipeIngredients.map((ri, index) => {\n                        const ingredient = ri.ingredients;\n                        const quantity = ri.quantity;\n\n                        return (\n                          <div key={ri.id} className=\"px-4 py-3 hover:bg-[#2a2a2a]/20 transition-colors\">\n                            <div className=\"grid grid-cols-12 gap-4 items-center\">\n                              {/* Index */}\n                              <div className=\"col-span-1 text-center\">\n                                <span className=\"text-sm text-gray-400 font-mono\">\n                                  {String(index + 1).padStart(2, '0')}\n                                </span>\n                              </div>\n                              \n                              {/* Ingredient Name */}\n                              <div className=\"col-span-8\">\n                                <div className=\"text-white font-medium\">{ingredient.ingredient_name}</div>\n                              </div>\n                              \n                              {/* Quantity */}\n                              <div className=\"col-span-3 text-center\">\n                                <span className=\"text-white font-medium\">\n                                  {(() => {\n                                    const formatted = formatQuantity(quantity, ri.unit);\n                                    const isConverted = formatted.unit !== ri.unit.toLowerCase();\n                                    \n                                    return (\n                                      <>\n                                        {formatted.value} {formatted.unit}\n                                        {isConverted && (\n                                          <div className=\"text-xs text-gray-400 mt-1\">\n                                            ({formatted.original})\n                                          </div>\n                                        )}\n                                        {previewYield !== selectedRecipe.yield && !isConverted && (\n                                          <div className=\"text-xs text-gray-400 mt-1\">\n                                            (orig: {quantity} {ri.unit})\n                                          </div>\n                                        )}\n                                      </>\n                                    );\n                                  })()}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n\n                {/* AI-Generated Cooking Instructions */}\n                <div className=\"mb-6\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4\">🤖 AI-Generated Cooking Method</h3>\n                  <div className=\"bg-[#0a0a0a] rounded-lg p-4\">\n                    {generatingInstructions ? (\n                      <div className=\"flex items-center justify-center py-8\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#29E7CD]\"></div>\n                        <span className=\"ml-3 text-gray-400\">Generating cooking instructions...</span>\n                      </div>\n                    ) : (\n                      <div className=\"text-gray-300 whitespace-pre-wrap\">\n                        {aiInstructions}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Manual Instructions (if available) */}\n                {selectedRecipe.instructions && (\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-white mb-4\">👨‍🍳 Manual Instructions</h3>\n                    <div className=\"bg-[#0a0a0a] rounded-lg p-4\">\n                      <div className=\"text-gray-300 whitespace-pre-wrap\">\n                        {selectedRecipe.instructions}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Custom Delete Confirmation Modal */}\n        {showDeleteConfirm && recipeToDelete && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-md w-full border border-[#2a2a2a]\">\n              {/* Header */}\n              <div className=\"p-6 border-b border-[#2a2a2a]\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-4\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">Delete Recipe</h3>\n                    <p className=\"text-gray-400 text-sm\">This action cannot be undone</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Content */}\n              <div className=\"p-6\">\n                <p className=\"text-gray-300 mb-6\">\n                  Are you sure you want to delete <span className=\"font-semibold text-white\">\"{capitalizeRecipeName(recipeToDelete.name)}\"</span>? \n                  This will permanently remove the recipe and all its ingredients from your Recipe Book.\n                </p>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={cancelDeleteRecipe}\n                    className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-4 py-3 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={confirmDeleteRecipe}\n                    className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-3 rounded-xl hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    Delete Recipe\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Bulk Delete Confirmation Modal */}\n        {showBulkDeleteConfirm && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl shadow-2xl max-w-md w-full border border-[#2a2a2a]\">\n              {/* Header */}\n              <div className=\"p-6 border-b border-[#2a2a2a]\">\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-[#ef4444] to-[#dc2626] rounded-full flex items-center justify-center mr-4\">\n                    <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-white\">Delete Multiple Recipes</h3>\n                    <p className=\"text-gray-400 text-sm\">This action cannot be undone</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Content */}\n              <div className=\"p-6\">\n                <p className=\"text-gray-300 mb-6\">\n                  Are you sure you want to delete <span className=\"font-semibold text-white\">{selectedRecipes.size} recipe{selectedRecipes.size > 1 ? 's' : ''}</span>? \n                  This will permanently remove all selected recipes and their ingredients from your Recipe Book.\n                </p>\n\n                {/* Selected Recipes List */}\n                <div className=\"bg-[#0a0a0a] rounded-lg p-4 mb-6 max-h-32 overflow-y-auto\">\n                  <h4 className=\"text-sm font-medium text-white mb-2\">Selected Recipes:</h4>\n                  <div className=\"space-y-1\">\n                    {Array.from(selectedRecipes).map(recipeId => {\n                      const recipe = recipes.find(r => r.id === recipeId);\n                      return recipe ? (\n                        <div key={recipeId} className=\"text-xs text-gray-400\">• {capitalizeRecipeName(recipe.name)}</div>\n                      ) : null;\n                    })}\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={cancelBulkDelete}\n                    className=\"flex-1 bg-[#2a2a2a] text-gray-300 px-4 py-3 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 font-medium\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={confirmBulkDelete}\n                    className=\"flex-1 bg-gradient-to-r from-[#ef4444] to-[#dc2626] text-white px-4 py-3 rounded-xl hover:from-[#ef4444]/80 hover:to-[#dc2626]/80 transition-all duration-200 font-medium shadow-lg hover:shadow-xl\"\n                  >\n                    Delete {selectedRecipes.size} Recipe{selectedRecipes.size > 1 ? 's' : ''}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Print-Only Recipe Card */}\n        {selectedRecipe && (\n          <div className=\"hidden print-recipe-card print:block print:fixed print:inset-0 print:bg-white print:p-8 print:z-[9999] print:m-0\">\n            <div className=\"print:max-w-none print:w-full print:h-full print:overflow-visible print:m-0 print:p-0\">\n              {/* Print Header with Logo */}\n              <div className=\"print:flex print:justify-between print:items-center print:mb-8 print:border-b print:border-gray-300 print:pb-4\">\n                <div>\n                  <h1 className=\"print:text-3xl print:font-bold print:text-black print:mb-2\">\n                    {capitalizeRecipeName(selectedRecipe.name)}\n                  </h1>\n                  <p className=\"print:text-lg print:text-gray-600\">\n                    Yield: {previewYield} {selectedRecipe.yield_unit}\n                    {previewYield !== selectedRecipe.yield && (\n                      <span className=\"print:ml-2 print:text-sm print:text-gray-500\">\n                        (scaled from {selectedRecipe.yield} {selectedRecipe.yield_unit})\n                      </span>\n                    )}\n                  </p>\n                </div>\n                <div className=\"print:flex print:items-center print:gap-3\">\n                  <img \n                    src=\"/images/prepflow-logo.png\" \n                    alt=\"PrepFlow\" \n                    className=\"print:w-16 print:h-16 print:object-contain\"\n                  />\n                  <div className=\"print:text-right\">\n                    <div className=\"print:text-sm print:font-semibold print:text-black\">PrepFlow</div>\n                    <div className=\"print:text-xs print:text-gray-500\">Kitchen Management</div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Print Ingredients Section */}\n              <div className=\"print:mb-8\">\n                <h2 className=\"print:text-2xl print:font-bold print:text-black print:mb-4 print:border-b print:border-gray-300 print:pb-2\">\n                  📋 Ingredients\n                </h2>\n                <div className=\"print:space-y-2\">\n                  {recipeIngredients.map((ri, index) => {\n                    const ingredient = ri.ingredients;\n                    const quantity = ri.quantity;\n                    const formatted = formatQuantity(quantity, ri.unit);\n\n                    return (\n                      <div key={ri.id} className=\"print:flex print:justify-between print:items-center print:py-1 print:border-b print:border-gray-100 print:last:border-b-0\">\n                        <div className=\"print:flex print:items-center print:gap-3\">\n                          <span className=\"print:text-sm print:text-gray-500 print:font-mono print:w-6\">\n                            {String(index + 1).padStart(2, '0')}.\n                          </span>\n                          <span className=\"print:text-black print:font-medium\">\n                            {ingredient.ingredient_name}\n                          </span>\n                        </div>\n                        <span className=\"print:text-black print:font-semibold\">\n                          {formatted.value} {formatted.unit}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Print Instructions Section */}\n              <div className=\"print:mb-8\">\n                <h2 className=\"print:text-2xl print:font-bold print:text-black print:mb-4 print:border-b print:border-gray-300 print:pb-2\">\n                  🤖 Cooking Instructions\n                </h2>\n                <div className=\"print:text-black print:leading-relaxed print:whitespace-pre-line\">\n                  {aiInstructions}\n                </div>\n              </div>\n\n              {/* Print Footer */}\n              <div className=\"print:mt-12 print:pt-4 print:border-t print:border-gray-300 print:text-center print:text-xs print:text-gray-500\">\n                <p>Generated by PrepFlow Kitchen Management System</p>\n                <p>Printed on {new Date().toLocaleDateString()} at {new Date().toLocaleTimeString()}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}