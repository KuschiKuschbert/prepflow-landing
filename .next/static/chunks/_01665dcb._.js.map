{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/hooks/useCountryFormatting.ts"],"sourcesContent":["import { useCountry } from '@/contexts/CountryContext';\nimport { formatCurrencyWithTax, getTaxBreakdown } from '@/lib/country-config';\n\nexport function useCountryFormatting() {\n  const { countryConfig } = useCountry();\n\n  const formatCurrency = (amount: number, includeTax: boolean = true) => {\n    return formatCurrencyWithTax(amount, countryConfig.code, includeTax);\n  };\n\n  const formatDate = (date: Date, options?: Intl.DateTimeFormatOptions) => {\n    return new Intl.DateTimeFormat(countryConfig.locale, options).format(date);\n  };\n\n  const formatNumber = (num: number, options?: Intl.NumberFormatOptions) => {\n    return new Intl.NumberFormat(countryConfig.locale, options).format(num);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat(countryConfig.locale, { \n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1\n    }).format(value);\n  };\n\n  const calculateTax = (amount: number) => {\n    return getTaxBreakdown(amount, countryConfig.code);\n  };\n\n  const getTaxInfo = () => ({\n    rate: countryConfig.taxRate,\n    name: countryConfig.taxName,\n    currency: countryConfig.currency\n  });\n\n  return {\n    countryConfig,\n    formatCurrency,\n    formatDate,\n    formatNumber,\n    formatPercentage,\n    calculateTax,\n    getTaxInfo\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEO,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD;IAEnC,MAAM,iBAAiB,SAAC;YAAgB,8EAAsB;QAC5D,OAAO,CAAA,GAAA,2HAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ,cAAc,IAAI,EAAE;IAC3D;IAEA,MAAM,aAAa,CAAC,MAAY;QAC9B,OAAO,IAAI,KAAK,cAAc,CAAC,cAAc,MAAM,EAAE,SAAS,MAAM,CAAC;IACvE;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,OAAO,IAAI,KAAK,YAAY,CAAC,cAAc,MAAM,EAAE,SAAS,MAAM,CAAC;IACrE;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,IAAI,KAAK,YAAY,CAAC,cAAc,MAAM,EAAE;YACjD,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACzB,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,eAAe,CAAC;QACpB,OAAO,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,cAAc,IAAI;IACnD;IAEA,MAAM,aAAa,IAAM,CAAC;YACxB,MAAM,cAAc,OAAO;YAC3B,MAAM,cAAc,OAAO;YAC3B,UAAU,cAAc,QAAQ;QAClC,CAAC;IAED,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA1CgB;;QACY,8HAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/temperature/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { useCountryFormatting } from '@/hooks/useCountryFormatting';\nimport dynamic from 'next/dynamic';\n\n// Lazy load the synchronized chart component for better performance\nconst SynchronizedChart = dynamic(() => import('./components/SynchronizedChart'), {\n  loading: () => (\n    <div className=\"h-64 bg-[#1f1f1f] rounded-3xl animate-pulse flex items-center justify-center\">\n      <div className=\"text-gray-400\">Loading chart...</div>\n    </div>\n  ),\n  ssr: false\n});\n\ninterface TemperatureLog {\n  id: number;\n  log_date: string;\n  log_time: string;\n  temperature_type: string;\n  temperature_celsius: number;\n  location: string | null;\n  notes: string | null;\n  photo_url: string | null;\n  logged_by: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface TemperatureThreshold {\n  id: number;\n  temperature_type: string;\n  min_temp_celsius: number | null;\n  max_temp_celsius: number | null;\n  alert_enabled: boolean;\n}\n\ninterface TemperatureEquipment {\n  id: string;\n  name: string;\n  equipment_type: string;\n  location: string | null;\n  min_temp_celsius: number | null;\n  max_temp_celsius: number | null;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\n\nexport default function TemperatureLogsPage() {\n  const { t } = useTranslation();\n  const { formatDate } = useCountryFormatting();\n  \n  // Helper function to format time strings\n  const formatTime = (timeString: string) => {\n    if (!timeString) return '';\n    // Convert time string (HH:MM:SS) to a readable format\n    const [hours, minutes] = timeString.split(':');\n    return `${hours}:${minutes}`;\n  };\n  \n  // Helper function to format date strings\n  const formatDateString = (dateString: string) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return formatDate(date);\n  };\n  const [logs, setLogs] = useState<TemperatureLog[]>([]);\n  const [allLogs, setAllLogs] = useState<TemperatureLog[]>([]); // All logs for analytics\n  const [thresholds, setThresholds] = useState<TemperatureThreshold[]>([]);\n  const [equipment, setEquipment] = useState<TemperatureEquipment[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'logs' | 'thresholds' | 'equipment' | 'analytics'>('logs');\n  const [quickTempInputs, setQuickTempInputs] = useState<{[key: string]: string}>({});\n  const [quickTempLoading, setQuickTempLoading] = useState<{[key: string]: boolean}>({});\n  const [quickTempConfirmations, setQuickTempConfirmations] = useState<{[key: string]: {message: string, timestamp: number}}>({});\n  const [timeFilter, setTimeFilter] = useState('all'); // '1week', '1month', '3months', 'all'\n  const [dateOffset, setDateOffset] = useState(0); // For date scrolling\n  const [showAddLog, setShowAddLog] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [selectedType, setSelectedType] = useState('all');\n  const [newLog, setNewLog] = useState({\n    log_date: new Date().toISOString().split('T')[0],\n    log_time: new Date().toTimeString().split(' ')[0].substring(0, 5),\n    temperature_type: 'fridge',\n    temperature_celsius: '',\n    location: '',\n    notes: '',\n    logged_by: ''\n  });\n\n\n  const temperatureTypes = [\n    { value: 'fridge', label: 'Fridge', icon: '🧊' },\n    { value: 'freezer', label: 'Freezer', icon: '❄️' },\n    { value: 'food_cooking', label: 'Food Cooking', icon: '🔥' },\n    { value: 'food_hot_holding', label: 'Food Hot Holding', icon: '🍲' },\n    { value: 'food_cold_holding', label: 'Food Cold Holding', icon: '🥗' },\n    { value: 'storage', label: 'Storage', icon: '📦' }\n  ];\n\n\n  useEffect(() => {\n    fetchLogs();\n    fetchThresholds();\n    fetchEquipment();\n    fetchAllLogs(); // Fetch all logs for analytics\n  }, [selectedDate, selectedType]);\n\n  const fetchLogs = async () => {\n    try {\n      let url = '/api/temperature-logs';\n      const params = new URLSearchParams();\n      if (selectedDate) params.append('date', selectedDate);\n      if (selectedType !== 'all') params.append('type', selectedType);\n      if (params.toString()) url += `?${params.toString()}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.success) {\n        setLogs(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchAllLogs = async () => {\n    try {\n      const response = await fetch('/api/temperature-logs');\n      const data = await response.json();\n      if (data.success) {\n        setAllLogs(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching all logs:', error);\n    }\n  };\n\n  const fetchThresholds = async () => {\n    try {\n      const response = await fetch('/api/temperature-thresholds');\n      const data = await response.json();\n      if (data.success) {\n        setThresholds(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching thresholds:', error);\n    }\n  };\n\n  const fetchEquipment = async () => {\n    try {\n      const response = await fetch('/api/temperature-equipment');\n      const data = await response.json();\n      if (data.success) {\n        setEquipment(data.data);\n      }\n    } catch (error) {\n      console.error('Error fetching equipment:', error);\n    }\n  };\n\n  const checkCoolingOffPeriod = (equipmentName: string, coolingOffMinutes: number = 5) => {\n    const now = new Date();\n    const cutoffTime = new Date(now.getTime() - (coolingOffMinutes * 60 * 1000));\n    \n    // Check if there's a recent log for this equipment\n    const recentLog = logs.find(log => \n      log.location === equipmentName && \n      new Date(`${log.log_date}T${log.log_time}`) > cutoffTime\n    );\n    \n    return recentLog;\n  };\n\n  const handleQuickTempLog = async (equipmentId: string, equipmentName: string, equipmentType: string) => {\n    const tempValue = quickTempInputs[equipmentId];\n    if (!tempValue || isNaN(parseFloat(tempValue))) {\n      alert('Please enter a valid temperature');\n      return;\n    }\n\n    // Check cooling off period (5 minutes default)\n    const recentLog = checkCoolingOffPeriod(equipmentName, 5);\n    if (recentLog) {\n      const timeDiff = Math.ceil((new Date().getTime() - new Date(`${recentLog.log_date}T${recentLog.log_time}`).getTime()) / (1000 * 60));\n      const remainingTime = 5 - timeDiff;\n      alert(`Please wait ${remainingTime} more minute(s) before logging another temperature for this equipment. Last logged at ${recentLog.log_time}.`);\n      return;\n    }\n\n    setQuickTempLoading(prev => ({ ...prev, [equipmentId]: true }));\n\n    try {\n      const response = await fetch('/api/temperature-logs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          log_date: new Date().toISOString().split('T')[0],\n          log_time: new Date().toTimeString().split(' ')[0].substring(0, 5),\n          temperature_type: equipmentType,\n          temperature_celsius: parseFloat(tempValue),\n          location: equipmentName,\n          notes: 'Quick log',\n          logged_by: 'Staff'\n        })\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        // Clear the input\n        setQuickTempInputs(prev => ({ ...prev, [equipmentId]: '' }));\n        // Show confirmation message\n                  setQuickTempConfirmations(prev => ({ \n                    ...prev, \n                    [equipmentId]: { \n                      message: `${tempValue}°C logged successfully! Next entry allowed in 5 minutes.`, \n                      timestamp: Date.now() \n                    } \n                  }));\n        // Auto-hide confirmation after 3 seconds\n        setTimeout(() => {\n          setQuickTempConfirmations(prev => {\n            const newState = { ...prev };\n            delete newState[equipmentId];\n            return newState;\n          });\n        }, 3000);\n        // Refresh logs\n        fetchLogs();\n      } else {\n        alert('Failed to log temperature: ' + (data.message || 'Unknown error'));\n      }\n    } catch (error) {\n      console.error('Error logging temperature:', error);\n      alert('Failed to log temperature. Please try again.');\n    } finally {\n      setQuickTempLoading(prev => ({ ...prev, [equipmentId]: false }));\n    }\n  };\n\n\n  const handleAddLog = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Check cooling off period if location is specified\n    if (newLog.location) {\n      const recentLog = checkCoolingOffPeriod(newLog.location, 5);\n      if (recentLog) {\n        const timeDiff = Math.ceil((new Date().getTime() - new Date(`${recentLog.log_date}T${recentLog.log_time}`).getTime()) / (1000 * 60));\n        const remainingTime = 5 - timeDiff;\n        alert(`Please wait ${remainingTime} more minute(s) before logging another temperature for this equipment. Last logged at ${recentLog.log_time}.`);\n        return;\n      }\n    }\n    \n    try {\n      const response = await fetch('/api/temperature-logs', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          ...newLog,\n          temperature_celsius: parseFloat(newLog.temperature_celsius)\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setLogs([data.data, ...logs]);\n        setNewLog({\n          log_date: new Date().toISOString().split('T')[0],\n          log_time: new Date().toTimeString().split(' ')[0].substring(0, 5),\n          temperature_type: 'fridge',\n          temperature_celsius: '',\n          location: '',\n          notes: '',\n          logged_by: ''\n        });\n        setShowAddLog(false);\n      }\n    } catch (error) {\n      console.error('Error adding log:', error);\n    }\n  };\n\n\n  const getTemperatureStatus = (temp: number, type: string) => {\n    const threshold = thresholds.find(t => t.temperature_type === type);\n    if (!threshold || !threshold.alert_enabled) return 'normal';\n    \n    if (threshold.min_temp_celsius && temp < threshold.min_temp_celsius) return 'low';\n    if (threshold.max_temp_celsius && temp > threshold.max_temp_celsius) return 'high';\n    return 'normal';\n  };\n\n\n  const getFoodSafetyStatus = (temp: number, logTime: string, logDate: string, type: string) => {\n    // Only apply to food items in danger zone (5°C to 60°C)\n    if (type !== 'food_cooking' && type !== 'food_hot_holding' && type !== 'food_cold_holding') {\n      return null; // Not a food item\n    }\n\n    if (temp < 5 || temp > 60) {\n      return { status: 'safe', message: 'Outside danger zone', color: 'text-green-400', icon: '✅' };\n    }\n\n    const logDateTime = new Date(`${logDate}T${logTime}`);\n    const now = new Date();\n    const hoursInDangerZone = (now.getTime() - logDateTime.getTime()) / (1000 * 60 * 60);\n\n    if (hoursInDangerZone < 2) {\n      return { \n        status: 'safe', \n        message: `${(2 - hoursInDangerZone).toFixed(1)}h remaining - can refrigerate`, \n        color: 'text-green-400',\n        icon: '✅'\n      };\n    } else if (hoursInDangerZone < 4) {\n      return { \n        status: 'warning', \n        message: `${(4 - hoursInDangerZone).toFixed(1)}h remaining - use immediately`, \n        color: 'text-yellow-400',\n        icon: '⚠️'\n      };\n    } else {\n      return { \n        status: 'danger', \n        message: `${hoursInDangerZone.toFixed(1)}h in danger zone - DISCARD`, \n        color: 'text-red-400',\n        icon: '🚨'\n      };\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'high': return 'text-red-400 bg-red-400/10 border-red-400/20';\n      case 'low': return 'text-blue-400 bg-blue-400/10 border-blue-400/20';\n      default: return 'text-green-400 bg-green-400/10 border-green-400/20';\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    const typeInfo = temperatureTypes.find(t => t.value === type);\n    return typeInfo?.icon || '🌡️';\n  };\n\n  const getTypeLabel = (type: string) => {\n    const typeInfo = temperatureTypes.find(t => t.value === type);\n    return typeInfo?.label || type;\n  };\n\n  const getTimePeriod = (time: string) => {\n    const hour = parseInt(time.split(':')[0]);\n    if (hour >= 5 && hour < 9) return { period: 'morning', label: '🌅 Morning (5:00-8:59)', icon: '🌅' };\n    if (hour >= 9 && hour < 12) return { period: 'late-morning', label: '☀️ Late Morning (9:00-11:59)', icon: '☀️' };\n    if (hour >= 12 && hour < 14) return { period: 'midday', label: '🌞 Midday (12:00-13:59)', icon: '🌞' };\n    if (hour >= 14 && hour < 17) return { period: 'afternoon', label: '🌤️ Afternoon (14:00-16:59)', icon: '🌤️' };\n    if (hour >= 17 && hour < 20) return { period: 'dinner', label: '🌆 Dinner Prep (17:00-19:59)', icon: '🌆' };\n    if (hour >= 20 && hour < 22) return { period: 'evening', label: '🌙 Evening (20:00-21:59)', icon: '🌙' };\n    return { period: 'night', label: '🌚 Night (22:00-4:59)', icon: '🌚' };\n  };\n\n  const groupLogsByTimePeriod = (logs: TemperatureLog[]) => {\n    const grouped = logs.reduce((acc, log) => {\n      const timePeriod = getTimePeriod(log.log_time);\n      if (!acc[timePeriod.period]) {\n        acc[timePeriod.period] = {\n          period: timePeriod.period,\n          label: timePeriod.label,\n          icon: timePeriod.icon,\n          logs: []\n        };\n      }\n      acc[timePeriod.period].logs.push(log);\n      return acc;\n    }, {} as Record<string, { period: string; label: string; icon: string; logs: TemperatureLog[] }>);\n\n    // Sort periods by time of day\n    const periodOrder = ['morning', 'late-morning', 'midday', 'afternoon', 'dinner', 'evening', 'night'];\n    return periodOrder\n      .filter(period => grouped[period])\n      .map(period => grouped[period])\n      .map(group => ({\n        ...group,\n        logs: group.logs.sort((a, b) => a.log_time.localeCompare(b.log_time))\n      }));\n  };\n\n  const filterLogsByTimePeriod = (logs: TemperatureLog[], timeFilter: string, offset: number = 0): TemperatureLog[] => {\n    if (timeFilter === 'all') return logs;\n    \n    const now = new Date();\n    const startDate = new Date();\n    const endDate = new Date();\n    \n    switch (timeFilter) {\n      case '1week':\n        startDate.setDate(now.getDate() - 7 + offset);\n        endDate.setDate(now.getDate() + offset);\n        break;\n      case '1month':\n        startDate.setMonth(now.getMonth() - 1 + offset);\n        endDate.setMonth(now.getMonth() + offset);\n        break;\n      case '3months':\n        startDate.setMonth(now.getMonth() - 3 + offset);\n        endDate.setMonth(now.getMonth() + offset);\n        break;\n      default:\n        return logs;\n    }\n    \n    // Set time to start of day for accurate comparison\n    startDate.setHours(0, 0, 0, 0);\n    endDate.setHours(23, 59, 59, 999);\n    \n    return logs.filter(log => {\n      const logDate = new Date(log.log_date);\n      logDate.setHours(0, 0, 0, 0);\n      return logDate >= startDate && logDate <= endDate;\n    });\n  };\n\n  const getDateRangeForFilter = (timeFilter: string, offset: number = 0) => {\n    const now = new Date();\n    const startDate = new Date();\n    \n    switch (timeFilter) {\n      case '1week':\n        startDate.setDate(now.getDate() - 7 + offset);\n        break;\n      case '1month':\n        startDate.setMonth(now.getMonth() - 1 + offset);\n        break;\n      case '3months':\n        startDate.setMonth(now.getMonth() - 3 + offset);\n        break;\n      default:\n        return { start: null, end: null };\n    }\n    \n    const endDate = new Date(now);\n    endDate.setDate(now.getDate() + offset);\n    \n    return { start: startDate, end: endDate };\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-8\"></div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {[...Array(4)].map((_, i) => (\n                <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n                  <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-3/4 mb-3\"></div>\n                  <div className=\"h-20 bg-[#2a2a2a] rounded-xl\"></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\n            🌡️ {t('temperature.title', 'Temperature Logs')}\n          </h1>\n          <p className=\"text-gray-400\">{t('temperature.subtitle', 'Track fridge, freezer, and food temperatures for food safety compliance')}</p>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-8\">\n          <div className=\"flex space-x-1 bg-[#1f1f1f] p-1 rounded-2xl border border-[#2a2a2a]\">\n            <button\n              onClick={() => setActiveTab('logs')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 ${\n                activeTab === 'logs'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              📊 {t('temperature.logs', 'Temperature Logs')}\n            </button>\n            <button\n              onClick={() => setActiveTab('equipment')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 ${\n                activeTab === 'equipment'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              🧊 {t('temperature.equipment', 'Equipment')}\n            </button>\n            <button\n              onClick={() => setActiveTab('analytics')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 ${\n                activeTab === 'analytics'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              📊 {t('temperature.analytics', 'Analytics')}\n            </button>\n            <button\n              onClick={() => setActiveTab('thresholds')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 ${\n                activeTab === 'thresholds'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              ⚙️ {t('temperature.thresholds', 'Temperature Thresholds')}\n            </button>\n          </div>\n        </div>\n\n        {/* Logs Tab */}\n        {activeTab === 'logs' && (\n          <div className=\"space-y-6\">\n            {/* Filters and Add Button */}\n            <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.filterDate', 'Filter by Date')}</label>\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => {\n                        const currentDate = new Date(selectedDate);\n                        currentDate.setDate(currentDate.getDate() - 1);\n                        setSelectedDate(currentDate.toISOString().split('T')[0]);\n                      }}\n                      className=\"bg-[#2a2a2a] text-white px-3 py-2 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 flex items-center justify-center\"\n                      title=\"Previous day\"\n                    >\n                      <span className=\"text-lg\">←</span>\n                    </button>\n                    <input\n                      type=\"date\"\n                      value={selectedDate}\n                      onChange={(e) => setSelectedDate(e.target.value)}\n                      className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                    />\n                    <button\n                      onClick={() => {\n                        const currentDate = new Date(selectedDate);\n                        currentDate.setDate(currentDate.getDate() + 1);\n                        setSelectedDate(currentDate.toISOString().split('T')[0]);\n                      }}\n                      className=\"bg-[#2a2a2a] text-white px-3 py-2 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 flex items-center justify-center\"\n                      title=\"Next day\"\n                    >\n                      <span className=\"text-lg\">→</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        setSelectedDate(new Date().toISOString().split('T')[0]);\n                      }}\n                      className=\"bg-[#29E7CD]/10 text-[#29E7CD] px-3 py-2 rounded-xl hover:bg-[#29E7CD]/20 transition-all duration-200 text-sm font-medium\"\n                      title=\"Go to today\"\n                    >\n                      Today\n                    </button>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.filterEquipment', 'Filter by Equipment')}</label>\n                  <select\n                    value={selectedType}\n                    onChange={(e) => setSelectedType(e.target.value)}\n                    className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                  >\n                    <option value=\"all\">{t('temperature.allEquipment', 'All Equipment')}</option>\n                    \n                    {/* Equipment from database */}\n                    {equipment.filter(eq => eq.is_active).map((item) => (\n                      <option key={item.id} value={item.equipment_type}>\n                        {getTypeIcon(item.equipment_type)} {item.name}\n                      </option>\n                    ))}\n                    \n                    {/* Food-specific temperature types */}\n                    {temperatureTypes.filter(type => \n                      type.value === 'food_cooking' || \n                      type.value === 'food_hot_holding' || \n                      type.value === 'food_cold_holding'\n                    ).map((type) => (\n                      <option key={type.value} value={type.value}>\n                        {type.icon} {type.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowAddLog(true)}\n                className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-black px-6 py-3 rounded-2xl font-semibold hover:shadow-xl transition-all duration-200\"\n              >\n                ➕ {t('temperature.addLog', 'Add Temperature Log')}\n              </button>\n            </div>\n\n            {/* Add Log Form */}\n            {showAddLog && (\n              <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n                <h3 className=\"text-xl font-semibold text-white mb-2\">{t('temperature.addNewLog', 'Add New Temperature Log')}</h3>\n                <p className=\"text-sm text-gray-400 mb-4\">\n                  💡 You can log multiple temperatures per day for the same equipment (e.g., morning and evening checks). There's a 5-minute cooling off period between entries for the same equipment.\n                </p>\n                <div className=\"mb-4 p-4 bg-blue-400/10 border border-blue-400/20 rounded-2xl\">\n                  <h4 className=\"text-sm font-semibold text-blue-400 mb-2\">🍽️ Queensland 2-Hour/4-Hour Rule</h4>\n                  <div className=\"text-xs text-gray-300 space-y-1\">\n                    <p>• <span className=\"text-green-400\">0-2 hours</span> in danger zone (5°C-60°C): Can refrigerate for later use</p>\n                    <p>• <span className=\"text-yellow-400\">2-4 hours</span> in danger zone: Must use immediately</p>\n                    <p>• <span className=\"text-red-400\">4+ hours</span> in danger zone: Must discard</p>\n                  </div>\n                </div>\n                <form onSubmit={handleAddLog} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.date', 'Date')}</label>\n                    <input\n                      type=\"date\"\n                      value={newLog.log_date}\n                      onChange={(e) => setNewLog({ ...newLog, log_date: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.time', 'Time')}</label>\n                    <input\n                      type=\"time\"\n                      value={newLog.log_time}\n                      onChange={(e) => setNewLog({ ...newLog, log_time: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.equipment', 'Equipment')}</label>\n                    <select\n                      value={newLog.temperature_type}\n                      onChange={(e) => {\n                        const selectedEquipment = equipment.find(eq => eq.equipment_type === e.target.value);\n                        setNewLog({ \n                          ...newLog, \n                          temperature_type: e.target.value,\n                          location: selectedEquipment?.name || ''\n                        });\n                      }}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      required\n                    >\n                      <option value=\"\">{t('temperature.selectEquipment', 'Select Equipment')}</option>\n                      \n                      {/* Equipment from database */}\n                      {equipment.filter(eq => eq.is_active).map((item) => (\n                        <option key={item.id} value={item.equipment_type}>\n                          {getTypeIcon(item.equipment_type)} {item.name} ({getTypeLabel(item.equipment_type)})\n                        </option>\n                      ))}\n                      \n                      {/* Food-specific temperature types */}\n                      {temperatureTypes.filter(type => \n                        type.value === 'food_cooking' || \n                        type.value === 'food_hot_holding' || \n                        type.value === 'food_cold_holding'\n                      ).map((type) => (\n                        <option key={type.value} value={type.value}>\n                          {type.icon} {type.label} (Food Safety)\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.temperature', 'Temperature (°C)')}</label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={newLog.temperature_celsius}\n                      onChange={(e) => setNewLog({ ...newLog, temperature_celsius: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      placeholder=\"e.g., 3.5\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                      {['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(newLog.temperature_type) \n                        ? t('temperature.foodItem', 'Food Item') \n                        : t('temperature.location', 'Location')\n                      }\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newLog.location}\n                      onChange={(e) => setNewLog({ ...newLog, location: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      placeholder={\n                        ['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(newLog.temperature_type)\n                          ? 'e.g., Chicken Curry, Soup Station 1, Salad Bar'\n                          : 'e.g., Main Fridge, Freezer 1'\n                      }\n                      required={['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(newLog.temperature_type)}\n                    />\n                    {['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(newLog.temperature_type) && (\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        💡 Specify the exact food item for proper 2-hour/4-hour rule tracking\n                      </p>\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.loggedBy', 'Logged By')}</label>\n                    <input\n                      type=\"text\"\n                      value={newLog.logged_by}\n                      onChange={(e) => setNewLog({ ...newLog, logged_by: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      placeholder=\"Staff member name\"\n                    />\n                  </div>\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-300 mb-2\">{t('temperature.notes', 'Notes')}</label>\n                    <textarea\n                      value={newLog.notes}\n                      onChange={(e) => setNewLog({ ...newLog, notes: e.target.value })}\n                      className=\"w-full px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-2xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n                      placeholder=\"Additional notes or observations\"\n                      rows={3}\n                    />\n                  </div>\n                  <div className=\"md:col-span-2 flex space-x-4\">\n                    <button\n                      type=\"submit\"\n                      className=\"bg-[#29E7CD] text-black px-6 py-3 rounded-2xl font-semibold hover:shadow-xl transition-all duration-200\"\n                    >\n                      {t('temperature.save', 'Save Log')}\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowAddLog(false)}\n                      className=\"bg-[#2a2a2a] text-white px-6 py-3 rounded-2xl font-semibold hover:bg-[#3a3a3a] transition-all duration-200\"\n                    >\n                      {t('temperature.cancel', 'Cancel')}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            )}\n\n            {/* Logs List */}\n            <div className=\"space-y-6\">\n              {logs.length === 0 ? (\n                <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a] text-center\">\n                  <div className=\"w-20 h-20 rounded-full bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center mx-auto mb-4\">\n                    <span className=\"text-4xl\">🌡️</span>\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">{t('temperature.noLogs', 'No Temperature Logs')}</h3>\n                  <p className=\"text-gray-400\">{t('temperature.noLogsDesc', 'Start logging temperatures to ensure food safety compliance')}</p>\n                </div>\n              ) : (\n                groupLogsByTimePeriod(logs).map((timeGroup) => (\n                  <div key={timeGroup.period} className=\"space-y-4\">\n                    {/* Time Period Header */}\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-10 h-10 rounded-2xl bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center\">\n                        <span className=\"text-xl\">{timeGroup.icon}</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-semibold text-white\">{timeGroup.label}</h3>\n                        <p className=\"text-sm text-gray-400\">{timeGroup.logs.length} temperature reading{timeGroup.logs.length !== 1 ? 's' : ''}</p>\n                      </div>\n                    </div>\n                    \n                    {/* Logs for this time period */}\n                    <div className=\"space-y-3\">\n                      {timeGroup.logs.map((log) => {\n                        const status = getTemperatureStatus(log.temperature_celsius, log.temperature_type);\n                        const foodSafety = getFoodSafetyStatus(log.temperature_celsius, log.log_time, log.log_date, log.temperature_type);\n                        return (\n                          <div key={log.id} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] hover:shadow-xl transition-all duration-200\">\n                            <div className=\"flex items-center justify-between mb-3\">\n                              <div className=\"flex items-center space-x-3\">\n                                <div className=\"w-10 h-10 rounded-xl bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center\">\n                                  <span className=\"text-lg\">{getTypeIcon(log.temperature_type)}</span>\n                                </div>\n                                <div>\n                                  <h4 className=\"text-lg font-semibold text-white\">{log.location || getTypeLabel(log.temperature_type)}</h4>\n                                  <div className=\"flex items-center space-x-2\">\n                                    <p className=\"text-sm text-gray-400\">{log.log_time}</p>\n                                    <span className=\"text-xs text-gray-500\">•</span>\n                                    <p className=\"text-xs text-gray-500\">{getTypeLabel(log.temperature_type)}</p>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"flex items-center space-x-3\">\n                                <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(status)}`}>\n                                  {status === 'high' ? '⚠️ High' : status === 'low' ? '⚠️ Low' : '✅ Normal'}\n                                </span>\n                                <span className=\"text-xl font-bold text-[#29E7CD]\">\n                                  {log.temperature_celsius}°C\n                                </span>\n                              </div>\n                            </div>\n                            \n                            {log.location && log.location !== getTypeLabel(log.temperature_type) && (\n                              <p className=\"text-gray-300 text-sm mb-2\">📍 {log.location}</p>\n                            )}\n                            \n                            {log.logged_by && (\n                              <p className=\"text-xs text-gray-400 mb-2\">👤 {t('temperature.loggedBy', 'Logged by')}: {log.logged_by}</p>\n                            )}\n                            \n                            {log.notes && (\n                              <p className=\"text-gray-300 text-sm mb-3\">{log.notes}</p>\n                            )}\n                            \n                            {/* Food Safety Status (2-Hour/4-Hour Rule) */}\n                            {foodSafety && (\n                              <div className={`mb-3 p-3 rounded-xl border ${foodSafety.color.replace('text-', 'bg-').replace('-400', '-400/10')} border-${foodSafety.color.replace('text-', '').replace('-400', '-400/20')}`}>\n                                <div className=\"flex items-center space-x-2\">\n                                  <span className=\"text-lg\">{foodSafety.icon}</span>\n                                  <div>\n                                    <p className={`text-sm font-medium ${foodSafety.color}`}>\n                                      Queensland 2-Hour/4-Hour Rule\n                                    </p>\n                                    <p className={`text-xs ${foodSafety.color}`}>\n                                      {foodSafety.message}\n                                    </p>\n                                  </div>\n                                </div>\n                              </div>\n                            )}\n                            \n                            {log.photo_url && (\n                              <div className=\"mb-3\">\n                                <img \n                                  src={log.photo_url} \n                                  alt=\"Temperature reading\" \n                                  className=\"w-24 h-24 object-cover rounded-xl border border-[#2a2a2a]\"\n                                />\n                              </div>\n                            )}\n                            \n                            <div className=\"flex space-x-3\">\n                              <button className=\"bg-[#2a2a2a] text-white px-3 py-1 rounded-lg font-semibold hover:bg-[#3a3a3a] transition-all duration-200 text-sm\">\n                                📷 {t('temperature.addPhoto', 'Add Photo')}\n                              </button>\n                              <button className=\"bg-[#2a2a2a] text-white px-3 py-1 rounded-lg font-semibold hover:bg-[#3a3a3a] transition-all duration-200 text-sm\">\n                                ✏️ {t('temperature.edit', 'Edit')}\n                              </button>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Equipment Tab */}\n        {activeTab === 'equipment' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h2 className=\"text-2xl font-semibold text-white\">{t('temperature.equipment', 'Temperature Equipment')}</h2>\n                <p className=\"text-gray-400 mt-1\">{t('temperature.equipmentDesc', 'Manage your temperature monitoring equipment')}</p>\n              </div>\n              <button\n                onClick={() => window.open('/webapp/setup', '_blank')}\n                className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-black px-6 py-3 rounded-2xl font-semibold hover:shadow-xl transition-all duration-200\"\n              >\n                ➕ {t('temperature.addEquipment', 'Add Equipment')}\n              </button>\n            </div>\n\n            {equipment.length === 0 ? (\n              <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a] text-center\">\n                <div className=\"w-20 h-20 rounded-full bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center mx-auto mb-4\">\n                  <span className=\"text-4xl\">🧊</span>\n                </div>\n                <h3 className=\"text-xl font-semibold text-white mb-2\">{t('temperature.noEquipment', 'No Temperature Equipment')}</h3>\n                <p className=\"text-gray-400 mb-6\">{t('temperature.noEquipmentDesc', 'Add temperature monitoring equipment to start logging temperatures')}</p>\n                <button\n                  onClick={() => window.open('/webapp/setup', '_blank')}\n                  className=\"bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-black px-6 py-3 rounded-2xl font-semibold hover:shadow-xl transition-all duration-200\"\n                >\n                  ➕ {t('temperature.addFirstEquipment', 'Add Your First Equipment')}\n                </button>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {equipment.map((item) => (\n                  <div key={item.id} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] hover:shadow-xl transition-all duration-200\">\n                    {/* Quick Confirmation Message */}\n                    {quickTempConfirmations[item.id] && (\n                      <div className=\"mb-4 p-3 bg-green-400/10 border border-green-400/20 rounded-2xl animate-in slide-in-from-top-2 duration-300\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-green-400 text-lg\">✅</span>\n                          <span className=\"text-green-400 font-medium text-sm\">\n                            {quickTempConfirmations[item.id].message}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                    \n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-12 h-12 rounded-2xl bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center\">\n                          <span className=\"text-2xl\">{getTypeIcon(item.equipment_type)}</span>\n                        </div>\n                        <div>\n                          <h3 className=\"text-lg font-semibold text-white\">{item.name}</h3>\n                          <p className=\"text-sm text-gray-400\">{getTypeLabel(item.equipment_type)}</p>\n                        </div>\n                      </div>\n                      <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                        item.is_active \n                          ? 'bg-green-400/10 text-green-400 border border-green-400/20' \n                          : 'bg-gray-400/10 text-gray-400 border border-gray-400/20'\n                      }`}>\n                        {item.is_active ? t('temperature.active', 'Active') : t('temperature.inactive', 'Inactive')}\n                      </span>\n                    </div>\n                    \n                    {item.location && (\n                      <p className=\"text-gray-300 mb-3\">📍 {item.location}</p>\n                    )}\n                    \n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-400 text-sm\">{t('temperature.tempRange', 'Temperature Range')}</span>\n                        <span className=\"text-white font-semibold\">\n                          {item.min_temp_celsius && item.max_temp_celsius \n                            ? `${item.min_temp_celsius}°C - ${item.max_temp_celsius}°C`\n                            : t('temperature.notSet', 'Not Set')\n                          }\n                        </span>\n                      </div>\n                    </div>\n                    \n            {/* Quick Temperature Input */}\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                🌡️ {t('temperature.quickLog', 'Quick Log Temperature')}\n              </label>\n              <p className=\"text-xs text-gray-400 mb-2\">\n                💡 You can log multiple temperatures per day for the same equipment. 5-minute cooling off period between entries.\n              </p>\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={quickTempInputs[item.id] || ''}\n                  onChange={(e) => setQuickTempInputs(prev => ({ ...prev, [item.id]: e.target.value }))}\n                  className=\"flex-1 px-3 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-xl text-white focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent text-sm\"\n                  placeholder=\"e.g., 3.5\"\n                />\n                <button\n                  onClick={() => handleQuickTempLog(item.id, item.name, item.equipment_type)}\n                  disabled={quickTempLoading[item.id] || !quickTempInputs[item.id]}\n                  className=\"bg-[#29E7CD] text-black px-4 py-2 rounded-xl font-semibold hover:shadow-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                >\n                  {quickTempLoading[item.id] ? '⏳' : '✅'}\n                </button>\n              </div>\n            </div>\n                    \n                    <div className=\"flex space-x-3\">\n                      <button\n                        onClick={() => {\n                          setNewLog({\n                            ...newLog,\n                            temperature_type: item.equipment_type,\n                            location: item.name\n                          });\n                          setActiveTab('logs');\n                          setShowAddLog(true);\n                        }}\n                        className=\"flex-1 bg-[#2a2a2a] text-white px-4 py-2 rounded-xl font-semibold hover:bg-[#3a3a3a] transition-all duration-200\"\n                      >\n                        📝 {t('temperature.detailedLog', 'Detailed Log')}\n                      </button>\n                      <button\n                        onClick={() => window.open('/webapp/setup', '_blank')}\n                        className=\"bg-[#2a2a2a] text-white px-4 py-2 rounded-xl font-semibold hover:bg-[#3a3a3a] transition-all duration-200\"\n                      >\n                        ✏️ {t('temperature.edit', 'Edit')}\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 'analytics' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h2 className=\"text-2xl font-semibold text-white\">{t('temperature.analytics', 'Temperature Analytics')}</h2>\n                <p className=\"text-gray-400 mt-1\">{t('temperature.analyticsDesc', 'Visualize temperature trends and patterns across all equipment')}</p>\n              </div>\n            </div>\n\n            {/* Time Period Filter */}\n            <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-white mb-2\">📅 Time Period Filter</h3>\n                    <p className=\"text-gray-400 text-sm\">Select the time range for temperature data visualization</p>\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    {[\n                      { value: '1week', label: '1 Week', icon: '📅' },\n                      { value: '1month', label: '1 Month', icon: '📆' },\n                      { value: '3months', label: '3 Months', icon: '🗓️' },\n                      { value: 'all', label: 'All Time', icon: '⏰' }\n                    ].map((period) => (\n                      <button\n                        key={period.value}\n                        onClick={() => {\n                          setTimeFilter(period.value);\n                          setDateOffset(0); // Reset offset when changing filter\n                        }}\n                        className={`px-4 py-2 rounded-xl font-medium transition-all duration-200 ${\n                          timeFilter === period.value\n                            ? 'bg-gradient-to-r from-[#29E7CD] to-[#D925C7] text-black shadow-lg'\n                            : 'bg-[#2a2a2a] text-gray-300 hover:bg-[#3a3a3a] hover:text-white'\n                        }`}\n                      >\n                        <span className=\"mr-2\">{period.icon}</span>\n                        {period.label}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n                \n                {/* Date Scrolling Controls */}\n                {timeFilter !== 'all' && (\n                  <div className=\"flex items-center justify-center space-x-4 pt-4 border-t border-[#2a2a2a]\">\n                    <button\n                      onClick={() => setDateOffset(dateOffset - 1)}\n                      className=\"bg-[#2a2a2a] text-white px-4 py-2 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 flex items-center space-x-2\"\n                    >\n                      <span>←</span>\n                      <span>Previous</span>\n                    </button>\n                    \n                    <div className=\"text-center\">\n                      <div className=\"text-white font-medium\">\n                        {(() => {\n                          const range = getDateRangeForFilter(timeFilter, dateOffset);\n                          if (range.start && range.end) {\n                            const startStr = formatDateString(range.start.toISOString().split('T')[0]);\n                            const endStr = formatDateString(range.end.toISOString().split('T')[0]);\n                            return `${startStr} - ${endStr}`;\n                          }\n                          return 'All Time';\n                        })()}\n                      </div>\n                      <div className=\"text-gray-400 text-sm\">\n                        {dateOffset === 0 ? 'Current Period' : \n                         dateOffset > 0 ? `${dateOffset} period(s) ahead` : \n                         `${Math.abs(dateOffset)} period(s) ago`}\n                      </div>\n                    </div>\n                    \n                    <button\n                      onClick={() => setDateOffset(dateOffset + 1)}\n                      className=\"bg-[#2a2a2a] text-white px-4 py-2 rounded-xl hover:bg-[#3a3a3a] transition-all duration-200 flex items-center space-x-2\"\n                    >\n                      <span>Next</span>\n                      <span>→</span>\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n\n            {/* Data Summary */}\n            <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">📊 Data Summary</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-sm\">\n                <div className=\"bg-[#2a2a2a]/30 p-4 rounded-xl\">\n                  <h4 className=\"font-semibold text-white mb-2\">Time Period</h4>\n                  <p className=\"text-[#29E7CD] text-lg font-semibold\">\n                    {timeFilter === '1week' ? 'Last 7 days' : \n                     timeFilter === '1month' ? 'Last 30 days' : \n                     timeFilter === '3months' ? 'Last 90 days' : 'All time'}\n                  </p>\n                </div>\n                <div className=\"bg-[#2a2a2a]/30 p-4 rounded-xl\">\n                  <h4 className=\"font-semibold text-white mb-2\">Total Logs</h4>\n                  <p className=\"text-[#29E7CD] text-lg font-semibold\">\n                    {filterLogsByTimePeriod(allLogs, timeFilter, dateOffset).length}\n                  </p>\n                </div>\n                <div className=\"bg-[#2a2a2a]/30 p-4 rounded-xl\">\n                  <h4 className=\"font-semibold text-white mb-2\">Active Equipment</h4>\n                  <p className=\"text-[#29E7CD] text-lg font-semibold\">\n                    {equipment.filter(eq => eq.is_active).length}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Debug Information */}\n            <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">🔍 Debug Information</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <h4 className=\"font-semibold text-white mb-2\">Filter Status:</h4>\n                  <p className=\"text-gray-300\">Time Filter: {timeFilter}</p>\n                  <p className=\"text-gray-300\">Total Logs: {allLogs.length}</p>\n                  <p className=\"text-gray-300\">Filtered Logs: {filterLogsByTimePeriod(allLogs, timeFilter, dateOffset).length}</p>\n                  <p className=\"text-gray-300\">Active Equipment: {equipment.filter(eq => eq.is_active).length}</p>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-white mb-2\">Sample Filtered Logs:</h4>\n                  {filterLogsByTimePeriod(allLogs, timeFilter, dateOffset).slice(0, 3).map((log, index) => (\n                    <p key={log.id} className=\"text-gray-300 text-xs\">\n                      {log.location} - {log.temperature_celsius}°C - {formatDateString(log.log_date)} {formatTime(log.log_time)}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Individual Equipment Charts */}\n            <div className=\"space-y-8\">\n              {equipment.filter(eq => eq.is_active).map((item) => {\n                const itemLogs = filterLogsByTimePeriod(\n                  allLogs.filter(log => {\n                    // Match by equipment name in location field\n                    return log.location === item.name;\n                  })\n                  .sort((a, b) => new Date(`${a.log_date}T${a.log_time}`).getTime() - new Date(`${b.log_date}T${b.log_time}`).getTime()),\n                  timeFilter,\n                  dateOffset\n                ); // Show all readings for the selected time period\n                \n                // Debug logging\n                console.log(`Equipment: ${item.name}, Time Filter: ${timeFilter}, Logs Count: ${itemLogs.length}`);\n                \n                return (\n                  <SynchronizedChart\n                    key={`${item.id}-${timeFilter}-${dateOffset}`}\n                    logs={itemLogs}\n                    equipment={item}\n                    formatDateString={formatDateString}\n                    formatTime={formatTime}\n                    getTypeIcon={getTypeIcon}\n                  />\n                );\n              })}\n            </div>\n\n            {/* Food Safety Alerts */}\n            {logs.filter(log => ['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(log.temperature_type)).length > 0 && (\n              <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n                <h3 className=\"text-xl font-semibold text-white mb-4\">🍽️ Food Safety Alerts</h3>\n                <div className=\"space-y-3\">\n                  {logs\n                    .filter(log => ['food_cooking', 'food_hot_holding', 'food_cold_holding'].includes(log.temperature_type))\n                    .slice(0, 5)\n                    .map((log) => {\n                      const foodSafety = getFoodSafetyStatus(log.temperature_celsius, log.log_time, log.log_date, log.temperature_type);\n                      if (!foodSafety) return null;\n                      \n                      return (\n                        <div key={log.id} className={`p-4 rounded-2xl border ${\n                          foodSafety.status === 'danger' \n                            ? 'bg-red-400/10 border-red-400/20' \n                            : foodSafety.status === 'warning'\n                            ? 'bg-yellow-400/10 border-yellow-400/20'\n                            : 'bg-green-400/10 border-green-400/20'\n                        }`}>\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-3\">\n                              <span className=\"text-2xl\">{foodSafety.icon}</span>\n                              <div>\n                                <h4 className=\"font-semibold text-white\">{log.location || getTypeLabel(log.temperature_type)}</h4>\n                                <p className={`text-sm ${foodSafety.color}`}>{foodSafety.message}</p>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"text-lg font-bold text-white\">{log.temperature_celsius}°C</div>\n                              <div className=\"text-xs text-gray-400\">{log.log_time}</div>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Thresholds Tab */}\n        {activeTab === 'thresholds' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-2xl font-semibold text-white\">{t('temperature.manageThresholds', 'Manage Temperature Thresholds')}</h2>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {thresholds.map((threshold) => (\n                <div key={threshold.id} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] hover:shadow-xl transition-all duration-200\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-12 h-12 rounded-2xl bg-gradient-to-br from-[#29E7CD]/20 to-[#29E7CD]/10 flex items-center justify-center\">\n                        <span className=\"text-2xl\">{getTypeIcon(threshold.temperature_type)}</span>\n                      </div>\n                      <div>\n                        <h3 className=\"text-xl font-semibold text-white\">{getTypeLabel(threshold.temperature_type)}</h3>\n                        <p className=\"text-sm text-gray-400\">{t('temperature.thresholds', 'Temperature Thresholds')}</p>\n                      </div>\n                    </div>\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      threshold.alert_enabled ? 'bg-green-400/10 text-green-400 border border-green-400/20' : 'bg-gray-400/10 text-gray-400 border border-gray-400/20'\n                    }`}>\n                      {threshold.alert_enabled ? t('temperature.alertsEnabled', 'Alerts Enabled') : t('temperature.alertsDisabled', 'Alerts Disabled')}\n                    </span>\n                  </div>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">{t('temperature.minTemp', 'Minimum Temperature')}</span>\n                      <span className=\"text-white font-semibold\">\n                        {threshold.min_temp_celsius ? `${threshold.min_temp_celsius}°C` : t('temperature.notSet', 'Not Set')}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">{t('temperature.maxTemp', 'Maximum Temperature')}</span>\n                      <span className=\"text-white font-semibold\">\n                        {threshold.max_temp_celsius ? `${threshold.max_temp_celsius}°C` : t('temperature.notSet', 'Not Set')}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-4 flex space-x-4\">\n                    <button className=\"bg-[#29E7CD] text-black px-4 py-2 rounded-xl font-semibold hover:shadow-lg transition-all duration-200\">\n                      ✏️ {t('temperature.edit', 'Edit')}\n                    </button>\n                    <button className={`px-4 py-2 rounded-xl font-semibold transition-all duration-200 ${\n                      threshold.alert_enabled \n                        ? 'bg-red-400/10 text-red-400 border border-red-400/20 hover:bg-red-400/20'\n                        : 'bg-green-400/10 text-green-400 border border-green-400/20 hover:bg-green-400/20'\n                    }`}>\n                      {threshold.alert_enabled ? t('temperature.disableAlerts', 'Disable Alerts') : t('temperature.enableAlerts', 'Enable Alerts')}\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}