{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/components/RecentActivity.tsx"],"sourcesContent":["'use client';\n\nimport { useTranslation } from '@/lib/useTranslation';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '@/lib/supabase';\n\ninterface RecentActivity {\n  id: string;\n  type: 'ingredient' | 'recipe' | 'menu_dish';\n  name: string;\n  action: 'created' | 'updated';\n  created_at: string;\n}\n\nexport default function RecentActivity() {\n  const { t } = useTranslation();\n  const [activities, setActivities] = useState<RecentActivity[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchRecentActivity = async () => {\n      try {\n        // Fetch recent ingredients\n        const { data: ingredients, error: ingredientsError } = await supabase\n          .from('ingredients')\n          .select('id, ingredient_name, created_at, updated_at')\n          .order('updated_at', { ascending: false })\n          .limit(3);\n\n        // Fetch recent recipes\n        const { data: recipes, error: recipesError } = await supabase\n          .from('recipes')\n          .select('id, recipe_name, created_at, updated_at')\n          .order('updated_at', { ascending: false })\n          .limit(3);\n\n        // Fetch recent menu dishes\n        const { data: menuDishes, error: menuDishesError } = await supabase\n          .from('menu_dishes')\n          .select('id, dish_name, created_at, updated_at')\n          .order('updated_at', { ascending: false })\n          .limit(3);\n\n        // Check for errors and handle gracefully\n        if (ingredientsError || recipesError || menuDishesError) {\n          console.error('Error fetching recent activity:', { ingredientsError, recipesError, menuDishesError });\n          // If tables don't exist yet, just show empty state instead of error\n          setActivities([]);\n          return;\n        }\n\n        // Combine and format activities with proper type checking\n        const allActivities: RecentActivity[] = [\n          ...(ingredients || []).filter((item): item is any => item && typeof item === 'object' && 'id' in item).map(item => ({\n            id: String(item.id),\n            type: 'ingredient' as const,\n            name: String(item.ingredient_name || 'Unknown'),\n            action: 'updated' as const,\n            created_at: item.updated_at || item.created_at || new Date().toISOString()\n          })),\n          ...(recipes || []).filter((item): item is any => item && typeof item === 'object' && 'id' in item).map(item => ({\n            id: String(item.id),\n            type: 'recipe' as const,\n            name: String(item.recipe_name || 'Unknown'),\n            action: 'updated' as const,\n            created_at: item.updated_at || item.created_at || new Date().toISOString()\n          })),\n          ...(menuDishes || []).filter((item): item is any => item && typeof item === 'object' && 'id' in item).map(item => ({\n            id: String(item.id),\n            type: 'menu_dish' as const,\n            name: String(item.dish_name || 'Unknown'),\n            action: 'updated' as const,\n            created_at: item.updated_at || item.created_at || new Date().toISOString()\n          }))\n        ];\n\n        // Sort by date and take the 5 most recent\n        const sortedActivities = allActivities\n          .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\n          .slice(0, 5);\n\n        setActivities(sortedActivities);\n      } catch (error) {\n        // Handle error gracefully\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRecentActivity();\n  }, []);\n\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'ingredient': return 'ü•ò';\n      case 'recipe': return 'üìñ';\n      case 'menu_dish': return 'üçΩÔ∏è';\n      default: return 'üìù';\n    }\n  };\n\n  const getActivityColor = (type: string) => {\n    switch (type) {\n      case 'ingredient': return 'text-[#29E7CD]';\n      case 'recipe': return 'text-[#3B82F6]';\n      case 'menu_dish': return 'text-[#D925C7]';\n      default: return 'text-gray-400';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) return 'Just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    if (diffInHours < 48) return 'Yesterday';\n    return date.toLocaleDateString();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n          <div className=\"space-y-3\">\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-[#2a2a2a] rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-2\"></div>\n                  <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold text-white mb-2\">üìà Recent Activity</h2>\n        <p className=\"text-gray-400\">Latest updates to your kitchen data</p>\n      </div>\n\n      {activities.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <div className=\"text-4xl mb-4\">üìù</div>\n          <h3 className=\"text-lg font-semibold text-white mb-2\">No Recent Activity</h3>\n          <p className=\"text-gray-400\">Start by adding ingredients or creating recipes</p>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {activities.map((activity) => (\n            <div key={activity.id} className=\"flex items-center space-x-4 p-3 rounded-xl hover:bg-[#2a2a2a]/30 transition-colors duration-200\">\n              <div className={`w-10 h-10 rounded-full bg-gradient-to-br from-[#2a2a2a] to-[#1f1f1f] flex items-center justify-center ${getActivityColor(activity.type)}`}>\n                <span className=\"text-lg\">{getActivityIcon(activity.type)}</span>\n              </div>\n              \n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-white font-medium truncate\">\n                  {activity.name}\n                </p>\n                <p className=\"text-sm text-gray-400\">\n                  {activity.type.replace('_', ' ')} {activity.action}\n                </p>\n              </div>\n              \n              <div className=\"text-xs text-gray-500\">\n                {formatDate(activity.created_at)}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}