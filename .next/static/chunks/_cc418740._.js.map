{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/hooks/useCountryFormatting.ts"],"sourcesContent":["import { useCountry } from '@/contexts/CountryContext';\nimport { formatCurrencyWithTax, getTaxBreakdown } from '@/lib/country-config';\n\nexport function useCountryFormatting() {\n  const { countryConfig } = useCountry();\n\n  const formatCurrency = (amount: number, includeTax: boolean = true) => {\n    return formatCurrencyWithTax(amount, countryConfig.code, includeTax);\n  };\n\n  const formatDate = (date: Date, options?: Intl.DateTimeFormatOptions) => {\n    return new Intl.DateTimeFormat(countryConfig.locale, options).format(date);\n  };\n\n  const formatNumber = (num: number, options?: Intl.NumberFormatOptions) => {\n    return new Intl.NumberFormat(countryConfig.locale, options).format(num);\n  };\n\n  const formatPercentage = (value: number) => {\n    return new Intl.NumberFormat(countryConfig.locale, { \n      style: 'percent',\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1\n    }).format(value);\n  };\n\n  const calculateTax = (amount: number) => {\n    return getTaxBreakdown(amount, countryConfig.code);\n  };\n\n  const getTaxInfo = () => ({\n    rate: countryConfig.taxRate,\n    name: countryConfig.taxName,\n    currency: countryConfig.currency\n  });\n\n  return {\n    countryConfig,\n    formatCurrency,\n    formatDate,\n    formatNumber,\n    formatPercentage,\n    calculateTax,\n    getTaxInfo\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,4IAAU;IAEpC,MAAM,iBAAiB,SAAC;YAAgB,8EAAsB;QAC5D,OAAO,IAAA,oJAAqB,EAAC,QAAQ,cAAc,IAAI,EAAE;IAC3D;IAEA,MAAM,aAAa,CAAC,MAAY;QAC9B,OAAO,IAAI,KAAK,cAAc,CAAC,cAAc,MAAM,EAAE,SAAS,MAAM,CAAC;IACvE;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,OAAO,IAAI,KAAK,YAAY,CAAC,cAAc,MAAM,EAAE,SAAS,MAAM,CAAC;IACrE;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,IAAI,KAAK,YAAY,CAAC,cAAc,MAAM,EAAE;YACjD,OAAO;YACP,uBAAuB;YACvB,uBAAuB;QACzB,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,eAAe,CAAC;QACpB,OAAO,IAAA,8IAAe,EAAC,QAAQ,cAAc,IAAI;IACnD;IAEA,MAAM,aAAa,IAAM,CAAC;YACxB,MAAM,cAAc,OAAO;YAC3B,MAAM,cAAc,OAAO;YAC3B,UAAU,cAAc,QAAQ;QAClC,CAAC;IAED,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA1CgB;;QACY,4IAAU","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/LoadingSkeleton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'table' | 'chart' | 'list' | 'form' | 'stats' | 'text' | 'button';\n  className?: string;\n  count?: number;\n  height?: string;\n  width?: string;\n}\n\nexport function LoadingSkeleton({ \n  variant = 'card', \n  className = '', \n  count = 1, \n  height,\n  width \n}: LoadingSkeletonProps) {\n  const baseClasses = 'animate-pulse bg-[#2a2a2a] rounded-xl';\n  \n  const variants = {\n    card: 'h-32',\n    table: 'h-64',\n    chart: 'h-80',\n    list: 'h-16',\n    form: 'h-96',\n    stats: 'h-24',\n    text: 'h-4',\n    button: 'h-10 w-24'\n  };\n\n  const skeletonClasses = `${baseClasses} ${variants[variant]} ${className}`;\n  const style = {\n    ...(height && { height }),\n    ...(width && { width })\n  };\n\n  if (count === 1) {\n    return <div className={skeletonClasses} style={style}></div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className={skeletonClasses} style={style}></div>\n      ))}\n    </div>\n  );\n}\n\n// Specialized skeleton components for common patterns\nexport function PageSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header skeleton */}\n        <div className=\"animate-pulse mb-8\">\n          <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n        </div>\n\n        {/* Action buttons skeleton */}\n        <div className=\"flex gap-3 mb-8\">\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-32 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-40 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-28 animate-pulse\"></div>\n        </div>\n\n        {/* Main content skeleton */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-[#2a2a2a] rounded-xl\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableSkeleton({ rows = 5, columns = 4 }: { rows?: number; columns?: number }) {\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-6 py-4 border-b border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex gap-4\">\n            {Array.from({ length: columns }).map((_, i) => (\n              <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-24\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Rows */}\n      <div className=\"divide-y divide-[#2a2a2a]\">\n        {Array.from({ length: rows }).map((_, i) => (\n          <div key={i} className=\"px-6 py-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"flex gap-4\">\n                {Array.from({ length: columns }).map((_, j) => (\n                  <div key={j} className=\"h-4 bg-[#2a2a2a] rounded w-20\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ChartSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n        <div className=\"h-80 bg-[#2a2a2a] rounded-xl\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CardGridSkeleton({ count = 6 }: { count?: number }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-3\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function StatsGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-3\"></div>\n          <div className=\"h-8 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function FormSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i}>\n              <div className=\"h-4 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n              <div className=\"h-10 bg-[#2a2a2a] rounded-xl\"></div>\n            </div>\n          ))}\n          <div className=\"h-10 bg-[#2a2a2a] rounded-xl w-24\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Landing page specific skeletons\nexport function HeroSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] flex items-center justify-center\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-16 bg-[#2a2a2a] rounded-3xl w-2/3 mb-8 mx-auto\"></div>\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/2 mb-12 mx-auto\"></div>\n          <div className=\"flex justify-center gap-4 mb-16\">\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-48\"></div>\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-40\"></div>\n          </div>\n          <div className=\"h-96 bg-[#2a2a2a] rounded-3xl\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function PricingSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-[#2a2a2a] rounded-xl w-1/3 mb-6\"></div>\n        <div className=\"h-12 bg-[#2a2a2a] rounded-xl w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-8\"></div>\n        <div className=\"space-y-4 mb-8\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-full\"></div>\n          ))}\n        </div>\n        <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-full\"></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/temperature/components/RechartsTemperatureChart.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  ReferenceLine,\n} from 'recharts';\n\ninterface TemperatureLog {\n  id: string;\n  log_date: string;\n  log_time: string;\n  temperature_celsius: number;\n  location: string | null;\n  temperature_type: string;\n  notes: string | null;\n  photo_url: string | null;\n  logged_by: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface Equipment {\n  id: string;\n  name: string;\n  equipment_type: string;\n  location: string | null;\n  min_temp_celsius: number | null;\n  max_temp_celsius: number | null;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface RechartsTemperatureChartProps {\n  logs: TemperatureLog[];\n  equipment: Equipment | null;\n  timeFilter: string;\n}\n\nexport default function RechartsTemperatureChart({\n  logs,\n  equipment,\n  timeFilter,\n}: RechartsTemperatureChartProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Filter logs by equipment and time\n  const getFilteredLogs = () => {\n    if (!equipment || !equipment.name) return [];\n\n    // Filter by equipment\n    const equipmentLogs = logs.filter(log => log.location === equipment.name);\n    \n    if (equipmentLogs.length === 0) return [];\n\n    // Sort by timestamp\n    const sortedLogs = equipmentLogs.sort((a, b) => {\n      const dateA = new Date(`${a.log_date}T${a.log_time}`);\n      const dateB = new Date(`${b.log_date}T${b.log_time}`);\n      return dateA.getTime() - dateB.getTime();\n    });\n\n    // Apply time filter\n    const now = new Date();\n    const mostRecentLog = sortedLogs[sortedLogs.length - 1];\n    const mostRecentTime = new Date(`${mostRecentLog.log_date}T${mostRecentLog.log_time}`);\n\n    let cutoffTime: Date;\n    switch (timeFilter) {\n      case '24h':\n        cutoffTime = new Date(mostRecentTime.getTime() - 24 * 60 * 60 * 1000);\n        break;\n      case '7d':\n        cutoffTime = new Date(mostRecentTime.getTime() - 7 * 24 * 60 * 60 * 1000);\n        break;\n      case '30d':\n        cutoffTime = new Date(mostRecentTime.getTime() - 30 * 24 * 60 * 60 * 1000);\n        break;\n      default:\n        return sortedLogs;\n    }\n\n    return sortedLogs.filter(log => {\n      const logTime = new Date(`${log.log_date}T${log.log_time}`);\n      return logTime >= cutoffTime;\n    });\n  };\n\n  const filteredLogs = getFilteredLogs();\n\n  // Transform data for Recharts\n  const chartData = filteredLogs.map(log => ({\n    timestamp: `${log.log_date}T${log.log_time}`,\n    temperature: log.temperature_celsius,\n    time: new Date(`${log.log_date}T${log.log_time}`).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    }),\n    date: new Date(`${log.log_date}T${log.log_time}`).toLocaleDateString(),\n  }));\n\n  // Handle loading state\n  useEffect(() => {\n    if (chartData.length > 0 && equipment && equipment.name) {\n      const timer = setTimeout(() => {\n        setIsLoaded(true);\n      }, 200);\n      \n      return () => clearTimeout(timer);\n    } else {\n      setIsLoaded(false);\n    }\n  }, [chartData.length, equipment?.name, timeFilter]);\n\n  // Don't render chart if not loaded, no data, or invalid equipment\n  if (!isLoaded || chartData.length === 0 || !equipment || !equipment.name) {\n    return (\n      <div className=\"w-full h-96 bg-gray-800 rounded-lg flex items-center justify-center relative overflow-hidden\">\n        {/* Material Design 3 Loading Animation */}\n        <div className=\"absolute inset-0\">\n          {/* Animated background lines */}\n          <div className=\"absolute inset-0 opacity-20\">\n            <div className=\"h-full w-full bg-gradient-to-r from-transparent via-gray-600 to-transparent animate-pulse\"></div>\n          </div>\n          \n          {/* Animated line drawing effect */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"w-3/4 h-1 bg-gradient-to-r from-transparent via-[#29E7CD] to-transparent rounded-full animate-pulse\"></div>\n          </div>\n          \n          {/* Animated dots */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"flex space-x-2\">\n              {[0, 1, 2, 3, 4].map((i) => (\n                <div\n                  key={i}\n                  className=\"w-2 h-2 bg-[#29E7CD] rounded-full animate-pulse\"\n                  style={{\n                    animationDelay: `${i * 0.2}s`,\n                    animationDuration: '1.5s'\n                  }}\n                ></div>\n              ))}\n            </div>\n          </div>\n        </div>\n        \n        {/* Loading text */}\n        <div className=\"text-gray-400 text-sm font-medium relative z-10\">\n          Drawing temperature path...\n        </div>\n      </div>\n    );\n  }\n\n  // Custom tooltip component\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-gray-800 border border-[#29E7CD] rounded-xl p-3 shadow-lg\">\n          <p className=\"text-white font-medium text-sm\">\n            {data.date} at {data.time}\n          </p>\n          <p className=\"text-[#29E7CD] font-semibold text-lg\">\n            {data.temperature}°C\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Custom tick formatter for X-axis\n  const formatXAxisTick = (tickItem: string) => {\n    const date = new Date(tickItem);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"w-full h-96\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={chartData}\n          margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n        >\n          <CartesianGrid \n            strokeDasharray=\"3 3\" \n            stroke=\"#2a2a2a\" \n            strokeOpacity={0.5}\n          />\n          \n          <XAxis\n            dataKey=\"timestamp\"\n            tickFormatter={formatXAxisTick}\n            stroke=\"#9ca3af\"\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n            interval=\"preserveStartEnd\"\n          />\n          \n          <YAxis\n            stroke=\"#9ca3af\"\n            fontSize={12}\n            tickLine={false}\n            axisLine={false}\n            domain={['dataMin - 2', 'dataMax + 2']}\n          />\n          \n          <Tooltip content={<CustomTooltip />} />\n          \n          {/* Threshold lines */}\n          {equipment.min_temp_celsius !== null && (\n            <ReferenceLine\n              y={equipment.min_temp_celsius}\n              stroke=\"#ef4444\"\n              strokeDasharray=\"5 5\"\n              strokeWidth={2}\n              label={{\n                value: `Min: ${equipment.min_temp_celsius}°C`,\n                position: 'insideTopLeft',\n                style: { fill: '#ef4444', fontSize: '12px' }\n              }}\n            />\n          )}\n          \n          {equipment.max_temp_celsius !== null && (\n            <ReferenceLine\n              y={equipment.max_temp_celsius}\n              stroke=\"#ef4444\"\n              strokeDasharray=\"5 5\"\n              strokeWidth={2}\n              label={{\n                value: `Max: ${equipment.max_temp_celsius}°C`,\n                position: 'insideTopRight',\n                style: { fill: '#ef4444', fontSize: '12px' }\n              }}\n            />\n          )}\n          \n          <Line\n            type=\"monotone\"\n            dataKey=\"temperature\"\n            stroke=\"#29E7CD\"\n            strokeWidth={3}\n            dot={{\n              fill: '#29E7CD',\n              stroke: '#ffffff',\n              strokeWidth: 2,\n              r: 4,\n            }}\n            activeDot={{\n              r: 6,\n              stroke: '#29E7CD',\n              strokeWidth: 2,\n              fill: '#ffffff',\n            }}\n            animationDuration={1000}\n            animationEasing=\"ease-in-out\"\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/temperature/components/CleanTemperatureChart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { TemperatureLog, TemperatureEquipment } from '../types';\nimport { format } from 'date-fns';\nimport './temperature-charts.css';\nimport RechartsTemperatureChart from './RechartsTemperatureChart';\n\ninterface CleanTemperatureChartProps {\n  logs: TemperatureLog[];\n  equipment: TemperatureEquipment;\n  timeFilter: '24h' | '7d' | '30d' | 'all';\n}\n\nexport default function CleanTemperatureChart({ logs, equipment, timeFilter }: CleanTemperatureChartProps) {\n  const chartRef = useRef<HTMLDivElement>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // Filter logs based on time range and equipment\n  const getFilteredLogs = () => {\n    // First filter by equipment name (matching log.location with equipment.name)\n    let equipmentFilteredLogs = logs;\n    if (equipment && equipment.name) {\n      equipmentFilteredLogs = logs.filter(log => log.location === equipment.name);\n    }\n\n    console.log('🔍 Filter Debug:', {\n      totalLogs: logs.length,\n      equipmentName: equipment?.name,\n      equipmentFilteredCount: equipmentFilteredLogs.length,\n      timeFilter,\n      sampleEquipmentLogs: equipmentFilteredLogs.slice(0, 3)\n    });\n    console.log('🔍 Filter Debug - Expanded:', \n      'Total logs:', logs.length,\n      'Equipment name:', equipment?.name,\n      'Equipment filtered count:', equipmentFilteredLogs.length,\n      'Time filter:', timeFilter,\n      'Sample logs:', equipmentFilteredLogs.slice(0, 3)\n    );\n    \n    // If we have logs but they're all from the same date (historical data),\n    // don't apply time filtering - just return all equipment-filtered logs\n    const uniqueDates = [...new Set(equipmentFilteredLogs.map(log => log.log_date))];\n    if (uniqueDates.length === 1 && equipmentFilteredLogs.length > 0) {\n      return equipmentFilteredLogs;\n    }\n    \n    // For historical data that doesn't extend to current date, be more flexible with time filtering\n    const now = new Date();\n    const cutoffDate = new Date();\n    \n    switch (timeFilter) {\n      case '24h':\n        // For 24h, if we have historical data, show the most recent 24 hours of available data\n        if (equipmentFilteredLogs.length > 0) {\n          const mostRecentLog = equipmentFilteredLogs.reduce((latest, log) => {\n            const logDate = new Date(`${log.log_date} ${log.log_time}`);\n            const latestDate = new Date(`${latest.log_date} ${latest.log_time}`);\n            return logDate > latestDate ? log : latest;\n          });\n          const mostRecentDate = new Date(`${mostRecentLog.log_date} ${mostRecentLog.log_time}`);\n          cutoffDate.setTime(mostRecentDate.getTime() - (24 * 60 * 60 * 1000));\n        } else {\n          cutoffDate.setHours(now.getHours() - 24);\n        }\n        break;\n      case '7d':\n        // For 7d, if we have historical data, show the most recent 7 days of available data\n        if (equipmentFilteredLogs.length > 0) {\n          const mostRecentLog = equipmentFilteredLogs.reduce((latest, log) => {\n            const logDate = new Date(`${log.log_date} ${log.log_time}`);\n            const latestDate = new Date(`${latest.log_date} ${latest.log_time}`);\n            return logDate > latestDate ? log : latest;\n          });\n          const mostRecentDate = new Date(`${mostRecentLog.log_date} ${mostRecentLog.log_time}`);\n          cutoffDate.setTime(mostRecentDate.getTime() - (7 * 24 * 60 * 60 * 1000));\n        } else {\n          cutoffDate.setDate(now.getDate() - 7);\n        }\n        break;\n      case '30d':\n        // For 30d, if we have historical data, show the most recent 30 days of available data\n        if (equipmentFilteredLogs.length > 0) {\n          const mostRecentLog = equipmentFilteredLogs.reduce((latest, log) => {\n            const logDate = new Date(`${log.log_date} ${log.log_time}`);\n            const latestDate = new Date(`${latest.log_date} ${latest.log_time}`);\n            return logDate > latestDate ? log : latest;\n          });\n          const mostRecentDate = new Date(`${mostRecentLog.log_date} ${mostRecentLog.log_time}`);\n          cutoffDate.setTime(mostRecentDate.getTime() - (30 * 24 * 60 * 60 * 1000));\n        } else {\n          cutoffDate.setDate(now.getDate() - 30);\n        }\n        break;\n      case 'all':\n      default:\n        return equipmentFilteredLogs;\n    }\n    \n    return equipmentFilteredLogs.filter(log => {\n      const logDate = new Date(`${log.log_date} ${log.log_time}`);\n      return logDate >= cutoffDate;\n    });\n  };\n\n  const filteredLogs = getFilteredLogs();\n  \n  \n  const chartData = filteredLogs\n    .map(log => {\n      const timestamp = `${log.log_date} ${log.log_time}`;\n      const timestampMs = new Date(timestamp).getTime();\n      return {\n        timestamp: timestamp,\n        timestampMs: timestampMs,\n        temperature: log.temperature_celsius,\n        date: log.log_date,\n        time: log.log_time,\n      };\n    })\n    .sort((a, b) => a.timestampMs - b.timestampMs);\n\n  // Debug the chart data structure\n  console.log('🔍 Chart Data Structure:', {\n    chartDataLength: chartData.length,\n    sampleChartData: chartData.slice(0, 3),\n    timestampFormat: chartData.length > 0 ? chartData[0].timestamp : 'N/A',\n    temperatureValues: chartData.slice(0, 3).map(d => d.temperature)\n  });\n  console.log('🔍 Chart Data Structure - Expanded:',\n    'Chart data length:', chartData.length,\n    'Sample chart data:', chartData.slice(0, 3),\n    'Timestamp format:', chartData.length > 0 ? chartData[0].timestamp : 'N/A',\n    'Temperature values:', chartData.slice(0, 3).map(d => d.temperature)\n  );\n\n  // Handle loading state to prevent FOUC and stray chart elements\n  useEffect(() => {\n    // Show chart immediately to prevent FOUC\n    if (filteredLogs.length > 0 && equipment && equipment.name) {\n      setIsLoaded(true);\n    } else {\n      setIsLoaded(false);\n    }\n  }, [filteredLogs.length, equipment?.name, timeFilter]);\n\n  const isTemperatureInRange = (temp: number) => {\n    if (equipment.min_temp_celsius === null || equipment.max_temp_celsius === null) {\n      return true;\n    }\n    return temp >= equipment.min_temp_celsius && temp <= equipment.max_temp_celsius;\n  };\n\n  // Adaptive features based on data density and time range\n  const getAdaptiveSettings = () => {\n    const dataLength = chartData.length;\n    const timeRange = timeFilter;\n    \n    // Adaptive data sampling for performance\n    const shouldSample = dataLength > 1000;\n    const sampleRate = dataLength > 5000 ? 5 : dataLength > 2000 ? 3 : 1;\n    \n    // Adaptive chart height based on data density\n    const chartHeight = dataLength > 500 ? 200 : dataLength > 100 ? 250 : 300;\n    \n    // Adaptive dot size based on data density\n    const dotSize = dataLength > 1000 ? 2 : dataLength > 500 ? 3 : 4;\n    const showDots = dataLength < 200;\n    \n    // Adaptive line width\n    const lineWidth = dataLength > 1000 ? 1 : dataLength > 500 ? 2 : 3;\n    \n    // Smart X-axis interval based on data density and time range\n    const getXAxisInterval = () => {\n      if (dataLength < 20) return 0; // Show all labels for small datasets\n      if (dataLength < 50) return 1; // Show every other label\n      if (dataLength < 100) return 2; // Show every 3rd label\n      if (dataLength < 200) return 3; // Show every 4th label\n      if (dataLength < 500) return 4; // Show every 5th label\n      if (dataLength < 1000) return 5; // Show every 6th label\n      return 6; // Show every 7th label for very dense data\n    };\n    \n    return {\n      shouldSample,\n      sampleRate,\n      chartHeight,\n      dotSize,\n      showDots,\n      lineWidth,\n      xAxisInterval: getXAxisInterval()\n    };\n  };\n\n  const adaptiveSettings = getAdaptiveSettings();\n  \n  // Sample data if needed for performance\n  const getOptimizedData = () => {\n    if (!adaptiveSettings.shouldSample) {\n      return chartData;\n    }\n    \n    const sampled = [];\n    for (let i = 0; i < chartData.length; i += adaptiveSettings.sampleRate) {\n      sampled.push(chartData[i]);\n    }\n    \n    // Always include the last point\n    if (chartData.length > 0 && sampled[sampled.length - 1] !== chartData[chartData.length - 1]) {\n      sampled.push(chartData[chartData.length - 1]);\n    }\n    \n    return sampled;\n  };\n\n  const optimizedData = getOptimizedData();\n  \n  // Add out-of-range highlighting to chart data\n  const enhancedData = optimizedData.map((point, index) => ({\n    ...point,\n    isOutOfRange: !isTemperatureInRange(point.temperature),\n    isRecentOutOfRange: !isTemperatureInRange(point.temperature) && index >= optimizedData.length - 5 // Last 5 points\n  }));\n\n  // Debug logging to understand data flow\n  console.log('🔍 Chart Debug Info:', {\n    equipmentName: equipment?.name,\n    filteredLogsCount: filteredLogs.length,\n    chartDataCount: chartData.length,\n    optimizedDataCount: optimizedData.length,\n    enhancedDataCount: enhancedData.length,\n    sampleData: enhancedData.slice(0, 3),\n    timeFilter,\n    isLoaded\n  });\n  console.log('🔍 Chart Debug Info - Expanded:',\n    'Equipment name:', equipment?.name,\n    'Filtered logs count:', filteredLogs.length,\n    'Chart data count:', chartData.length,\n    'Optimized data count:', optimizedData.length,\n    'Enhanced data count:', enhancedData.length,\n    'Sample enhanced data:', enhancedData.slice(0, 3),\n    'Time filter:', timeFilter,\n    'Is loaded:', isLoaded\n  );\n  \n  const latestLog = filteredLogs.length > 0 ? filteredLogs[filteredLogs.length - 1] : null;\n  const latestTemperature = latestLog?.temperature_celsius;\n  const latestStatus = latestTemperature !== null && latestTemperature !== undefined\n    ? isTemperatureInRange(latestTemperature) ? 'In Range' : 'Out of Range'\n    : 'N/A';\n  const statusColor = latestStatus === 'In Range' ? 'text-green-400' : 'text-red-400';\n  \n  // Check for recent out-of-range temperatures\n  const hasRecentOutOfRange = enhancedData.some(point => point.isRecentOutOfRange);\n  \n  // Daily compliance tracking\n  const getDailyCompliance = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const todayLogs = filteredLogs.filter(log => log.log_date === today);\n    \n    return {\n      hasMinimumLogs: todayLogs.length >= 2,\n      logCount: todayLogs.length,\n      hasFoodTemp: todayLogs.some(log => log.temperature_type === 'food' || log.temperature_type === 'Food'),\n      lastLogTime: todayLogs.length > 0 ? todayLogs[todayLogs.length - 1].log_time : null\n    };\n  };\n  \n  const dailyCompliance = getDailyCompliance();\n  \n  // Smart alerts for unusual patterns (only non-redundant alerts)\n  const getSmartAlerts = () => {\n    const alerts = [];\n    \n    // Only show alerts that aren't already covered by daily compliance status\n    // Alert: No recent logs (if no logs in last 4 hours)\n    const now = new Date();\n    const fourHoursAgo = new Date(now.getTime() - 4 * 60 * 60 * 1000);\n    const recentLogs = filteredLogs.filter(log => {\n      const logTime = new Date(`${log.log_date} ${log.log_time}`);\n      return logTime >= fourHoursAgo;\n    });\n    \n    if (recentLogs.length === 0 && filteredLogs.length > 0) {\n      alerts.push({\n        type: 'warning',\n        message: 'No logs in last 4 hours',\n        icon: '⏰'\n      });\n    }\n    \n    return alerts;\n  };\n  \n  const smartAlerts = getSmartAlerts();\n\n\n\n  const formatXAxisLabel = (tickItem: string) => {\n    const date = new Date(tickItem);\n    \n    // Use consistent formatting to prevent hydration mismatches\n    switch (timeFilter) {\n      case '24h':\n        return date.getHours().toString().padStart(2, '0') + ':' + \n               date.getMinutes().toString().padStart(2, '0');\n      case '7d':\n        const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        return weekdays[date.getDay()] + ' ' + date.getDate();\n      case '30d':\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                       'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return date.getDate() + ' ' + months[date.getMonth()];\n      case 'all':\n      default:\n        const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return date.getDate() + ' ' + shortMonths[date.getMonth()];\n    }\n  };\n\n  const formatTooltipLabel = (label: string) => {\n    const date = new Date(label);\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n                   'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}, ${hours}:${minutes}`;\n  };\n\n  const formatTooltipValue = (value: number) => {\n    return `${value?.toFixed(1)}°C`;\n  };\n\n  // Clean up event listeners\n  useEffect(() => {\n    const handleGlobalMouseUp = () => {\n      // Handle mouse up events if needed\n    };\n    const handleGlobalTouchEnd = () => {\n      // Handle touch end events if needed\n    };\n    \n    document.addEventListener('mouseup', handleGlobalMouseUp);\n    document.addEventListener('touchend', handleGlobalTouchEnd);\n    \n    return () => {\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n    };\n  }, []);\n\n  if (!chartData || chartData.length === 0) {\n    return (\n      <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-white\">{equipment.name}</h3>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-2 h-2 rounded-full ${statusColor.replace('text-', 'bg-')}`}></div>\n            <span className={`text-sm ${statusColor}`}>{latestStatus}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n          <div className=\"w-20 h-20 bg-gradient-to-br from-[#29E7CD]/20 to-[#D925C7]/20 rounded-full flex items-center justify-center mb-4\">\n            <svg className=\"w-10 h-10 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n            </svg>\n          </div>\n          <h4 className=\"text-lg font-medium text-white mb-2\">No Temperature Data</h4>\n          <p className=\"text-gray-400 text-sm max-w-sm\">\n            No temperature logs found for this equipment.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n\n  // Don't render chart if not loaded, no data, or invalid equipment\n  if (!isLoaded || chartData.length === 0 || !equipment || !equipment.name) {\n    return (\n      <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded w-1/3 mb-4\"></div>\n        <div className=\"h-8 bg-[#2a2a2a] rounded w-1/4 mb-4\"></div>\n        <div className=\"h-48 bg-[#2a2a2a] rounded\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className={`bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] temperature-chart-container`}\n      ref={chartRef}\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"text-lg font-semibold text-white chart-title\">{equipment.name}</h3>\n          {hasRecentOutOfRange && (\n            <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n          )}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${statusColor.replace('text-', 'bg-')}`}></div>\n          <span className={`text-sm ${statusColor}`}>{latestStatus}</span>\n        </div>\n      </div>\n      \n      <div className=\"text-2xl font-bold text-white mb-2\">\n        {latestTemperature ? `${latestTemperature.toFixed(1)}°C` : '--'}\n      </div>\n      \n      <div className=\"text-xs text-gray-400 mb-4\">\n        <div className=\"flex items-center justify-between\">\n          <span>\n            {optimizedData.length} of {chartData.length} readings\n            {adaptiveSettings.shouldSample && (\n              <span className=\"ml-2 text-yellow-400\">\n                (sampled for performance)\n              </span>\n            )}\n          </span>\n          <span className=\"text-[#29E7CD]\">\n            {timeFilter.toUpperCase()} view\n          </span>\n        </div>\n        \n        {/* Daily Compliance Status */}\n        <div className=\"mt-2 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className={`flex items-center space-x-1 ${\n              dailyCompliance.hasMinimumLogs ? 'text-green-400' : 'text-red-400'\n            }`}>\n              <span>{dailyCompliance.hasMinimumLogs ? '✅' : '❌'}</span>\n              <span>{dailyCompliance.logCount}/2+ logs today</span>\n            </div>\n            <div className={`flex items-center space-x-1 ${\n              dailyCompliance.hasFoodTemp ? 'text-green-400' : 'text-yellow-400'\n            }`}>\n              <span>{dailyCompliance.hasFoodTemp ? '✅' : '📋'}</span>\n              <span>{dailyCompliance.hasFoodTemp ? 'Food temped' : 'No food temp'}</span>\n            </div>\n          </div>\n          {dailyCompliance.lastLogTime && (\n            <span className=\"text-gray-500\">\n              Last: {dailyCompliance.lastLogTime}\n            </span>\n          )}\n        </div>\n        \n        {/* Smart Alerts */}\n        {smartAlerts.length > 0 && (\n          <div className=\"mt-2 space-y-1\">\n            {smartAlerts.map((alert, index) => (\n              <div\n                key={index}\n                className={`flex items-center space-x-2 px-2 py-1 rounded text-xs ${\n                  alert.type === 'critical' \n                    ? 'bg-red-500/10 text-red-400 border border-red-500/20'\n                    : alert.type === 'warning'\n                    ? 'bg-yellow-500/10 text-yellow-400 border border-yellow-500/20'\n                    : 'bg-blue-500/10 text-blue-400 border border-blue-500/20'\n                }`}\n              >\n                <span>{alert.icon}</span>\n                <span>{alert.message}</span>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n\n\n      {/* Main Chart.js Chart */}\n        <div className=\"w-full\" style={{ height: `${adaptiveSettings.chartHeight}px` }}>\n          <RechartsTemperatureChart\n            logs={logs}\n            equipment={equipment}\n            timeFilter={timeFilter}\n          />\n        </div>\n\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1782, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/temperature/components/TemperatureAnalyticsTab.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { TemperatureLog, TemperatureEquipment } from '../types';\nimport CleanTemperatureChart from './CleanTemperatureChart';\nimport { format } from 'date-fns';\nimport './temperature-charts.css';\nimport { LoadingSkeleton } from '@/components/ui/LoadingSkeleton';\n\ninterface TemperatureAnalyticsTabProps {\n  allLogs: TemperatureLog[];\n  equipment: TemperatureEquipment[];\n}\n\nexport default function TemperatureAnalyticsTab({ allLogs, equipment }: TemperatureAnalyticsTabProps) {\n  const { t } = useTranslation();\n  const [timeFilter, setTimeFilter] = useState<'24h' | '7d' | '30d' | 'all'>('24h');\n  const [dateOffset, setDateOffset] = useState(0); // 0 for today, 1 for yesterday, etc.\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedEquipmentId, setSelectedEquipmentId] = useState<string | null>(null);\n  const [hasManuallyChangedFilter, setHasManuallyChangedFilter] = useState(false);\n\n  // Handle loading state to prevent FOUC - wait for data to be ready\n  useEffect(() => {\n    // Show content immediately to prevent FOUC\n    if (equipment.length > 0 && allLogs.length > 0) {\n      setIsLoaded(true);\n        \n        // Smart equipment selection logic\n        if (!selectedEquipmentId && equipment.length > 0) {\n          // 1. First try to find equipment that is out of range\n          const outOfRangeEquipment = findOutOfRangeEquipment();\n          if (outOfRangeEquipment) {\n            setSelectedEquipmentId(outOfRangeEquipment.id);\n          } else {\n            // 2. Fallback to first equipment\n            setSelectedEquipmentId(equipment[0].id);\n          }\n        }\n        \n        // Smart time filter selection - find the best filter with data (only if not manually changed)\n        if (!hasManuallyChangedFilter) {\n          const bestTimeFilter = findBestTimeFilter();\n          if (bestTimeFilter !== timeFilter) {\n            setTimeFilter(bestTimeFilter);\n          }\n        }\n    }\n  }, [equipment.length, allLogs.length, dateOffset, selectedEquipmentId, hasManuallyChangedFilter]);\n\n  const getFilteredLogs = (equipment: TemperatureEquipment) => {\n    // Filter logs by equipment name (location field in logs matches equipment name)\n    let filtered = allLogs.filter(log => log.location === equipment.name);\n\n    const today = new Date();\n    today.setDate(today.getDate() - dateOffset);\n    const selectedDateString = format(today, 'yyyy-MM-dd');\n\n    if (timeFilter === '24h') {\n      // For 24h, look at the last 24 hours from now\n      const now = new Date();\n      const twentyFourHoursAgo = new Date(now.getTime() - (24 * 60 * 60 * 1000));\n      \n      filtered = filtered.filter(log => {\n        const logDateTime = new Date(`${log.log_date}T${log.log_time}`);\n        return logDateTime >= twentyFourHoursAgo && logDateTime <= now;\n      });\n    } else if (timeFilter === '7d') {\n      const sevenDaysAgo = new Date(today);\n      sevenDaysAgo.setDate(today.getDate() - 7);\n      filtered = filtered.filter(log => new Date(log.log_date) >= sevenDaysAgo);\n    } else if (timeFilter === '30d') {\n      const thirtyDaysAgo = new Date(today);\n      thirtyDaysAgo.setDate(today.getDate() - 30);\n      filtered = filtered.filter(log => new Date(log.log_date) >= thirtyDaysAgo);\n    }\n    // 'all' filter doesn't need further date filtering\n\n    return filtered;\n  };\n\n  const getSelectedEquipment = () => {\n    return equipment.find(eq => eq.id === selectedEquipmentId) || null;\n  };\n\n  // Check if there's data for a specific time filter\n  const hasDataForTimeFilter = (timeFilter: '24h' | '7d' | '30d' | 'all') => {\n    const today = new Date();\n    today.setDate(today.getDate() - dateOffset);\n    const selectedDateString = format(today, 'yyyy-MM-dd');\n\n    let filteredLogs = allLogs;\n    if (timeFilter === '24h') {\n      // For 24h, look at the last 24 hours from now\n      const now = new Date();\n      const twentyFourHoursAgo = new Date(now.getTime() - (24 * 60 * 60 * 1000));\n      \n      filteredLogs = allLogs.filter(log => {\n        const logDateTime = new Date(`${log.log_date}T${log.log_time}`);\n        return logDateTime >= twentyFourHoursAgo && logDateTime <= now;\n      });\n    } else if (timeFilter === '7d') {\n      const sevenDaysAgo = new Date(today);\n      sevenDaysAgo.setDate(today.getDate() - 7);\n      filteredLogs = allLogs.filter(log => new Date(log.log_date) >= sevenDaysAgo);\n    } else if (timeFilter === '30d') {\n      const thirtyDaysAgo = new Date(today);\n      thirtyDaysAgo.setDate(today.getDate() - 30);\n      filteredLogs = allLogs.filter(log => new Date(log.log_date) >= thirtyDaysAgo);\n    }\n\n    return filteredLogs.length > 0;\n  };\n\n  // Find the best time filter with data\n  const findBestTimeFilter = () => {\n    const timeFilters: ('24h' | '7d' | '30d' | 'all')[] = ['24h', '7d', '30d', 'all'];\n    for (const filter of timeFilters) {\n      if (hasDataForTimeFilter(filter)) {\n        return filter;\n      }\n    }\n    return '24h'; // fallback\n  };\n\n  // Find equipment that is out of range\n  const findOutOfRangeEquipment = () => {\n    return equipment.find(item => {\n      const status = getEquipmentStatus(item);\n      return status.status === 'out-of-range';\n    });\n  };\n\n\n\n  const getEquipmentStatus = (equipment: TemperatureEquipment) => {\n    const logs = getFilteredLogs(equipment);\n    if (logs.length === 0) return { status: 'no-data', color: 'text-gray-400' };\n    \n    const latestLog = logs[logs.length - 1];\n    const latestTemp = latestLog.temperature_celsius;\n    \n    if (equipment.min_temp_celsius === null || equipment.max_temp_celsius === null) {\n      return { status: 'no-thresholds', color: 'text-blue-400' };\n    }\n    \n    const inRange = latestTemp >= equipment.min_temp_celsius && latestTemp <= equipment.max_temp_celsius;\n    return {\n      status: inRange ? 'in-range' : 'out-of-range',\n      color: inRange ? 'text-green-400' : 'text-red-400',\n      temperature: latestTemp\n    };\n  };\n\n  // Show loading skeleton if data isn't ready\n  if (!isLoaded) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Time Period Filter Skeleton */}\n        <div className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] flex flex-wrap gap-2\">\n          {['24h', '7d', '30d', 'all'].map(filter => (\n            <div key={filter} className=\"px-4 py-2 rounded-xl bg-gray-700 w-20 h-8\"></div>\n          ))}\n        </div>\n\n        {/* Equipment Cards Skeleton */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-3\">\n          <LoadingSkeleton variant=\"card\" count={6} height=\"80px\" />\n        </div>\n\n        {/* Charts Skeleton */}\n        <div className=\"space-y-6\">\n          <LoadingSkeleton variant=\"chart\" count={3} height=\"320px\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Time Period Filter */}\n      <div className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] flex flex-wrap gap-2\">\n        {isLoaded ? (\n          ['24h', '7d', '30d', 'all'].map(filter => (\n            <button\n              key={filter}\n              onClick={() => {\n                setTimeFilter(filter as '24h' | '7d' | '30d' | 'all');\n                setHasManuallyChangedFilter(true);\n              }}\n              className={`px-4 py-2 rounded-xl text-sm font-medium transition-colors ${\n                timeFilter === filter ? 'bg-[#29E7CD] text-black' : 'bg-transparent text-gray-400 hover:text-white hover:bg-[#2a2a2a]'\n              }`}\n            >\n              {t(`timeFilter.${filter}`, filter === '24h' ? 'Last 24h' : filter === '7d' ? 'Last 7 Days' : filter === '30d' ? 'Last 30 Days' : 'All Time')}\n            </button>\n          ))\n        ) : (\n          // Loading skeleton for time filter buttons\n          <LoadingSkeleton variant=\"button\" count={4} />\n        )}\n      </div>\n\n      {/* Equipment Status Overview - Smart Responsive Grid */}\n      <div className={`grid gap-3 ${\n        equipment.length <= 2 ? 'grid-cols-1 sm:grid-cols-2' :\n        equipment.length <= 4 ? 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4' :\n        equipment.length <= 6 ? 'grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6' :\n        equipment.length <= 12 ? 'grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6' :\n        'grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6'\n      }`}>\n        {isLoaded ? equipment.map(item => {\n          const status = getEquipmentStatus(item);\n          const logs = getFilteredLogs(item);\n          const isOutOfRange = status.status === 'out-of-range';\n          const needsSetup = status.status === 'no-thresholds';\n          const isSelected = selectedEquipmentId === item.id;\n          const isCompact = equipment.length > 6;\n\n          return (\n            <button\n              key={item.id}\n              onClick={() => setSelectedEquipmentId(item.id)}\n              className={`group bg-[#1f1f1f] rounded-xl shadow-lg border transition-all duration-300 hover:shadow-xl hover:-translate-y-0.5 text-left w-full ${\n                isCompact ? 'p-3' : 'p-4'\n              } ${\n                isSelected\n                  ? 'border-[#29E7CD] ring-2 ring-[#29E7CD]/20 bg-[#29E7CD]/5'\n                  : isOutOfRange \n                  ? 'border-red-500/50 hover:border-red-500' \n                  : needsSetup \n                  ? 'border-yellow-500/50 hover:border-yellow-500'\n                  : 'border-[#2a2a2a] hover:border-[#29E7CD]/50'\n              }`}\n            >\n              {/* Header with status indicator */}\n              <div className={`flex items-center justify-between ${isCompact ? 'mb-2' : 'mb-3'}`}>\n                <div className=\"flex-1 min-w-0\">\n                  <h3 className={`font-semibold text-white truncate group-hover:text-[#29E7CD] transition-colors ${\n                    isCompact ? 'text-xs' : 'text-sm'\n                  }`}>\n                    {item.name}\n                  </h3>\n                  <div className=\"flex items-center space-x-1.5 mt-0.5\">\n                    <div className={`rounded-full ${\n                      isCompact ? 'w-1 h-1' : 'w-1.5 h-1.5'\n                    } ${\n                      isOutOfRange ? 'bg-red-500' : \n                      needsSetup ? 'bg-yellow-500' : \n                      'bg-green-500'\n                    }`}></div>\n                    <span className={`font-medium ${\n                      isCompact ? 'text-xs' : 'text-xs'\n                    } ${\n                      isOutOfRange ? 'text-red-400' : \n                      needsSetup ? 'text-yellow-400' : \n                      'text-green-400'\n                    }`}>\n                      {status.status === 'no-data' ? 'No Data' : \n                       status.status === 'no-thresholds' ? 'Setup Required' :\n                       status.status === 'in-range' ? 'In Range' : 'Out of Range'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Temperature display */}\n              <div className={isCompact ? 'mb-2' : 'mb-3'}>\n                <div className={`font-bold text-white ${isCompact ? 'text-lg mb-1' : 'text-2xl mb-1'}`}>\n                  {status.temperature ? `${status.temperature.toFixed(1)}°C` : '--'}\n                </div>\n                <div className=\"text-xs text-gray-400\">\n                  {logs.length} readings {isCompact ? '' : `• ${timeFilter.toUpperCase()}`}\n                </div>\n              </div>\n\n              {/* Action indicators - only show in non-compact mode or if critical */}\n              {!isCompact && (isOutOfRange || needsSetup) && (\n                <div className=\"pt-3 border-t border-[#2a2a2a]\">\n                  {isOutOfRange && (\n                    <div className=\"flex items-center space-x-1.5 text-red-400 text-xs\">\n                      <span>⚠️</span>\n                      <span>Attention required</span>\n                    </div>\n                  )}\n                  {needsSetup && (\n                    <div className=\"flex items-center space-x-1.5 text-yellow-400 text-xs\">\n                      <span>⚙️</span>\n                      <span>Configure thresholds</span>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Compact mode critical indicators */}\n              {isCompact && isOutOfRange && (\n                <div className=\"flex items-center justify-center text-red-400 text-xs\">\n                  <span>⚠️</span>\n                </div>\n              )}\n            </button>\n          );\n        }) : (\n          // Loading skeleton for equipment cards\n          <LoadingSkeleton variant=\"card\" count={6} height=\"80px\" />\n        )}\n      </div>\n\n      {/* Selected Equipment Chart */}\n      {!isLoaded ? (\n        // Loading skeleton for chart\n        <LoadingSkeleton variant=\"chart\" height=\"320px\" />\n      ) : equipment.length === 0 ? (\n        <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] w-full h-64 flex items-center justify-center\">\n          <p className=\"text-gray-400\">No equipment found to display analytics.</p>\n        </div>\n      ) : selectedEquipmentId ? (\n        <div className=\"chart-container\">\n          {(() => {\n            const selectedEquipment = getSelectedEquipment();\n            if (!selectedEquipment) return null;\n            \n            return (\n              <CleanTemperatureChart\n                key={selectedEquipment.id}\n                logs={getFilteredLogs(selectedEquipment)}\n                equipment={selectedEquipment}\n                timeFilter={timeFilter}\n              />\n            );\n          })()}\n        </div>\n      ) : (\n        <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] w-full h-64 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"text-4xl mb-4\">📊</div>\n            <p className=\"text-gray-400 mb-2\">Select an equipment to view its temperature chart</p>\n            <p className=\"text-sm text-gray-500\">Click on any equipment card above to see detailed analytics</p>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2321, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/hooks/useTemperatureWarnings.ts"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useGlobalWarning } from '@/contexts/GlobalWarningContext';\n\ninterface TemperatureLog {\n  id: string;\n  log_date: string;\n  log_time: string;\n  temperature_type: string;\n  temperature_celsius: number;\n  location: string | null;\n  notes: string | null;\n  photo_url: string | null;\n  logged_by: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface TemperatureEquipment {\n  id: string;\n  name: string;\n  equipment_type: string;\n  location: string | null;\n  min_temp_celsius: number | null;\n  max_temp_celsius: number | null;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface UseTemperatureWarningsProps {\n  allLogs: TemperatureLog[];\n  equipment: TemperatureEquipment[];\n}\n\nexport const useTemperatureWarnings = ({ allLogs, equipment }: UseTemperatureWarningsProps) => {\n  const { addWarning } = useGlobalWarning();\n\n  useEffect(() => {\n    // Check for \"no food items temped today\" warning\n    const checkFoodTemperatureWarning = () => {\n      const today = new Date();\n      const todayString = today.toISOString().split('T')[0];\n      \n      // Filter logs for today\n      const todayLogs = allLogs.filter(log => log.log_date === todayString);\n      \n      // Check if there are any food temperature logs for today\n      const foodLogsToday = todayLogs.filter(log => \n        log.temperature_type === 'food' || log.temperature_type === 'Food'\n      );\n\n      // If no food items were temped today, show warning\n      if (foodLogsToday.length === 0 && allLogs.length > 0) {\n        addWarning({\n          type: 'warning',\n          title: 'Temperature Monitoring Alert',\n          message: 'No food items have been temperature checked today. Ensure all food items are properly monitored for safety compliance.',\n          action: {\n            label: 'Go to Temperature Logs',\n            onClick: () => {\n              window.location.href = '/webapp/temperature';\n            }\n          },\n          dismissible: true,\n          autoHide: false,\n        });\n      }\n    };\n\n    // Check for equipment that hasn't been temperature checked in the last 8 hours\n    const checkEquipmentTemperatureWarning = () => {\n             const now = new Date();\n             const eightHoursAgo = new Date(now.getTime() - (8 * 60 * 60 * 1000)); // 8 hours ago\n             \n             // Filter logs from the last 8 hours\n             const recentLogs = allLogs.filter(log => {\n               const logDateTime = new Date(`${log.log_date}T${log.log_time}`);\n               return logDateTime >= eightHoursAgo && logDateTime <= now;\n             });\n\n             // Get active equipment that should be monitored\n             const activeEquipment = equipment.filter(eq => eq.is_active && eq.location);\n             \n             if (activeEquipment.length === 0) {\n               return;\n             }\n\n             // Check which equipment has been temperature checked in the last 8 hours\n             const checkedEquipment = new Set();\n             recentLogs.forEach(log => {\n               if (log.location) {\n                 checkedEquipment.add(log.location);\n               }\n             });\n\n             // Find equipment that hasn't been checked in the last 8 hours\n             const uncheckedEquipment = activeEquipment.filter(eq => \n               eq.location && !checkedEquipment.has(eq.location)\n             );\n\n             if (uncheckedEquipment.length > 0) {\n               const equipmentNames = uncheckedEquipment.map(eq => eq.name).join(', ');\n               const isMultiple = uncheckedEquipment.length > 1;\n        \n        addWarning({\n          type: 'warning',\n          title: 'Equipment Temperature Check Required',\n          message: `${isMultiple ? 'Equipment' : 'Equipment'} ${equipmentNames} ${isMultiple ? 'have' : 'has'} not been temperature checked in the last 8 hours. Ensure all active equipment is monitored for safety compliance.`,\n          action: {\n            label: 'Go to Temperature Logs',\n            onClick: () => {\n              window.location.href = '/webapp/temperature';\n            }\n          },\n          dismissible: true,\n          autoHide: false,\n               });\n             }\n    };\n\n    // Check for equipment out of range warnings\n    const checkEquipmentWarnings = () => {\n      const today = new Date();\n      const todayString = today.toISOString().split('T')[0];\n      const todayLogs = allLogs.filter(log => log.log_date === todayString);\n\n      equipment.forEach(eq => {\n        if (!eq.location || !eq.min_temp_celsius || !eq.max_temp_celsius) return;\n        \n        const equipmentLogs = todayLogs.filter(log => log.location === eq.location);\n        \n        if (equipmentLogs.length > 0) {\n          const outOfRangeLogs = equipmentLogs.filter(log => \n            log.temperature_celsius < eq.min_temp_celsius! || \n            log.temperature_celsius > eq.max_temp_celsius!\n          );\n\n          if (outOfRangeLogs.length > 0) {\n            addWarning({\n              type: 'error',\n              title: 'Temperature Out of Range',\n              message: `${eq.name} has recorded ${outOfRangeLogs.length} temperature reading(s) outside the safe range (${eq.min_temp_celsius}°C - ${eq.max_temp_celsius}°C).`,\n              action: {\n                label: 'View Details',\n                onClick: () => {\n                  window.location.href = '/webapp/temperature';\n                }\n              },\n              dismissible: true,\n              autoHide: false,\n            });\n          }\n        }\n      });\n    };\n\n    // Only run checks if we have data\n    if (allLogs.length > 0 && equipment.length > 0) {\n      checkFoodTemperatureWarning();\n      checkEquipmentTemperatureWarning();\n      checkEquipmentWarnings();\n    }\n  }, [allLogs, equipment, addWarning]);\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/temperature/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport { useCountryFormatting } from '@/hooks/useCountryFormatting';\nimport dynamic from 'next/dynamic';\nimport { TemperatureLog, TemperatureEquipment } from './types';\nimport { LoadingSkeleton } from '@/components/ui/LoadingSkeleton';\n\n// Dynamic imports for heavy components\nconst TemperatureLogsTab = dynamic(() => import('./components/TemperatureLogsTab'), {\n  loading: () => <LoadingSkeleton variant=\"table\" height=\"384px\" />,\n  ssr: false\n});\n\nconst TemperatureEquipmentTab = dynamic(() => import('./components/TemperatureEquipmentTab'), {\n  loading: () => <LoadingSkeleton variant=\"table\" height=\"384px\" />,\n  ssr: false\n});\n\n\nimport TemperatureAnalyticsTab from './components/TemperatureAnalyticsTab';\nimport { useTemperatureWarnings } from '@/hooks/useTemperatureWarnings';\n\n\nexport default function TemperatureLogsPage() {\n  const { t } = useTranslation();\n  const { formatDate } = useCountryFormatting();\n  \n  // Helper function to format time strings\n  const formatTime = (timeString: string) => {\n    if (!timeString) return '';\n    const [hours, minutes] = timeString.split(':');\n    return `${hours}:${minutes}`;\n  };\n  \n  // Helper function to format date strings\n  const formatDateString = (dateString: string) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    return formatDate(date);\n  };\n\n  const [logs, setLogs] = useState<TemperatureLog[]>([]);\n  const [allLogs, setAllLogs] = useState<TemperatureLog[]>([]);\n  const [equipment, setEquipment] = useState<TemperatureEquipment[]>([]);\n  const [loading, setLoading] = useState(false); // Start with false to prevent skeleton showing\n  const [isInitialLoad, setIsInitialLoad] = useState(false); // Start with false to prevent skeleton flash\n  const [activeTab, setActiveTab] = useState<'logs' | 'equipment' | 'analytics'>('analytics');\n  const [quickTempLoading, setQuickTempLoading] = useState<{[key: string]: boolean}>({});\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedType, setSelectedType] = useState('all');\n  const [newLog, setNewLog] = useState({\n    log_date: '',\n    log_time: '',\n    temperature_type: 'fridge',\n    temperature_celsius: '',\n    location: '',\n    notes: '',\n    logged_by: ''\n  });\n  const [showAddLog, setShowAddLog] = useState(false);\n\n  // Initialize temperature warnings\n  useTemperatureWarnings({ allLogs, equipment });\n\n  const temperatureTypes = [\n    { value: 'fridge', label: 'Fridge', icon: '🧊' },\n    { value: 'freezer', label: 'Freezer', icon: '❄️' },\n    { value: 'food_cooking', label: 'Food Cooking', icon: '🔥' },\n    { value: 'food_hot_holding', label: 'Food Hot Holding', icon: '🍲' },\n    { value: 'food_cold_holding', label: 'Food Cold Holding', icon: '🥗' },\n    { value: 'storage', label: 'Storage', icon: '📦' }\n  ];\n\n  const fetchLogs = async () => {\n    try {\n      let url = '/api/temperature-logs';\n      const params = new URLSearchParams();\n      if (selectedDate) params.append('date', selectedDate);\n      if (selectedType !== 'all') params.append('type', selectedType);\n      if (params.toString()) url += `?${params.toString()}`;\n\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.success) {\n        // If no data for selected date, automatically switch to most recent date with data\n        if (data.data.length === 0 && allLogs.length > 0) {\n          const datesWithLogs = [...new Set(allLogs.map(log => log.log_date))].sort().reverse();\n          if (datesWithLogs.length > 0) {\n            const mostRecentDate = datesWithLogs[0];\n            console.log(`No data for ${selectedDate}, switching to ${mostRecentDate}`);\n            setSelectedDate(mostRecentDate);\n            // Fetch logs for the most recent date\n            const fallbackUrl = `/api/temperature-logs?date=${mostRecentDate}${selectedType !== 'all' ? `&type=${selectedType}` : ''}`;\n            const fallbackResponse = await fetch(fallbackUrl);\n            const fallbackData = await fallbackResponse.json();\n            if (fallbackData.success) {\n              setLogs(fallbackData.data);\n            }\n            return;\n          }\n        }\n        setLogs(data.data);\n      }\n    } catch (error) {\n      console.error('fetchLogs - Error:', error);\n    }\n  };\n\n  const fetchAllLogs = async () => {\n    try {\n      const response = await fetch('/api/temperature-logs');\n      const data = await response.json();\n      console.log('fetchAllLogs - API response:', data);\n      if (data.success && data.data) {\n        console.log('fetchAllLogs - Setting allLogs:', data.data.length, 'logs');\n        setAllLogs(data.data);\n      }\n    } catch (error) {\n      console.error('fetchAllLogs - Error:', error);\n    }\n  };\n\n\n  const fetchEquipment = async () => {\n    try {\n      const response = await fetch('/api/temperature-equipment');\n      const data = await response.json();\n      console.log('fetchEquipment - API response:', data);\n      if (data.success) {\n        console.log('fetchEquipment - Setting equipment:', data.data.length, 'equipment');\n        setEquipment(data.data);\n      }\n    } catch (error) {\n      console.error('fetchEquipment - Error:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Initialize date/time values on client side to prevent hydration mismatch\n    const now = new Date();\n    setSelectedDate(now.toISOString().split('T')[0]);\n    setNewLog(prev => ({\n      ...prev,\n      log_date: now.toISOString().split('T')[0],\n      log_time: now.toTimeString().split(' ')[0].substring(0, 5)\n    }));\n  }, []);\n\n  // Set default date to most recent date with data after initial load\n  useEffect(() => {\n    if (allLogs.length > 0 && !isInitialLoad) {\n      // Find the most recent date with logs\n      const datesWithLogs = [...new Set(allLogs.map(log => log.log_date))].sort().reverse();\n      if (datesWithLogs.length > 0) {\n        setSelectedDate(datesWithLogs[0]);\n        setIsInitialLoad(true); // Mark as processed\n      }\n    }\n  }, [allLogs, isInitialLoad]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        \n        // Load all data in parallel for better performance\n        await Promise.all([\n          fetchLogs(),\n          fetchEquipment(),\n          fetchAllLogs()\n        ]);\n        \n        // No artificial delay needed\n      } catch (error) {\n        console.error('Error loading temperature data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Watch for changes in selectedDate or selectedType and refetch logs\n  useEffect(() => {\n    if (selectedDate) {\n      fetchLogs();\n    }\n  }, [selectedDate, selectedType]);\n\n  const handleAddLog = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/temperature-logs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...newLog,\n          temperature_celsius: parseFloat(newLog.temperature_celsius)\n        }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        setNewLog({\n          log_date: new Date().toISOString().split('T')[0],\n          log_time: new Date().toTimeString().split(' ')[0].substring(0, 5),\n          temperature_type: 'fridge',\n          temperature_celsius: '',\n          location: '',\n          notes: '',\n          logged_by: ''\n        });\n        setShowAddLog(false);\n        fetchLogs();\n        fetchAllLogs();\n      }\n    } catch (error) {\n      // Handle add log error gracefully\n    }\n  };\n\n  const handleDeleteLog = async (logId: number) => {\n    try {\n      const response = await fetch(`/api/temperature-logs/${logId}`, {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        fetchLogs();\n        fetchAllLogs();\n      }\n    } catch (error) {\n      // Handle delete error gracefully\n    }\n  };\n\n  const handleQuickTempLog = async (equipmentId: string, equipmentName: string, equipmentType: string) => {\n    setQuickTempLoading(prev => ({ ...prev, [equipmentId]: true }));\n    try {\n      const response = await fetch('/api/temperature-logs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          log_date: new Date().toISOString().split('T')[0],\n          log_time: new Date().toTimeString().split(' ')[0].substring(0, 5),\n          temperature_type: equipmentType,\n          temperature_celsius: 0, // Will be updated by user\n          location: equipmentName,\n          notes: 'Quick log',\n          logged_by: 'System'\n        }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        fetchLogs();\n        fetchAllLogs();\n      }\n    } catch (error) {\n      // Handle logging error gracefully\n      alert('Failed to log temperature. Please try again.');\n    } finally {\n      setQuickTempLoading(prev => ({ ...prev, [equipmentId]: false }));\n    }\n  };\n\n  const handleUpdateEquipment = async (equipmentId: string, updates: Partial<TemperatureEquipment>) => {\n    try {\n      const response = await fetch(`/api/temperature-equipment/${equipmentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updates),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        fetchEquipment();\n      }\n    } catch (error) {\n      // Handle update error gracefully\n    }\n  };\n\n  const handleCreateEquipment = async (name: string, equipmentType: string, location: string | null, minTemp: number | null, maxTemp: number | null) => {\n    try {\n      const response = await fetch('/api/temperature-equipment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          equipment_type: equipmentType,\n          location,\n          min_temp_celsius: minTemp,\n          max_temp_celsius: maxTemp,\n          is_active: true\n        }),\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        fetchEquipment();\n      }\n    } catch (error) {\n      // Handle create error gracefully\n    }\n  };\n\n  const handleDeleteEquipment = async (equipmentId: string) => {\n    try {\n      const response = await fetch(`/api/temperature-equipment/${equipmentId}`, {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n      if (data.success) {\n        fetchEquipment();\n      }\n    } catch (error) {\n      // Handle delete error gracefully\n    }\n  };\n\n\n  const getTypeIcon = (type: string) => {\n    const typeInfo = temperatureTypes.find(t => t.value === type);\n    return typeInfo?.icon || '🌡️';\n  };\n\n  const getTypeLabel = (type: string) => {\n    const typeInfo = temperatureTypes.find(t => t.value === type);\n    return typeInfo?.label || type;\n  };\n\n  const getFoodSafetyStatus = (temp: number, logTime: string, logDate: string, type: string) => {\n    if (type !== 'food_cooking' && type !== 'food_hot_holding' && type !== 'food_cold_holding') {\n      return null;\n    }\n\n    if (temp < 5 || temp > 60) {\n      return { status: 'safe', message: 'Outside danger zone', color: 'text-green-400', icon: '✅' };\n    }\n\n    const logDateTime = new Date(`${logDate}T${logTime}`);\n    const now = new Date();\n    const hoursInDangerZone = (now.getTime() - logDateTime.getTime()) / (1000 * 60 * 60);\n\n    if (hoursInDangerZone < 2) {\n      return { \n        status: 'safe', \n        message: `${(2 - hoursInDangerZone).toFixed(1)}h remaining - can refrigerate`, \n        color: 'text-green-400',\n        icon: '✅'\n      };\n    } else if (hoursInDangerZone < 4) {\n      return { \n        status: 'warning', \n        message: `${(4 - hoursInDangerZone).toFixed(1)}h remaining - use immediately`, \n        color: 'text-yellow-400',\n        icon: '⚠️'\n      };\n    } else {\n      return { \n        status: 'danger', \n        message: `${hoursInDangerZone.toFixed(1)}h in danger zone - DISCARD`, \n        color: 'text-red-400',\n        icon: '🚨'\n      };\n    }\n  };\n\n  // Only show content when data is ready\n  if (equipment.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Empty state - no skeleton, just dark background */}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-2\">\n            🌡️ {t('temperature.title', 'Temperature Logs')}\n          </h1>\n          <p className=\"text-gray-400\">{t('temperature.subtitle', 'Track fridge, freezer, and food temperatures for food safety compliance')}</p>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-8\">\n          <div className=\"flex space-x-1 bg-[#1f1f1f] p-1 rounded-2xl border border-[#2a2a2a]\">\n            <button\n              onClick={() => setActiveTab('logs')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:ring-offset-2 focus:ring-offset-[#0a0a0a] ${\n                activeTab === 'logs'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n              aria-pressed={activeTab === 'logs'}\n              aria-label=\"View temperature logs\"\n            >\n              📝 {t('temperature.logs', 'Logs')}\n            </button>\n            <button\n              onClick={() => setActiveTab('equipment')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:ring-offset-2 focus:ring-offset-[#0a0a0a] ${\n                activeTab === 'equipment'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n              aria-pressed={activeTab === 'equipment'}\n              aria-label=\"View temperature equipment\"\n            >\n              🏭 {t('temperature.equipment', 'Equipment')}\n            </button>\n            <button\n              onClick={() => setActiveTab('analytics')}\n              className={`px-6 py-3 rounded-xl font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:ring-offset-2 focus:ring-offset-[#0a0a0a] ${\n                activeTab === 'analytics'\n                  ? 'bg-[#29E7CD] text-black shadow-lg'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n              aria-pressed={activeTab === 'analytics'}\n              aria-label=\"View temperature analytics\"\n            >\n              📊 {t('temperature.analytics', 'Analytics')}\n            </button>\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'logs' && (\n          <TemperatureLogsTab\n            logs={logs}\n            equipment={equipment}\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            selectedType={selectedType}\n            setSelectedType={setSelectedType}\n            showAddLog={showAddLog}\n            setShowAddLog={setShowAddLog}\n            newLog={newLog}\n            setNewLog={setNewLog}\n            onAddLog={handleAddLog}\n            onRefreshLogs={fetchLogs}\n          />\n        )}\n\n        {activeTab === 'equipment' && (\n          <TemperatureEquipmentTab\n            equipment={equipment}\n            quickTempLoading={quickTempLoading}\n            onUpdateEquipment={handleUpdateEquipment}\n            onCreateEquipment={handleCreateEquipment}\n            onDeleteEquipment={handleDeleteEquipment}\n            onQuickTempLog={handleQuickTempLog}\n          />\n        )}\n\n\n        {activeTab === 'analytics' && (\n          <TemperatureAnalyticsTab\n            allLogs={allLogs}\n            equipment={equipment}\n          />\n        )}\n\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}