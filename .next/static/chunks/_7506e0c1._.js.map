{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/components/ui/LoadingSkeleton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\ninterface LoadingSkeletonProps {\n  variant?: 'card' | 'table' | 'chart' | 'list' | 'form' | 'stats' | 'text' | 'button';\n  className?: string;\n  count?: number;\n  height?: string;\n  width?: string;\n}\n\nexport function LoadingSkeleton({ \n  variant = 'card', \n  className = '', \n  count = 1, \n  height,\n  width \n}: LoadingSkeletonProps) {\n  const baseClasses = 'animate-pulse bg-[#2a2a2a] rounded-xl';\n  \n  const variants = {\n    card: 'h-32',\n    table: 'h-64',\n    chart: 'h-80',\n    list: 'h-16',\n    form: 'h-96',\n    stats: 'h-24',\n    text: 'h-4',\n    button: 'h-10 w-24'\n  };\n\n  const skeletonClasses = `${baseClasses} ${variants[variant]} ${className}`;\n  const style = {\n    ...(height && { height }),\n    ...(width && { width })\n  };\n\n  if (count === 1) {\n    return <div className={skeletonClasses} style={style}></div>;\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className={skeletonClasses} style={style}></div>\n      ))}\n    </div>\n  );\n}\n\n// Specialized skeleton components for common patterns\nexport function PageSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] p-4 sm:p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header skeleton */}\n        <div className=\"animate-pulse mb-8\">\n          <div className=\"h-8 bg-[#2a2a2a] rounded-3xl w-1/3 mb-4\"></div>\n          <div className=\"h-4 bg-[#2a2a2a] rounded-xl w-1/2\"></div>\n        </div>\n\n        {/* Action buttons skeleton */}\n        <div className=\"flex gap-3 mb-8\">\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-32 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-40 animate-pulse\"></div>\n          <div className=\"h-12 bg-[#2a2a2a] rounded-2xl w-28 animate-pulse\"></div>\n        </div>\n\n        {/* Main content skeleton */}\n        <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-16 bg-[#2a2a2a] rounded-xl\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function TableSkeleton({ rows = 5, columns = 4 }: { rows?: number; columns?: number }) {\n  return (\n    <div className=\"bg-[#1f1f1f] rounded-3xl shadow-lg border border-[#2a2a2a] overflow-hidden\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20 px-6 py-4 border-b border-[#2a2a2a]\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex gap-4\">\n            {Array.from({ length: columns }).map((_, i) => (\n              <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-24\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Rows */}\n      <div className=\"divide-y divide-[#2a2a2a]\">\n        {Array.from({ length: rows }).map((_, i) => (\n          <div key={i} className=\"px-6 py-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"flex gap-4\">\n                {Array.from({ length: columns }).map((_, j) => (\n                  <div key={j} className=\"h-4 bg-[#2a2a2a] rounded w-20\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function ChartSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/3 mb-4\"></div>\n        <div className=\"h-80 bg-[#2a2a2a] rounded-xl\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport function CardGridSkeleton({ count = 6 }: { count?: number }) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n      {Array.from({ length: count }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-4 rounded-2xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-3/4 mb-3\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-1/2 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function StatsGridSkeleton() {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <div key={i} className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a] animate-pulse\">\n          <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-3\"></div>\n          <div className=\"h-8 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n          <div className=\"h-3 bg-[#2a2a2a] rounded w-2/3\"></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function FormSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-6 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/4 mb-6\"></div>\n        <div className=\"space-y-4\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i}>\n              <div className=\"h-4 bg-[#2a2a2a] rounded w-1/3 mb-2\"></div>\n              <div className=\"h-10 bg-[#2a2a2a] rounded-xl\"></div>\n            </div>\n          ))}\n          <div className=\"h-10 bg-[#2a2a2a] rounded-xl w-24\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Landing page specific skeletons\nexport function HeroSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] flex items-center justify-center\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-16 bg-[#2a2a2a] rounded-3xl w-2/3 mb-8 mx-auto\"></div>\n          <div className=\"h-6 bg-[#2a2a2a] rounded-xl w-1/2 mb-12 mx-auto\"></div>\n          <div className=\"flex justify-center gap-4 mb-16\">\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-48\"></div>\n            <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-40\"></div>\n          </div>\n          <div className=\"h-96 bg-[#2a2a2a] rounded-3xl\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function PricingSkeleton() {\n  return (\n    <div className=\"bg-[#1f1f1f] p-8 rounded-3xl shadow-lg border border-[#2a2a2a]\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-[#2a2a2a] rounded-xl w-1/3 mb-6\"></div>\n        <div className=\"h-12 bg-[#2a2a2a] rounded-xl w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-[#2a2a2a] rounded w-1/2 mb-8\"></div>\n        <div className=\"space-y-4 mb-8\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"h-4 bg-[#2a2a2a] rounded w-full\"></div>\n          ))}\n        </div>\n        <div className=\"h-14 bg-[#2a2a2a] rounded-2xl w-full\"></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielkuschmierz/prepflow-landing/app/webapp/performance/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo, useRef } from 'react';\nimport { useTranslation } from '@/lib/useTranslation';\nimport dynamic from 'next/dynamic';\nimport { PageSkeleton, LoadingSkeleton } from '@/components/ui/LoadingSkeleton';\n\n// Dynamic imports for chart components\nconst BarChart = dynamic(() => import('recharts').then(mod => ({ default: mod.BarChart })), {\n  loading: () => <LoadingSkeleton variant=\"chart\" height=\"320px\" />,\n  ssr: false\n});\n\nconst PieChart = dynamic(() => import('recharts').then(mod => ({ default: mod.PieChart })), {\n  loading: () => <LoadingSkeleton variant=\"chart\" height=\"320px\" />,\n  ssr: false\n});\n\n// Import other recharts components normally\nimport { Bar, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\ninterface MenuDish {\n  id: string;\n  name: string;\n  selling_price: number;\n  profit_margin: number;\n  popularity_score: number;\n  food_cost: number;\n  gross_profit: number;\n  gross_profit_percentage: number;\n}\n\ninterface PerformanceItem extends MenuDish {\n  number_sold: number;\n  popularity_percentage: number;\n  profit_category: 'High' | 'Low';\n  popularity_category: 'High' | 'Low';\n  menu_item_class: 'Chef\\'s Kiss' | 'Hidden Gem' | 'Bargain Bucket' | 'Burnt Toast';\n}\n\nexport default function PerformancePage() {\n  const { t } = useTranslation();\n  const [performanceItems, setPerformanceItems] = useState<PerformanceItem[]>([]);\n  const [loading, setLoading] = useState(false); // Start with false to prevent skeleton flash\n  const [error, setError] = useState<string | null>(null);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<string>('gross_profit_percentage');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10;\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [csvData, setCsvData] = useState<string>('');\n  const [importing, setImporting] = useState(false);\n  const [showCharts, setShowCharts] = useState(false);\n  const [realtimeEnabled, setRealtimeEnabled] = useState(false);\n  const [performanceScore, setPerformanceScore] = useState(85);\n  const [performanceAlerts, setPerformanceAlerts] = useState<any[]>([]);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const [metadata, setMetadata] = useState<any>(null);\n  const realtimeSubscription = useRef<any>(null);\n\n  // Fetch dishes and sales data\n  useEffect(() => {\n    fetchPerformanceData();\n  }, []);\n\n  const fetchPerformanceData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/performance');\n      const result = await response.json();\n      \n      if (result.success) {\n        setPerformanceItems(result.data);\n        setMetadata(result.metadata);\n      } else {\n        setError(result.message || 'Failed to fetch performance data');\n      }\n    } catch (err) {\n      setError('Error fetching performance data');\n      // Handle fetch error gracefully\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleImport = async () => {\n    if (!csvData.trim()) return;\n    \n    setImporting(true);\n    try {\n      const lines = csvData.trim().split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      \n      for (let i = 1; i < lines.length; i++) {\n        const values = lines[i].split(',').map(v => v.trim());\n        const row: any = {};\n        \n        headers.forEach((header, index) => {\n          row[header.toLowerCase().replace(/\\s+/g, '_')] = values[index];\n        });\n        \n        // Find matching dish by name\n        const dish = performanceItems.find(d => \n          d.name.toLowerCase() === row.dish?.toLowerCase()\n        );\n        \n        if (dish && row.number_sold && row.popularity_percentage) {\n          await fetch('/api/performance', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              dish_id: dish.id,\n              number_sold: parseInt(row.number_sold),\n              popularity_percentage: parseFloat(row.popularity_percentage),\n              date: new Date().toISOString().split('T')[0]\n            })\n          });\n        }\n      }\n      \n      setShowImportModal(false);\n      setCsvData('');\n      fetchPerformanceData(); // Refresh data\n    } catch (err) {\n      // Handle import error gracefully\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  const handleExportCSV = () => {\n    const headers = [\n      'Dish', \n      'Number Sold', \n      'Popularity %', \n      'Total Revenue ex GST', \n      'Total Cost', \n      'Total Profit ex GST', \n      'Gross Profit %', \n      'Profit Cat', \n      'Popularity Cat', \n      'Menu Item Class'\n    ];\n    const csvContent = [\n      headers.join(','),\n      ...filteredAndSortedItems.map(item => [\n        item.name,\n        item.number_sold,\n        item.popularity_percentage.toFixed(2),\n        ((item.selling_price * item.number_sold) / 1.1).toFixed(2),\n        (item.food_cost * item.number_sold).toFixed(2),\n        (item.gross_profit * item.number_sold).toFixed(2),\n        item.gross_profit_percentage.toFixed(2),\n        item.profit_category,\n        item.popularity_category,\n        item.menu_item_class\n      ].join(','))\n    ].join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'performance-analysis.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const filteredAndSortedItems = useMemo(() => {\n    let filtered = performanceItems;\n\n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.profit_category === filterCategory);\n    }\n\n    if (searchTerm) {\n      filtered = filtered.filter(item =>\n        item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.profit_category.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.popularity_category.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    return [...filtered].sort((a, b) => {\n      let valA: any;\n      let valB: any;\n\n      switch (sortBy) {\n        case 'name':\n          valA = a.name.toLowerCase();\n          valB = b.name.toLowerCase();\n          break;\n        case 'number_sold':\n          valA = a.number_sold;\n          valB = b.number_sold;\n          break;\n        case 'popularity_percentage':\n          valA = a.popularity_percentage;\n          valB = b.popularity_percentage;\n          break;\n        case 'gross_profit_percentage':\n        default:\n          valA = a.gross_profit_percentage;\n          valB = b.gross_profit_percentage;\n          break;\n      }\n\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        return sortOrder === 'asc' ? valA.localeCompare(valB) : valB.localeCompare(valA);\n      }\n      return sortOrder === 'asc' ? valA - valB : valB - valA;\n    });\n  }, [performanceItems, filterCategory, searchTerm, sortBy, sortOrder]);\n\n  const totalPages = Math.ceil(filteredAndSortedItems.length / itemsPerPage);\n  const paginatedItems = filteredAndSortedItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'Chef\\'s Kiss':\n        return 'bg-green-500/20 text-green-400 border border-green-500/30';\n      case 'Hidden Gem':\n        return 'bg-blue-500/20 text-blue-400 border border-blue-500/30';\n      case 'Bargain Bucket':\n        return 'bg-orange-500/20 text-orange-400 border border-orange-500/30';\n      case 'Burnt Toast':\n        return 'bg-red-500/20 text-red-400 border border-red-500/30';\n      default:\n        return 'bg-gray-500/20 text-gray-400 border border-gray-500/30';\n    }\n  };\n\n  const formatCurrency = (amount: number) => `$${amount.toFixed(2)}`;\n  const formatPercentage = (percentage: number) => `${percentage.toFixed(2)}%`;\n\n  // Mock realtime subscription setup\n  const setupRealtimeSubscription = () => {\n    // Mock implementation for now\n    setLastUpdate(new Date());\n  };\n\n  if (loading) {\n    return <PageSkeleton />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-[#0a0a0a] text-white p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-6\">\n            <h2 className=\"text-xl font-semibold text-red-400 mb-2\">Error</h2>\n            <p className=\"text-red-300\">{error}</p>\n            <button\n              onClick={fetchPerformanceData}\n              className=\"mt-4 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg transition-colors\"\n            >\n              Retry\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0a0a0a] text-white p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header with Performance Score and Real-time Status */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-start mb-4\">\n            <div>\n              <h1 className=\"text-4xl font-bold text-white mb-2\">\n                Performance Analysis\n              </h1>\n              <p className=\"text-gray-300 text-lg\">\n                Analyze your menu performance and profitability\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-right\">\n                <div className=\"text-sm text-gray-400\">Performance Score</div>\n                <div className={`text-2xl font-bold ${\n                  performanceScore >= 90 ? 'text-green-400' :\n                  performanceScore >= 70 ? 'text-yellow-400' : 'text-red-400'\n                }`}>\n                  {performanceScore}/100\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${\n                  realtimeEnabled ? 'bg-green-400 animate-pulse' : 'bg-gray-400'\n                }`}></div>\n                <span className=\"text-sm text-gray-300\">\n                  {realtimeEnabled ? 'Live' : 'Offline'}\n                </span>\n              </div>\n              {lastUpdate && (\n                <div className=\"text-right\">\n                  <div className=\"text-xs text-gray-400\">Last Update</div>\n                  <div className=\"text-xs text-gray-300\">\n                    {lastUpdate.toLocaleTimeString()}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          {performanceAlerts.length > 0 && (\n            <div className=\"mb-4 p-4 bg-yellow-900/20 border border-yellow-500/30 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <svg className=\"w-5 h-5 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\"/>\n                </svg>\n                <span className=\"text-yellow-400 font-medium\">Performance Alerts</span>\n              </div>\n              <div className=\"space-y-1\">\n                {performanceAlerts.slice(-3).map((alert) => (\n                  <div key={alert.id} className=\"text-sm text-yellow-300\">\n                    {alert.message}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n         {/* Dynamic Thresholds Display */}\n         {metadata && (\n           <div className=\"bg-[#1f1f1f] rounded-2xl border border-[#2a2a2a] p-6 mb-8\">\n             <h3 className=\"text-xl font-semibold text-white mb-4\">PrepFlow COGS Dynamic Methodology</h3>\n             <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n               <div className=\"text-center\">\n                 <div className=\"text-sm text-gray-400 mb-1\">Methodology</div>\n                 <div className=\"text-lg font-semibold text-[#29E7CD]\">{metadata.methodology}</div>\n               </div>\n               <div className=\"text-center\">\n                 <div className=\"text-sm text-gray-400 mb-1\">Average Profit Margin</div>\n                 <div className=\"text-lg font-semibold text-white\">{metadata.averageProfitMargin?.toFixed(1)}%</div>\n               </div>\n               <div className=\"text-center\">\n                 <div className=\"text-sm text-gray-400 mb-1\">Average Popularity</div>\n                 <div className=\"text-lg font-semibold text-white\">{metadata.averagePopularity?.toFixed(1)}%</div>\n               </div>\n               <div className=\"text-center\">\n                 <div className=\"text-sm text-gray-400 mb-1\">Popularity Threshold</div>\n                 <div className=\"text-lg font-semibold text-[#D925C7]\">{metadata.popularityThreshold?.toFixed(1)}%</div>\n               </div>\n             </div>\n             <div className=\"mt-4 text-sm text-gray-300\">\n               <p><strong>Profit Check:</strong> HIGH if above menu average ({metadata.averageProfitMargin?.toFixed(1)}%), LOW if below</p>\n               <p><strong>Popularity Check:</strong> HIGH if ≥ 80% of average popularity ({metadata.popularityThreshold?.toFixed(1)}%), LOW if below</p>\n             </div>\n           </div>\n         )}\n\n         {/* Controls */}\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n          <div className=\"flex flex-col\">\n            <label className=\"text-sm font-medium text-gray-300 mb-2\">Search</label>\n            <input\n              type=\"text\"\n              placeholder=\"Search dishes...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            />\n          </div>\n          \n          <div className=\"flex flex-col\">\n            <label className=\"text-sm font-medium text-gray-300 mb-2\">Category</label>\n            <select\n              value={filterCategory}\n              onChange={(e) => setFilterCategory(e.target.value)}\n              className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            >\n              <option value=\"all\">All Categories</option>\n              <option value=\"Chef's Kiss\">Chef's Kiss</option>\n              <option value=\"Hidden Gem\">Hidden Gem</option>\n              <option value=\"Bargain Bucket\">Bargain Bucket</option>\n              <option value=\"Burnt Toast\">Burnt Toast</option>\n            </select>\n          </div>\n          \n          <div className=\"flex flex-col\">\n            <label className=\"text-sm font-medium text-gray-300 mb-2\">Sort By</label>\n            <select\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value)}\n              className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            >\n              <option value=\"gross_profit_percentage\">Gross Profit %</option>\n              <option value=\"number_sold\">Number Sold</option>\n              <option value=\"popularity_percentage\">Popularity %</option>\n              <option value=\"name\">Name</option>\n            </select>\n          </div>\n          \n          <div className=\"flex flex-col\">\n            <label className=\"text-sm font-medium text-gray-300 mb-2\">Order</label>\n            <select\n              value={sortOrder}\n              onChange={(e) => setSortOrder(e.target.value as 'asc' | 'desc')}\n              className=\"px-4 py-2 bg-[#2a2a2a] border border-[#2a2a2a] rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent\"\n            >\n              <option value=\"desc\">Descending</option>\n              <option value=\"asc\">Ascending</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex flex-wrap gap-4 mb-8\">\n          <button\n            onClick={() => setShowImportModal(true)}\n            className=\"bg-[#29E7CD] hover:bg-[#29E7CD]/80 text-black px-6 py-2 rounded-lg font-medium transition-colors flex items-center gap-2\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\"/>\n            </svg>\n            Import Sales Data\n          </button>\n          <button\n            onClick={handleExportCSV}\n            className=\"bg-[#3B82F6] hover:bg-[#3B82F6]/80 text-white px-6 py-2 rounded-lg font-medium transition-colors flex items-center gap-2\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\"/>\n            </svg>\n            Export CSV\n          </button>\n          <button\n            onClick={() => setShowCharts(!showCharts)}\n            className=\"bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-lg font-medium transition-colors flex items-center gap-2\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path d={showCharts ? \"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" : \"M10 12a2 2 0 100-4 2 2 0 000 4zM3.05 13a1 1 0 011.414 0L9 16.536V19a1 1 0 11-2 0v-2.464L4.464 13a1 1 0 010-1.414zM16.95 7a1 1 0 010 1.414L14.536 10H17a1 1 0 110 2h-2.464l2.414 2.414a1 1 0 11-1.414 1.414L12 13.414V16a1 1 0 11-2 0v-2.586l-2.414 2.414a1 1 0 11-1.414-1.414L10.536 12H8a1 1 0 110-2h2.536L8.122 7.586a1 1 0 111.414-1.414L12 8.586V6a1 1 0 112 0v2.586l2.414-2.414A1 1 0 0116.95 7z\"}/>\n            </svg>\n            {showCharts ? 'Hide Charts' : 'Show Charts'}\n          </button>\n          <button\n            onClick={() => {\n              setRealtimeEnabled(!realtimeEnabled);\n              if (!realtimeEnabled) {\n                setupRealtimeSubscription();\n              } else {\n                if (realtimeSubscription.current) {\n                  realtimeSubscription.current.unsubscribe();\n                }\n              }\n            }}\n            className={`px-6 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n              realtimeEnabled\n                ? 'bg-green-600 hover:bg-green-700 text-white'\n                : 'bg-gray-600 hover:bg-gray-700 text-white'\n            }`}\n          >\n            <div className={`w-3 h-3 rounded-full ${\n              realtimeEnabled ? 'bg-green-400 animate-pulse' : 'bg-gray-400'\n            }`}></div>\n            {realtimeEnabled ? 'Disable Real-time' : 'Enable Real-time'}\n          </button>\n        </div>\n\n        {/* Charts */}\n        {showCharts && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n            {/* Bar Chart - Profit by Category */}\n            <div className=\"bg-[#1f1f1f] rounded-2xl border border-[#2a2a2a] p-6\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Profit by Category</h3>\n              <div className=\"h-80 w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={[\n                      {\n                        name: 'Chef\\'s Kiss',\n                        profit: performanceItems.filter(item => item.menu_item_class === 'Chef\\'s Kiss').reduce((acc, item) => acc + item.gross_profit_percentage, 0) / Math.max(1, performanceItems.filter(item => item.menu_item_class === 'Chef\\'s Kiss').length)\n                      },\n                      {\n                        name: 'Hidden Gem',\n                        profit: performanceItems.filter(item => item.menu_item_class === 'Hidden Gem').reduce((acc, item) => acc + item.gross_profit_percentage, 0) / Math.max(1, performanceItems.filter(item => item.menu_item_class === 'Hidden Gem').length)\n                      },\n                      {\n                        name: 'Bargain Bucket',\n                        profit: performanceItems.filter(item => item.menu_item_class === 'Bargain Bucket').reduce((acc, item) => acc + item.gross_profit_percentage, 0) / Math.max(1, performanceItems.filter(item => item.menu_item_class === 'Bargain Bucket').length)\n                      },\n                      {\n                        name: 'Burnt Toast',\n                        profit: performanceItems.filter(item => item.menu_item_class === 'Burnt Toast').reduce((acc, item) => acc + item.gross_profit_percentage, 0) / Math.max(1, performanceItems.filter(item => item.menu_item_class === 'Burnt Toast').length)\n                      }\n                    ]}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2a2a2a\" />\n                    <XAxis \n                      dataKey=\"name\" \n                      stroke=\"#9ca3af\"\n                      fontSize={12}\n                      tick={{ fill: '#9ca3af' }}\n                    />\n                    <YAxis \n                      stroke=\"#9ca3af\"\n                      fontSize={12}\n                      tick={{ fill: '#9ca3af' }}\n                      tickFormatter={(value) => `${value}%`}\n                    />\n                    <Tooltip\n                      contentStyle={{\n                        backgroundColor: 'rgba(31, 31, 31, 0.95)',\n                        border: '1px solid #29E7CD',\n                        borderRadius: '8px',\n                        color: '#ffffff'\n                      }}\n                      labelStyle={{ color: '#ffffff' }}\n                      formatter={(value: any) => [`${value.toFixed(1)}%`, 'Average Profit']}\n                    />\n                    <Bar \n                      dataKey=\"profit\" \n                      fill=\"#29E7CD\"\n                      radius={[4, 4, 0, 0]}\n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n\n            {/* Pie Chart - Category Distribution */}\n            <div className=\"bg-[#1f1f1f] rounded-2xl border border-[#2a2a2a] p-6\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Category Distribution</h3>\n              <div className=\"h-80 w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={[\n                        { name: 'Chef\\'s Kiss', value: performanceItems.filter(item => item.menu_item_class === 'Chef\\'s Kiss').length, color: '#22c55e' },\n                        { name: 'Hidden Gem', value: performanceItems.filter(item => item.menu_item_class === 'Hidden Gem').length, color: '#3b82f6' },\n                        { name: 'Bargain Bucket', value: performanceItems.filter(item => item.menu_item_class === 'Bargain Bucket').length, color: '#f97316' },\n                        { name: 'Burnt Toast', value: performanceItems.filter(item => item.menu_item_class === 'Burnt Toast').length, color: '#ef4444' }\n                      ]}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      label={({ name, value }) => `${name}: ${value}`}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                    >\n                      {[\n                        { name: 'Chef\\'s Kiss', value: performanceItems.filter(item => item.menu_item_class === 'Chef\\'s Kiss').length, color: '#22c55e' },\n                        { name: 'Hidden Gem', value: performanceItems.filter(item => item.menu_item_class === 'Hidden Gem').length, color: '#3b82f6' },\n                        { name: 'Bargain Bucket', value: performanceItems.filter(item => item.menu_item_class === 'Bargain Bucket').length, color: '#f97316' },\n                        { name: 'Burnt Toast', value: performanceItems.filter(item => item.menu_item_class === 'Burnt Toast').length, color: '#ef4444' }\n                      ].map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={entry.color} />\n                      ))}\n                    </Pie>\n                    <Tooltip\n                      contentStyle={{\n                        backgroundColor: 'rgba(31, 31, 31, 0.95)',\n                        border: '1px solid #29E7CD',\n                        borderRadius: '8px',\n                        color: '#ffffff'\n                      }}\n                      labelStyle={{ color: '#ffffff' }}\n                    />\n                    <Legend \n                      wrapperStyle={{ color: '#ffffff' }}\n                      verticalAlign=\"bottom\"\n                      height={36}\n                    />\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        )}\n\n         {/* Data Table - Simplified Format */}\n         <div className=\"bg-[#1f1f1f] rounded-2xl border border-[#2a2a2a] overflow-hidden\">\n           <div className=\"overflow-x-auto\">\n             <table className=\"w-full\">\n               <thead>\n                 <tr className=\"bg-gradient-to-r from-[#2a2a2a]/50 to-[#2a2a2a]/20\">\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Dish\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Number Sold\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Popularity %\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Total Revenue ex GST\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Total Cost\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Total Profit ex GST\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Gross Profit %\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Profit Cat\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Popularity Cat\n                   </th>\n                   <th className=\"px-4 py-3 text-left text-sm font-medium text-gray-300\">\n                     Menu Item Class\n                   </th>\n                 </tr>\n               </thead>\n               <tbody>\n                 {paginatedItems.map((item, index) => (\n                   <tr key={item.id} className=\"border-t border-[#2a2a2a] hover:bg-[#2a2a2a]/20 transition-colors\">\n                     <td className=\"px-4 py-3 text-white font-medium\">\n                       {item.name}\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {item.number_sold}\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {item.popularity_percentage.toFixed(2)}%\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {formatCurrency((item.selling_price * item.number_sold) / 1.1)}\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {formatCurrency(item.food_cost * item.number_sold)}\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {formatCurrency(item.gross_profit * item.number_sold)}\n                     </td>\n                     <td className=\"px-4 py-3 text-gray-300 text-center\">\n                       {formatPercentage(item.gross_profit_percentage)}\n                     </td>\n                     <td className=\"px-4 py-3 text-center\">\n                       <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                         item.profit_category === 'High' \n                           ? 'bg-green-500/20 text-green-400 border border-green-500/30' \n                           : 'bg-red-500/20 text-red-400 border border-red-500/30'\n                       }`}>\n                         {item.profit_category}\n                       </span>\n                     </td>\n                     <td className=\"px-4 py-3 text-center\">\n                       <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                         item.popularity_category === 'High' \n                           ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' \n                           : 'bg-orange-500/20 text-orange-400 border border-orange-500/30'\n                       }`}>\n                         {item.popularity_category}\n                       </span>\n                     </td>\n                     <td className=\"px-4 py-3 text-center\">\n                       <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                         item.menu_item_class === 'Chef\\'s Kiss' ? 'bg-green-500/20 text-green-400 border border-green-500/30' :\n                         item.menu_item_class === 'Hidden Gem' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :\n                         item.menu_item_class === 'Bargain Bucket' ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30' :\n                         'bg-red-500/20 text-red-400 border border-red-500/30'\n                       }`}>\n                         {item.menu_item_class}\n                       </span>\n                     </td>\n                   </tr>\n                 ))}\n               </tbody>\n             </table>\n           </div>\n         </div>\n\n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"flex justify-center items-center space-x-2 mt-8\">\n            <button\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n              disabled={currentPage === 1}\n              className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 disabled:bg-gray-800 disabled:text-gray-500 text-white rounded-lg transition-colors\"\n            >\n              Previous\n            </button>\n            <span className=\"px-4 py-2 text-gray-300\">\n              Page {currentPage} of {totalPages}\n            </span>\n            <button\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n              disabled={currentPage === totalPages}\n              className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 disabled:bg-gray-800 disabled:text-gray-500 text-white rounded-lg transition-colors\"\n            >\n              Next\n            </button>\n          </div>\n        )}\n\n        {/* Import Modal */}\n        {showImportModal && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n            <div className=\"bg-[#1f1f1f] rounded-2xl border border-[#2a2a2a] p-6 w-full max-w-2xl\">\n              <h3 className=\"text-xl font-semibold text-white mb-4\">Import Sales Data</h3>\n              <p className=\"text-gray-300 mb-4\">\n                Paste your CSV data below. Format: Dish, Number Sold, Popularity %\n              </p>\n              <textarea\n                value={csvData}\n                onChange={(e) => setCsvData(e.target.value)}\n                placeholder=\"Dish, Number Sold, Popularity %&#10;Double Cheese Burger, 175, 10.85&#10;Hot Dog, 158, 9.80\"\n                className=\"w-full h-40 px-4 py-3 bg-[#2a2a2a] border border-[#2a2a2a] rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#29E7CD] focus:border-transparent resize-none\"\n              />\n              <div className=\"flex justify-end space-x-4 mt-6\">\n                <button\n                  onClick={() => setShowImportModal(false)}\n                  className=\"px-6 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleImport}\n                  disabled={importing || !csvData.trim()}\n                  className=\"px-6 py-2 bg-[#29E7CD] hover:bg-[#29E7CD]/80 disabled:bg-gray-600 text-black rounded-lg transition-colors\"\n                >\n                  {importing ? 'Importing...' : 'Import'}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}